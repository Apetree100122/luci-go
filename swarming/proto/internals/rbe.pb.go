// Copyright 2022 The LUCI Authors. All rights reserved.
// Use of this source code is governed under the Apache License, Version 2.0
// that can be found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: go.chromium.org/luci/swarming/proto/internals/rbe.proto

package internalspb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TaggedMessage_PayloadType int32

const (
	TaggedMessage_PAYLOAD_TYPE_UNSPECIFIED TaggedMessage_PayloadType = 0
	TaggedMessage_POLL_STATE               TaggedMessage_PayloadType = 1 // payload is wirepb-serialized PollState
)

// Enum value maps for TaggedMessage_PayloadType.
var (
	TaggedMessage_PayloadType_name = map[int32]string{
		0: "PAYLOAD_TYPE_UNSPECIFIED",
		1: "POLL_STATE",
	}
	TaggedMessage_PayloadType_value = map[string]int32{
		"PAYLOAD_TYPE_UNSPECIFIED": 0,
		"POLL_STATE":               1,
	}
)

func (x TaggedMessage_PayloadType) Enum() *TaggedMessage_PayloadType {
	p := new(TaggedMessage_PayloadType)
	*p = x
	return p
}

func (x TaggedMessage_PayloadType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaggedMessage_PayloadType) Descriptor() protoreflect.EnumDescriptor {
	return file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_enumTypes[0].Descriptor()
}

func (TaggedMessage_PayloadType) Type() protoreflect.EnumType {
	return &file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_enumTypes[0]
}

func (x TaggedMessage_PayloadType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaggedMessage_PayloadType.Descriptor instead.
func (TaggedMessage_PayloadType) EnumDescriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_rawDescGZIP(), []int{0, 0}
}

// TaggedMessage is an envelope for an HMAC-tagged protobuf message.
//
// A secret key that was used for tagging should be communicated off band (e.g.
// stored in some pre-agreed Google Secret Manager secret).
//
// hmac_sha256 is calculated as:
//
//	hmac_sha256("%d" % payload_type + "\n" + payload, secret_key).
type TaggedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayloadType TaggedMessage_PayloadType `protobuf:"varint,1,opt,name=payload_type,json=payloadType,proto3,enum=swarming.internals.rbe.TaggedMessage_PayloadType" json:"payload_type,omitempty"` // identifies the payload proto message type
	Payload     []byte                    `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`                                                                                   // the serialized payload proto message
	HmacSha256  []byte                    `protobuf:"bytes,3,opt,name=hmac_sha256,json=hmacSha256,proto3" json:"hmac_sha256,omitempty"`                                                           // HMAC of the payload, see the comment above
}

func (x *TaggedMessage) Reset() {
	*x = TaggedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaggedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaggedMessage) ProtoMessage() {}

func (x *TaggedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaggedMessage.ProtoReflect.Descriptor instead.
func (*TaggedMessage) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_rawDescGZIP(), []int{0}
}

func (x *TaggedMessage) GetPayloadType() TaggedMessage_PayloadType {
	if x != nil {
		return x.PayloadType
	}
	return TaggedMessage_PAYLOAD_TYPE_UNSPECIFIED
}

func (x *TaggedMessage) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *TaggedMessage) GetHmacSha256() []byte {
	if x != nil {
		return x.HmacSha256
	}
	return nil
}

// PollState is produced by the Python server and passed to the Go server.
//
// It travels wrapped in a TaggedMessage. Once the HMAC tag is verified, the Go
// server can trust that this message was generated by the Python server and was
// not tampered with.
//
// It is generated by "/bot/poll" endpoint for bots in the RBE mode. Such bots
// then pass it to the "/bot/rbe/..." endpoints. It contains RBE-related
// parameters for this particular bot produced based on the bot credentials and
// Python server configs.
//
// It also contains instructions how to authenticate the bot on the Go side.
// They are derived based on how the Python server authenticated this particular
// bot. They are tightly coupled to swarming.config.BotAuth message.
//
// Once the Go server verifies the HMAC tag, and checks that the bot presented
// the exact same credentials as used by the Python side, the Go side can trust
// that this message was not tampered with and was not "substituted" (i.e.
// taken from one bot and replayed on another).
type PollState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique ID of this message (primary to correlate logs that use it).
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Expiration time of this message. It should not be used once it expires.
	Expiry *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=expiry,proto3" json:"expiry,omitempty"`
	// Full RBE instance name to use.
	RbeInstance        string                 `protobuf:"bytes,3,opt,name=rbe_instance,json=rbeInstance,proto3" json:"rbe_instance,omitempty"`
	EnforcedDimensions []*PollState_Dimension `protobuf:"bytes,4,rep,name=enforced_dimensions,json=enforcedDimensions,proto3" json:"enforced_dimensions,omitempty"`
	DebugInfo          *PollState_DebugInfo   `protobuf:"bytes,5,opt,name=debug_info,json=debugInfo,proto3" json:"debug_info,omitempty"`
	// If set, the bot should be in the corresponding IP allowlist (in addition
	// to the primary auth check described by auth_method). Always set if
	// auth_method is IPAllowlistAuth.
	IpAllowlist string `protobuf:"bytes,10,opt,name=ip_allowlist,json=ipAllowlist,proto3" json:"ip_allowlist,omitempty"`
	// Describes how to authenticate the bot. See swarming.config.BotAuth.
	//
	// Must be set.
	//
	// Types that are assignable to AuthMethod:
	//
	//	*PollState_GceAuth
	//	*PollState_ServiceAccountAuth_
	//	*PollState_LuciMachineTokenAuth
	//	*PollState_IpAllowlistAuth
	AuthMethod isPollState_AuthMethod `protobuf_oneof:"auth_method"`
}

func (x *PollState) Reset() {
	*x = PollState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PollState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollState) ProtoMessage() {}

func (x *PollState) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollState.ProtoReflect.Descriptor instead.
func (*PollState) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_rawDescGZIP(), []int{1}
}

func (x *PollState) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PollState) GetExpiry() *timestamppb.Timestamp {
	if x != nil {
		return x.Expiry
	}
	return nil
}

func (x *PollState) GetRbeInstance() string {
	if x != nil {
		return x.RbeInstance
	}
	return ""
}

func (x *PollState) GetEnforcedDimensions() []*PollState_Dimension {
	if x != nil {
		return x.EnforcedDimensions
	}
	return nil
}

func (x *PollState) GetDebugInfo() *PollState_DebugInfo {
	if x != nil {
		return x.DebugInfo
	}
	return nil
}

func (x *PollState) GetIpAllowlist() string {
	if x != nil {
		return x.IpAllowlist
	}
	return ""
}

func (m *PollState) GetAuthMethod() isPollState_AuthMethod {
	if m != nil {
		return m.AuthMethod
	}
	return nil
}

func (x *PollState) GetGceAuth() *PollState_GCEAuth {
	if x, ok := x.GetAuthMethod().(*PollState_GceAuth); ok {
		return x.GceAuth
	}
	return nil
}

func (x *PollState) GetServiceAccountAuth() *PollState_ServiceAccountAuth {
	if x, ok := x.GetAuthMethod().(*PollState_ServiceAccountAuth_); ok {
		return x.ServiceAccountAuth
	}
	return nil
}

func (x *PollState) GetLuciMachineTokenAuth() *PollState_LUCIMachineTokenAuth {
	if x, ok := x.GetAuthMethod().(*PollState_LuciMachineTokenAuth); ok {
		return x.LuciMachineTokenAuth
	}
	return nil
}

func (x *PollState) GetIpAllowlistAuth() *PollState_IPAllowlistAuth {
	if x, ok := x.GetAuthMethod().(*PollState_IpAllowlistAuth); ok {
		return x.IpAllowlistAuth
	}
	return nil
}

type isPollState_AuthMethod interface {
	isPollState_AuthMethod()
}

type PollState_GceAuth struct {
	GceAuth *PollState_GCEAuth `protobuf:"bytes,11,opt,name=gce_auth,json=gceAuth,proto3,oneof"`
}

type PollState_ServiceAccountAuth_ struct {
	ServiceAccountAuth *PollState_ServiceAccountAuth `protobuf:"bytes,12,opt,name=service_account_auth,json=serviceAccountAuth,proto3,oneof"`
}

type PollState_LuciMachineTokenAuth struct {
	LuciMachineTokenAuth *PollState_LUCIMachineTokenAuth `protobuf:"bytes,13,opt,name=luci_machine_token_auth,json=luciMachineTokenAuth,proto3,oneof"`
}

type PollState_IpAllowlistAuth struct {
	IpAllowlistAuth *PollState_IPAllowlistAuth `protobuf:"bytes,14,opt,name=ip_allowlist_auth,json=ipAllowlistAuth,proto3,oneof"`
}

func (*PollState_GceAuth) isPollState_AuthMethod() {}

func (*PollState_ServiceAccountAuth_) isPollState_AuthMethod() {}

func (*PollState_LuciMachineTokenAuth) isPollState_AuthMethod() {}

func (*PollState_IpAllowlistAuth) isPollState_AuthMethod() {}

// Override these particular dimensions when contacting RBE.
//
// These values will be used instead of whatever the bot is reporting. This is
// used for security-sensitive dimensions like `id` and `pool`.
//
// `id` is always populated and has a single value matching the bot ID.
type PollState_Dimension struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Values []string `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *PollState_Dimension) Reset() {
	*x = PollState_Dimension{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PollState_Dimension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollState_Dimension) ProtoMessage() {}

func (x *PollState_Dimension) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollState_Dimension.ProtoReflect.Descriptor instead.
func (*PollState_Dimension) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_rawDescGZIP(), []int{1, 0}
}

func (x *PollState_Dimension) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PollState_Dimension) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

// Information for logs and debugging (not passed to RBE).
type PollState_DebugInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Created         *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=created,proto3" json:"created,omitempty"`                                        // when this message was created
	SwarmingVersion string                 `protobuf:"bytes,2,opt,name=swarming_version,json=swarmingVersion,proto3" json:"swarming_version,omitempty"` // version of the Swarming code
	RequestId       string                 `protobuf:"bytes,3,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`                   // ID of the "/bot/poll" request
}

func (x *PollState_DebugInfo) Reset() {
	*x = PollState_DebugInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PollState_DebugInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollState_DebugInfo) ProtoMessage() {}

func (x *PollState_DebugInfo) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollState_DebugInfo.ProtoReflect.Descriptor instead.
func (*PollState_DebugInfo) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_rawDescGZIP(), []int{1, 1}
}

func (x *PollState_DebugInfo) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *PollState_DebugInfo) GetSwarmingVersion() string {
	if x != nil {
		return x.SwarmingVersion
	}
	return ""
}

func (x *PollState_DebugInfo) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

// If set, use `X-Luci-Gce-Vm-Token` header for auth.
//
// This header should contain JWT with signed VM metadata with the following
// expectations:
//   - Audience matches https://[*-dot-]<app>.appspot.com
//   - google.compute_engine.project_id field matches `gce_project`.
//   - google.compute_engine.instance_name matches `gce_instance`.
type PollState_GCEAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GceProject  string `protobuf:"bytes,1,opt,name=gce_project,json=gceProject,proto3" json:"gce_project,omitempty"`
	GceInstance string `protobuf:"bytes,2,opt,name=gce_instance,json=gceInstance,proto3" json:"gce_instance,omitempty"`
}

func (x *PollState_GCEAuth) Reset() {
	*x = PollState_GCEAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PollState_GCEAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollState_GCEAuth) ProtoMessage() {}

func (x *PollState_GCEAuth) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollState_GCEAuth.ProtoReflect.Descriptor instead.
func (*PollState_GCEAuth) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_rawDescGZIP(), []int{1, 2}
}

func (x *PollState_GCEAuth) GetGceProject() string {
	if x != nil {
		return x.GceProject
	}
	return ""
}

func (x *PollState_GCEAuth) GetGceInstance() string {
	if x != nil {
		return x.GceInstance
	}
	return ""
}

// If set, use `Authorization` header with OAuth2 access tokens for auth.
//
// The token should have "https://www.googleapis.com/auth/userinfo.email"
// scope and belong to the given service account.
type PollState_ServiceAccountAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceAccount string `protobuf:"bytes,1,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty"`
}

func (x *PollState_ServiceAccountAuth) Reset() {
	*x = PollState_ServiceAccountAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PollState_ServiceAccountAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollState_ServiceAccountAuth) ProtoMessage() {}

func (x *PollState_ServiceAccountAuth) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollState_ServiceAccountAuth.ProtoReflect.Descriptor instead.
func (*PollState_ServiceAccountAuth) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_rawDescGZIP(), []int{1, 3}
}

func (x *PollState_ServiceAccountAuth) GetServiceAccount() string {
	if x != nil {
		return x.ServiceAccount
	}
	return ""
}

// If set, use `X-Luci-Machine-Token` header with LUCI machine token.
//
// The token should have the corresponding FQDN in it.
type PollState_LUCIMachineTokenAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MachineFqdn string `protobuf:"bytes,1,opt,name=machine_fqdn,json=machineFqdn,proto3" json:"machine_fqdn,omitempty"`
}

func (x *PollState_LUCIMachineTokenAuth) Reset() {
	*x = PollState_LUCIMachineTokenAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PollState_LUCIMachineTokenAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollState_LUCIMachineTokenAuth) ProtoMessage() {}

func (x *PollState_LUCIMachineTokenAuth) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollState_LUCIMachineTokenAuth.ProtoReflect.Descriptor instead.
func (*PollState_LUCIMachineTokenAuth) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_rawDescGZIP(), []int{1, 4}
}

func (x *PollState_LUCIMachineTokenAuth) GetMachineFqdn() string {
	if x != nil {
		return x.MachineFqdn
	}
	return ""
}

// If set, use only `ip_allowlist` field for auth (see below).
type PollState_IPAllowlistAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PollState_IPAllowlistAuth) Reset() {
	*x = PollState_IPAllowlistAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PollState_IPAllowlistAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollState_IPAllowlistAuth) ProtoMessage() {}

func (x *PollState_IPAllowlistAuth) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollState_IPAllowlistAuth.ProtoReflect.Descriptor instead.
func (*PollState_IPAllowlistAuth) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_rawDescGZIP(), []int{1, 5}
}

var File_go_chromium_org_luci_swarming_proto_internals_rbe_proto protoreflect.FileDescriptor

var file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_rawDesc = []byte{
	0x0a, 0x37, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x73, 0x77, 0x61, 0x72, 0x6d, 0x69, 0x6e, 0x67, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x73, 0x2f,
	0x72, 0x62, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x73, 0x77, 0x61, 0x72, 0x6d,
	0x69, 0x6e, 0x67, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x73, 0x2e, 0x72, 0x62,
	0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xdd, 0x01, 0x0a, 0x0d, 0x54, 0x61, 0x67, 0x67, 0x65, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x54, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x73, 0x77, 0x61,
	0x72, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x73, 0x2e,
	0x72, 0x62, 0x65, 0x2e, 0x54, 0x61, 0x67, 0x67, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x6d, 0x61, 0x63, 0x5f, 0x73, 0x68, 0x61,
	0x32, 0x35, 0x36, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x68, 0x6d, 0x61, 0x63, 0x53,
	0x68, 0x61, 0x32, 0x35, 0x36, 0x22, 0x3b, 0x0a, 0x0b, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x50, 0x41, 0x59, 0x4c, 0x4f, 0x41, 0x44, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x4f, 0x4c, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x10, 0x01, 0x22, 0xf3, 0x08, 0x0a, 0x09, 0x50, 0x6f, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x32, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x62, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x62, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x5c, 0x0a, 0x13, 0x65, 0x6e, 0x66, 0x6f, 0x72,
	0x63, 0x65, 0x64, 0x5f, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x77, 0x61, 0x72, 0x6d, 0x69, 0x6e, 0x67, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x73, 0x2e, 0x72, 0x62, 0x65, 0x2e, 0x50, 0x6f,
	0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x12, 0x65, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x64, 0x44, 0x69, 0x6d, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4a, 0x0a, 0x0a, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x77, 0x61, 0x72,
	0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x73, 0x2e, 0x72,
	0x62, 0x65, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x44, 0x65, 0x62,
	0x75, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x64, 0x65, 0x62, 0x75, 0x67, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x70, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x70, 0x41, 0x6c, 0x6c, 0x6f, 0x77,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x08, 0x67, 0x63, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x77, 0x61, 0x72, 0x6d, 0x69, 0x6e,
	0x67, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x73, 0x2e, 0x72, 0x62, 0x65, 0x2e,
	0x50, 0x6f, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x47, 0x43, 0x45, 0x41, 0x75, 0x74,
	0x68, 0x48, 0x00, 0x52, 0x07, 0x67, 0x63, 0x65, 0x41, 0x75, 0x74, 0x68, 0x12, 0x68, 0x0a, 0x14,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x61, 0x75, 0x74, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x73, 0x77, 0x61,
	0x72, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x73, 0x2e,
	0x72, 0x62, 0x65, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x75, 0x74, 0x68,
	0x48, 0x00, 0x52, 0x12, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x41, 0x75, 0x74, 0x68, 0x12, 0x6f, 0x0a, 0x17, 0x6c, 0x75, 0x63, 0x69, 0x5f, 0x6d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x61, 0x75, 0x74,
	0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x73, 0x77, 0x61, 0x72, 0x6d, 0x69,
	0x6e, 0x67, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x73, 0x2e, 0x72, 0x62, 0x65,
	0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x4c, 0x55, 0x43, 0x49, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x48,
	0x00, 0x52, 0x14, 0x6c, 0x75, 0x63, 0x69, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x12, 0x5f, 0x0a, 0x11, 0x69, 0x70, 0x5f, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x73, 0x77, 0x61, 0x72, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x73, 0x2e, 0x72, 0x62, 0x65, 0x2e, 0x50, 0x6f, 0x6c, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x49, 0x50, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x6c, 0x69, 0x73,
	0x74, 0x41, 0x75, 0x74, 0x68, 0x48, 0x00, 0x52, 0x0f, 0x69, 0x70, 0x41, 0x6c, 0x6c, 0x6f, 0x77,
	0x6c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x1a, 0x35, 0x0a, 0x09, 0x44, 0x69, 0x6d, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a,
	0x8b, 0x01, 0x0a, 0x09, 0x44, 0x65, 0x62, 0x75, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x34, 0x0a,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x77, 0x61, 0x72, 0x6d, 0x69, 0x6e, 0x67, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73,
	0x77, 0x61, 0x72, 0x6d, 0x69, 0x6e, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d,
	0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x1a, 0x4d, 0x0a,
	0x07, 0x47, 0x43, 0x45, 0x41, 0x75, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x63, 0x65, 0x5f,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67,
	0x63, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x63, 0x65,
	0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x67, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x1a, 0x3d, 0x0a, 0x12,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x75,
	0x74, 0x68, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x39, 0x0a, 0x14, 0x4c,
	0x55, 0x43, 0x49, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41,
	0x75, 0x74, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x66,
	0x71, 0x64, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x46, 0x71, 0x64, 0x6e, 0x1a, 0x11, 0x0a, 0x0f, 0x49, 0x50, 0x41, 0x6c, 0x6c, 0x6f,
	0x77, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x42, 0x0d, 0x0a, 0x0b, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x42, 0x3b, 0x5a, 0x39, 0x67, 0x6f, 0x2e, 0x63,
	0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69,
	0x2f, 0x73, 0x77, 0x61, 0x72, 0x6d, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x73, 0x3b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x73, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_rawDescData = file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_rawDesc
)

func file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_rawDescData = protoimpl.X.CompressGZIP(file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_rawDescData)
	})
	return file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_rawDescData
}

var file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_goTypes = []interface{}{
	(TaggedMessage_PayloadType)(0),         // 0: swarming.internals.rbe.TaggedMessage.PayloadType
	(*TaggedMessage)(nil),                  // 1: swarming.internals.rbe.TaggedMessage
	(*PollState)(nil),                      // 2: swarming.internals.rbe.PollState
	(*PollState_Dimension)(nil),            // 3: swarming.internals.rbe.PollState.Dimension
	(*PollState_DebugInfo)(nil),            // 4: swarming.internals.rbe.PollState.DebugInfo
	(*PollState_GCEAuth)(nil),              // 5: swarming.internals.rbe.PollState.GCEAuth
	(*PollState_ServiceAccountAuth)(nil),   // 6: swarming.internals.rbe.PollState.ServiceAccountAuth
	(*PollState_LUCIMachineTokenAuth)(nil), // 7: swarming.internals.rbe.PollState.LUCIMachineTokenAuth
	(*PollState_IPAllowlistAuth)(nil),      // 8: swarming.internals.rbe.PollState.IPAllowlistAuth
	(*timestamppb.Timestamp)(nil),          // 9: google.protobuf.Timestamp
}
var file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_depIdxs = []int32{
	0, // 0: swarming.internals.rbe.TaggedMessage.payload_type:type_name -> swarming.internals.rbe.TaggedMessage.PayloadType
	9, // 1: swarming.internals.rbe.PollState.expiry:type_name -> google.protobuf.Timestamp
	3, // 2: swarming.internals.rbe.PollState.enforced_dimensions:type_name -> swarming.internals.rbe.PollState.Dimension
	4, // 3: swarming.internals.rbe.PollState.debug_info:type_name -> swarming.internals.rbe.PollState.DebugInfo
	5, // 4: swarming.internals.rbe.PollState.gce_auth:type_name -> swarming.internals.rbe.PollState.GCEAuth
	6, // 5: swarming.internals.rbe.PollState.service_account_auth:type_name -> swarming.internals.rbe.PollState.ServiceAccountAuth
	7, // 6: swarming.internals.rbe.PollState.luci_machine_token_auth:type_name -> swarming.internals.rbe.PollState.LUCIMachineTokenAuth
	8, // 7: swarming.internals.rbe.PollState.ip_allowlist_auth:type_name -> swarming.internals.rbe.PollState.IPAllowlistAuth
	9, // 8: swarming.internals.rbe.PollState.DebugInfo.created:type_name -> google.protobuf.Timestamp
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_init() }
func file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_init() {
	if File_go_chromium_org_luci_swarming_proto_internals_rbe_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaggedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PollState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PollState_Dimension); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PollState_DebugInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PollState_GCEAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PollState_ServiceAccountAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PollState_LUCIMachineTokenAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PollState_IPAllowlistAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*PollState_GceAuth)(nil),
		(*PollState_ServiceAccountAuth_)(nil),
		(*PollState_LuciMachineTokenAuth)(nil),
		(*PollState_IpAllowlistAuth)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_depIdxs,
		EnumInfos:         file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_enumTypes,
		MessageInfos:      file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_swarming_proto_internals_rbe_proto = out.File
	file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_rawDesc = nil
	file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_goTypes = nil
	file_go_chromium_org_luci_swarming_proto_internals_rbe_proto_depIdxs = nil
}
