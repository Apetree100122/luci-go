// Copyright 2021 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package luci.notify.v1;

option go_package = "go.chromium.org/luci/luci_notify/api/service/v1;lucinotifypb";

// Service to query tree closer data on the server.
service TreeClosers {
  // Retrieves tree closers associated with the builders from the specified
  // project.
  rpc QueryTreeClosers(QueryTreeClosersRequest) returns (QueryTreeClosersResponse) {};
  // Checks if the builder in CheckTreeCloserRequest is tree-closer or not
  rpc CheckTreeCloser(CheckTreeCloserRequest) returns (CheckTreeCloserResponse) {};
}

// A request message for `QueryTreeClosers` RPC.
message QueryTreeClosersRequest {
  // Required. Only the tree closers that are associated with the builders in
  // the project will be returned.
  string project = 1;

  // Optional. The maximum number of tree closers to return.
  //
  // The service may return fewer than this value.
  // If unspecified, at most 100 tree closers will be returned.
  // The maximum value is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 2;

  // Optional. A page token, received from a previous `QueryTreeClosers` call.
  // Provide this to retrieve the subsequent page.
  //
  // When paginating, all parameters provided to `QueryTreeClosers`, with the
  // exception of page_size and page_token, must match the call that provided
  // the page token.
  string page_token = 3;
}

// A response message for `QueryTreeClosers` RPC.
message QueryTreeClosersResponse {
  message BuilderTreeClosers {
    // The canonical ID of the builder (e.g. {project}/{bucket}/{builder}).
    string builder_id = 1;

    // A list of tree closer hosts that are associated with the builder.
    repeated string tree_closer_hosts = 2;
  }

  // A list of builder IDs with their associated tree closers.
  repeated BuilderTreeClosers builder_tree_closers = 1;

  // A token that can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;
}

message CheckTreeCloserRequest {
  // Project of the builder
  string project = 1;
  // Bucket of the builder
  string bucket = 2;
  // Name of the builder
  string builder = 3;
  // Some tree closers are only close if some particular steps failed.
  string step = 4;
}

message CheckTreeCloserResponse {
  // Whether this is a tree closer
  bool is_tree_closer = 1;
}
