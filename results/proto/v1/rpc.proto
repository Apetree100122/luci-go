// Copyright 2019 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package luci.resultsdb;

// TODO(jchinlee): Update protos and clarify documentation when finalized.
// Currently, these are for experimentation/iteration.

import "google/protobuf/field_mask.proto";
import "go.chromium.org/luci/results/proto/v1/invocation.proto";
import "go.chromium.org/luci/results/proto/v1/tests.proto";

option go_package = "go.chromium.org/luci/results/proto/v1;resultspb";

// Service to read test results.
service TestResults {
  // Returns an invocation.
  //
  // If the invocation isn't finalized, but it's finalization deadline
  // is reached, it is finalized as a part of this RPC.
  rpc GetInvocation(GetInvocationRequest) returns (Invocation) {};
}

// A request message for GetInvocation rpc.
message GetInvocationRequest {
  string invocation_id = 1;

  // Specifies what to return in the invocation.
  InvocationView view = 2;
  // List of fields to include in the response.
  // Format: go/advanced-field-masks
  google.protobuf.FieldMask fields = 3;
}

// InvocationView specifies what parts of Invocation to return.
message InvocationView {
  // Do not return test variants that had at least one expected result.
  // Will be used by UI by default.
  bool exclude_expected = 1;

  // Do not return test variants with exonerations.
  bool exclude_exonerated = 2;

  // Do not return test variants from inconsequential invocations.
  bool exclude_inconsequential = 3;

  // If specified, return only test variants that satisfy any of these predicates.
  repeated TestVariantIDPredicate test_variants = 4;

  // If specified, return only these test logs.
  repeated string log_names = 5;

  // If true, guarantees that returned Log messages have "contents"
  // field populated.
  // If a log is stored externally (Isolate, GS), RPC will load them before
  // returning.
  bool log_contents = 6;
}
