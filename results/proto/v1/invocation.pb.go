// Code generated by protoc-gen-go. DO NOT EDIT.
// source: go.chromium.org/luci/results/proto/v1/invocation.proto

package resultspb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Invocation struct {
	Id     string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Bucket *Bucket `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`
	// The tests in this and included invocations.
	// By default, only test variants with only unexpected results are included.
	// To load all test results, GetInvocationRequest.expected_tests must be true.
	Tests []*Invocation_Test `protobuf:"bytes,3,rep,name=tests,proto3" json:"tests,omitempty"`
	// Maps a variant id to its definition.
	VariantDefs map[string]*VariantDef `protobuf:"bytes,4,rep,name=variant_defs,json=variantDefs,proto3" json:"variant_defs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Tags        []*StringPair          `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	Incomplete  bool                   `protobuf:"varint,6,opt,name=incomplete,proto3" json:"incomplete,omitempty"`
	// List of invocations to include
	Includes []*Invocation_Include `protobuf:"bytes,7,rep,name=includes,proto3" json:"includes,omitempty"`
	// A secret token required to update this invocation.
	// Present only in CreateInvocation response.
	// Elaborated in Ingestion section.
	UpdateToken string `protobuf:"bytes,8,opt,name=update_token,json=updateToken,proto3" json:"update_token,omitempty"`
	// This invocation is no longer updatable.
	IsFinal bool `protobuf:"varint,9,opt,name=is_final,json=isFinal,proto3" json:"is_final,omitempty"`
	// Timestamp when to forcefully finalize the invocation.
	// Can be extended.
	Deadline             *timestamp.Timestamp `protobuf:"bytes,10,opt,name=deadline,proto3" json:"deadline,omitempty"`
	CreateTime           *timestamp.Timestamp `protobuf:"bytes,11,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	FinalizeTime         *timestamp.Timestamp `protobuf:"bytes,12,opt,name=finalize_time,json=finalizeTime,proto3" json:"finalize_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Invocation) Reset()         { *m = Invocation{} }
func (m *Invocation) String() string { return proto.CompactTextString(m) }
func (*Invocation) ProtoMessage()    {}
func (*Invocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_6acaa1bf180a2e75, []int{0}
}

func (m *Invocation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Invocation.Unmarshal(m, b)
}
func (m *Invocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Invocation.Marshal(b, m, deterministic)
}
func (m *Invocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Invocation.Merge(m, src)
}
func (m *Invocation) XXX_Size() int {
	return xxx_messageInfo_Invocation.Size(m)
}
func (m *Invocation) XXX_DiscardUnknown() {
	xxx_messageInfo_Invocation.DiscardUnknown(m)
}

var xxx_messageInfo_Invocation proto.InternalMessageInfo

func (m *Invocation) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Invocation) GetBucket() *Bucket {
	if m != nil {
		return m.Bucket
	}
	return nil
}

func (m *Invocation) GetTests() []*Invocation_Test {
	if m != nil {
		return m.Tests
	}
	return nil
}

func (m *Invocation) GetVariantDefs() map[string]*VariantDef {
	if m != nil {
		return m.VariantDefs
	}
	return nil
}

func (m *Invocation) GetTags() []*StringPair {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Invocation) GetIncomplete() bool {
	if m != nil {
		return m.Incomplete
	}
	return false
}

func (m *Invocation) GetIncludes() []*Invocation_Include {
	if m != nil {
		return m.Includes
	}
	return nil
}

func (m *Invocation) GetUpdateToken() string {
	if m != nil {
		return m.UpdateToken
	}
	return ""
}

func (m *Invocation) GetIsFinal() bool {
	if m != nil {
		return m.IsFinal
	}
	return false
}

func (m *Invocation) GetDeadline() *timestamp.Timestamp {
	if m != nil {
		return m.Deadline
	}
	return nil
}

func (m *Invocation) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Invocation) GetFinalizeTime() *timestamp.Timestamp {
	if m != nil {
		return m.FinalizeTime
	}
	return nil
}

type Invocation_Test struct {
	// regex: ^\w+(\|\w+)*$
	// max length: 1024
	// TODO(jchinlee): Update regex format when finalized if needed.
	Name                 string                    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Variants             []*Invocation_TestVariant `protobuf:"bytes,2,rep,name=variants,proto3" json:"variants,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *Invocation_Test) Reset()         { *m = Invocation_Test{} }
func (m *Invocation_Test) String() string { return proto.CompactTextString(m) }
func (*Invocation_Test) ProtoMessage()    {}
func (*Invocation_Test) Descriptor() ([]byte, []int) {
	return fileDescriptor_6acaa1bf180a2e75, []int{0, 0}
}

func (m *Invocation_Test) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Invocation_Test.Unmarshal(m, b)
}
func (m *Invocation_Test) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Invocation_Test.Marshal(b, m, deterministic)
}
func (m *Invocation_Test) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Invocation_Test.Merge(m, src)
}
func (m *Invocation_Test) XXX_Size() int {
	return xxx_messageInfo_Invocation_Test.Size(m)
}
func (m *Invocation_Test) XXX_DiscardUnknown() {
	xxx_messageInfo_Invocation_Test.DiscardUnknown(m)
}

var xxx_messageInfo_Invocation_Test proto.InternalMessageInfo

func (m *Invocation_Test) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Invocation_Test) GetVariants() []*Invocation_TestVariant {
	if m != nil {
		return m.Variants
	}
	return nil
}

type Invocation_TestVariant struct {
	VariantId            string         `protobuf:"bytes,1,opt,name=variant_id,json=variantId,proto3" json:"variant_id,omitempty"`
	Results              []*Result      `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	Exonerations         []*Exoneration `protobuf:"bytes,3,rep,name=exonerations,proto3" json:"exonerations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Invocation_TestVariant) Reset()         { *m = Invocation_TestVariant{} }
func (m *Invocation_TestVariant) String() string { return proto.CompactTextString(m) }
func (*Invocation_TestVariant) ProtoMessage()    {}
func (*Invocation_TestVariant) Descriptor() ([]byte, []int) {
	return fileDescriptor_6acaa1bf180a2e75, []int{0, 1}
}

func (m *Invocation_TestVariant) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Invocation_TestVariant.Unmarshal(m, b)
}
func (m *Invocation_TestVariant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Invocation_TestVariant.Marshal(b, m, deterministic)
}
func (m *Invocation_TestVariant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Invocation_TestVariant.Merge(m, src)
}
func (m *Invocation_TestVariant) XXX_Size() int {
	return xxx_messageInfo_Invocation_TestVariant.Size(m)
}
func (m *Invocation_TestVariant) XXX_DiscardUnknown() {
	xxx_messageInfo_Invocation_TestVariant.DiscardUnknown(m)
}

var xxx_messageInfo_Invocation_TestVariant proto.InternalMessageInfo

func (m *Invocation_TestVariant) GetVariantId() string {
	if m != nil {
		return m.VariantId
	}
	return ""
}

func (m *Invocation_TestVariant) GetResults() []*Result {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *Invocation_TestVariant) GetExonerations() []*Exoneration {
	if m != nil {
		return m.Exonerations
	}
	return nil
}

type Invocation_Include struct {
	InvocationId string `protobuf:"bytes,1,opt,name=invocation_id,json=invocationId,proto3" json:"invocation_id,omitempty"`
	// If specified, include inconsequential invocations.
	Inconsequential      bool     `protobuf:"varint,2,opt,name=inconsequential,proto3" json:"inconsequential,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Invocation_Include) Reset()         { *m = Invocation_Include{} }
func (m *Invocation_Include) String() string { return proto.CompactTextString(m) }
func (*Invocation_Include) ProtoMessage()    {}
func (*Invocation_Include) Descriptor() ([]byte, []int) {
	return fileDescriptor_6acaa1bf180a2e75, []int{0, 3}
}

func (m *Invocation_Include) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Invocation_Include.Unmarshal(m, b)
}
func (m *Invocation_Include) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Invocation_Include.Marshal(b, m, deterministic)
}
func (m *Invocation_Include) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Invocation_Include.Merge(m, src)
}
func (m *Invocation_Include) XXX_Size() int {
	return xxx_messageInfo_Invocation_Include.Size(m)
}
func (m *Invocation_Include) XXX_DiscardUnknown() {
	xxx_messageInfo_Invocation_Include.DiscardUnknown(m)
}

var xxx_messageInfo_Invocation_Include proto.InternalMessageInfo

func (m *Invocation_Include) GetInvocationId() string {
	if m != nil {
		return m.InvocationId
	}
	return ""
}

func (m *Invocation_Include) GetInconsequential() bool {
	if m != nil {
		return m.Inconsequential
	}
	return false
}

func init() {
	proto.RegisterType((*Invocation)(nil), "luci.resultsdb.Invocation")
	proto.RegisterMapType((map[string]*VariantDef)(nil), "luci.resultsdb.Invocation.VariantDefsEntry")
	proto.RegisterType((*Invocation_Test)(nil), "luci.resultsdb.Invocation.Test")
	proto.RegisterType((*Invocation_TestVariant)(nil), "luci.resultsdb.Invocation.TestVariant")
	proto.RegisterType((*Invocation_Include)(nil), "luci.resultsdb.Invocation.Include")
}

func init() {
	proto.RegisterFile("go.chromium.org/luci/results/proto/v1/invocation.proto", fileDescriptor_6acaa1bf180a2e75)
}

var fileDescriptor_6acaa1bf180a2e75 = []byte{
	// 586 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x94, 0x61, 0x6b, 0xd3, 0x40,
	0x18, 0xc7, 0x69, 0xd7, 0xad, 0xd9, 0x93, 0x6e, 0x8e, 0x7b, 0x21, 0x31, 0xa2, 0xab, 0x13, 0xa4,
	0x20, 0x5c, 0xb6, 0x89, 0x43, 0x1c, 0x38, 0x18, 0x4e, 0xe8, 0x1b, 0x91, 0x73, 0x88, 0xec, 0x85,
	0xe3, 0x9a, 0x3c, 0x8d, 0xc7, 0x92, 0xbb, 0x9a, 0xbb, 0x14, 0xe7, 0x97, 0xf0, 0x23, 0xf8, 0x55,
	0x25, 0x97, 0x4b, 0xb3, 0x75, 0xb0, 0xf5, 0xdd, 0xf5, 0x9f, 0xff, 0xef, 0x79, 0x9e, 0xe4, 0xf9,
	0xf7, 0xe0, 0x28, 0x55, 0x34, 0xfe, 0x59, 0xa8, 0x5c, 0x94, 0x39, 0x55, 0x45, 0x1a, 0x65, 0x65,
	0x2c, 0xa2, 0x02, 0x75, 0x99, 0x19, 0x1d, 0xcd, 0x0a, 0x65, 0x54, 0x34, 0x3f, 0x88, 0x84, 0x9c,
	0xab, 0x98, 0x1b, 0xa1, 0x24, 0xb5, 0x1a, 0xd9, 0xae, 0x7c, 0xd4, 0xf9, 0x92, 0x49, 0xb8, 0x9b,
	0x2a, 0x95, 0x66, 0x58, 0x13, 0x93, 0x72, 0x1a, 0x19, 0x91, 0xa3, 0x36, 0x3c, 0x9f, 0xd5, 0x40,
	0x78, 0xb8, 0x5a, 0xa3, 0x58, 0xe5, 0x79, 0xd3, 0x24, 0x3c, 0x58, 0x8d, 0x31, 0xa8, 0x8d, 0xae,
	0x91, 0xbd, 0xbf, 0x1e, 0xc0, 0x78, 0x31, 0x2c, 0xd9, 0x86, 0xae, 0x48, 0x82, 0xce, 0xb0, 0x33,
	0xda, 0x64, 0x5d, 0x91, 0x10, 0x0a, 0x1b, 0x93, 0x32, 0xbe, 0x42, 0x13, 0x74, 0x87, 0x9d, 0x91,
	0x7f, 0xf8, 0x98, 0xde, 0x7e, 0x0f, 0x7a, 0x6a, 0x9f, 0x32, 0xe7, 0x22, 0x6f, 0x61, 0xdd, 0x56,
	0x0f, 0xd6, 0x86, 0x6b, 0x23, 0xff, 0x70, 0x77, 0xd9, 0xde, 0xb6, 0xa2, 0xe7, 0xa8, 0x0d, 0xab,
	0xdd, 0xe4, 0x33, 0x0c, 0xe6, 0xbc, 0x10, 0x5c, 0x9a, 0xcb, 0x04, 0xa7, 0x3a, 0xe8, 0x59, 0xfa,
	0xf5, 0x3d, 0xf4, 0xb7, 0xda, 0xfe, 0x11, 0xa7, 0xfa, 0x4c, 0x9a, 0xe2, 0x9a, 0xf9, 0xf3, 0x56,
	0x21, 0x14, 0x7a, 0x86, 0xa7, 0x3a, 0x58, 0xb7, 0x75, 0xc2, 0xe5, 0x3a, 0x5f, 0x4d, 0x21, 0x64,
	0xfa, 0x85, 0x8b, 0x82, 0x59, 0x1f, 0x79, 0x0e, 0x20, 0x64, 0xac, 0xf2, 0x59, 0x86, 0x06, 0x83,
	0x8d, 0x61, 0x67, 0xe4, 0xb1, 0x1b, 0x0a, 0xf9, 0x00, 0x9e, 0x90, 0x71, 0x56, 0x26, 0xa8, 0x83,
	0xbe, 0xad, 0xb9, 0x77, 0xcf, 0x6c, 0xe3, 0xda, 0xca, 0x16, 0x0c, 0x79, 0x01, 0x83, 0x72, 0x96,
	0x70, 0x83, 0x97, 0x46, 0x5d, 0xa1, 0x0c, 0x3c, 0xfb, 0x81, 0xfd, 0x5a, 0x3b, 0xaf, 0x24, 0xf2,
	0x04, 0x3c, 0xa1, 0x2f, 0xa7, 0x42, 0xf2, 0x2c, 0xd8, 0xb4, 0x03, 0xf4, 0x85, 0xfe, 0x54, 0xfd,
	0x24, 0x47, 0xe0, 0x25, 0xc8, 0x93, 0x4c, 0x48, 0x0c, 0xc0, 0xae, 0x21, 0xa4, 0x75, 0x7c, 0x68,
	0x13, 0x1f, 0x7a, 0xde, 0xc4, 0x87, 0x2d, 0xbc, 0xe4, 0x18, 0xfc, 0xb8, 0x40, 0xdb, 0x55, 0xe4,
	0x18, 0xf8, 0x0f, 0xa2, 0x50, 0xdb, 0x2b, 0x81, 0x9c, 0xc0, 0x96, 0x1d, 0x46, 0xfc, 0x71, 0xf8,
	0xe0, 0x41, 0x7c, 0xd0, 0x00, 0x95, 0x14, 0xfe, 0x80, 0x5e, 0xb5, 0x62, 0x42, 0xa0, 0x27, 0x79,
	0x8e, 0x2e, 0x54, 0xf6, 0x4c, 0x4e, 0xc1, 0x73, 0xeb, 0xd2, 0x41, 0xd7, 0x7e, 0xcf, 0x57, 0x0f,
	0x24, 0xc5, 0xed, 0x9b, 0x2d, 0xb8, 0xf0, 0x5f, 0x07, 0xfc, 0x1b, 0x4f, 0xc8, 0x33, 0x80, 0x26,
	0x43, 0x8b, 0x08, 0x6f, 0x3a, 0x65, 0x9c, 0x90, 0x7d, 0xe8, 0xbb, 0xe2, 0xae, 0xe3, 0x9d, 0x28,
	0x33, 0x7b, 0x62, 0x8d, 0x8d, 0x9c, 0xc0, 0x00, 0x7f, 0x2b, 0x89, 0x85, 0x9d, 0xa2, 0x89, 0xf4,
	0xd3, 0x65, 0xec, 0xac, 0xf5, 0xb0, 0x5b, 0x40, 0x78, 0x01, 0x3b, 0xcb, 0x31, 0x25, 0x3b, 0xb0,
	0x76, 0x85, 0xd7, 0x6e, 0xbc, 0xea, 0x48, 0xf6, 0x61, 0x7d, 0xce, 0xb3, 0x12, 0xdd, 0x3f, 0xec,
	0x4e, 0x58, 0xdb, 0x12, 0xac, 0x36, 0xbe, 0xef, 0xbe, 0xeb, 0x84, 0xdf, 0xa1, 0xef, 0x62, 0x46,
	0x5e, 0xc2, 0x56, 0x7b, 0xdd, 0xb4, 0xef, 0x3e, 0x68, 0xc5, 0x71, 0x42, 0x46, 0xf0, 0xa8, 0xca,
	0xb3, 0xd4, 0xf8, 0xab, 0x44, 0x69, 0x04, 0xcf, 0x6c, 0x3f, 0x8f, 0x2d, 0xcb, 0xa7, 0x07, 0x17,
	0xd1, 0x4a, 0xd7, 0xc8, 0xb1, 0x13, 0x66, 0x93, 0xc9, 0x86, 0xd5, 0xde, 0xfc, 0x0f, 0x00, 0x00,
	0xff, 0xff, 0xe8, 0x62, 0x9b, 0xb0, 0x1d, 0x05, 0x00, 0x00,
}
