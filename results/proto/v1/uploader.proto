// Copyright 2019 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package luci.resultdb;

import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "go.chromium.org/luci/results/proto/v1/common.proto";
import "go.chromium.org/luci/results/proto/v1/test_result.proto";

option go_package = "go.chromium.org/luci/results/proto/v1;resultspb";

message Handshake {
  // The auth token is available to the subprocess via
  // test_results.uploader.auth_token
  // LUCI_CONTEXT value.
  // If the value is unexpected, the server simply closes the connection.
  string auth_token = 1;
}

message TestResultEntry {

  // A local test result.
  message TestResult {
    string test_name = 1;
    // Adds/overrides the variant keys specified on the command line.
    VariantDef variant = 2;

    bool is_expected = 3;
    TestStatus status = 4;
    string summary_markdown = 5;
    google.protobuf.Timestamp start_time = 6;
    google.protobuf.Duration run_duration = 7;
    map<string, File> files = 8;
  }

  // A local file.
  message File {
    oneof body {
      // Absolute path on the same machine as the uploader process.
      string file_path = 1;
      // Useful when sending a file from a different machine.
      bytes contents = 2;
    }

    string media_type = 3;
  }

  // Upload results from a file.
  message ResultsFile {
    // Absolute path to the results file on the same machine
    // as the TCP server.
    string path = 1;

    // File format.
    enum Format {
      // A sequence of TestResultEntry JSON objects
      // Same format as `luci-test upload` understands.
      // The default format.
      LUCI = 0;

      // JSON Test Results format
      CHROMIUM_JSON_TEST_RESULTS = 1;

      // GTest
      GOOGLE_TEST = 2;
    }
    Format format = 2;
  }

  oneof entry {
    // Upload one test result.
    TestResult test_result = 1;

    // Upload all test results from this file.
    ResultsFile results_file = 2;
  }
}
