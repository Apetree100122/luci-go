// Copyright 2020 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package cv.prjmanager.prjpb;

option go_package = "go.chromium.org/luci/cv/internal/prjmanager/prjpb;prjpb";

import "google/protobuf/timestamp.proto";

import "go.chromium.org/luci/cv/internal/run/storage.proto";
import "go.chromium.org/luci/cv/internal/prjmanager/prjpb/storage.proto";


// PokePMTask sends a signal to ProjectManager to process events.
//
// Always used with de-duplication and thus can't be created from a transaction.
//
// Queue: "manage-project".
message PokePMTask {
  string luci_project = 1;
}

// KickPokePMTask starts a task to actually enqueue PokePMTask.
//
// It exists in order to poke ProjectManager from a transaction.
//
// Queue: "manage-project".
message KickPokePMTask {
  string luci_project = 1;
  google.protobuf.Timestamp eta = 2;
}

// PurgeCLTask starts a task to purge a CL.
//
// Queue: "purge-cls".
message PurgeCLTask {
  string luci_project = 1;
  PurgingCL purging_cl = 2;

  cv.run.Trigger trigger = 3;

  message Reason {
    // TODO(tandrii): expand.
  }
  Reason reason = 4;
}
