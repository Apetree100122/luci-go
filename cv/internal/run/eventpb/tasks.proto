// Copyright 2020 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package cv.internal.run.eventpb;

option go_package = "go.chromium.org/luci/cv/internal/run/eventpb;eventpb";

import "google/protobuf/timestamp.proto";

// ManageRunTask sends a signal to RunManager to process events.
//
// Always used with de-duplication and thus can't be created from a
// transaction.
//
// Queue: "manage-run".
message ManageRunTask {
  string run_id = 1;
}

// KickManageRunTask starts a task to actually enqueue ManageRunTask. It exists
// in order to send a deduplicatable ManageRunTask from a transaction.
//
// Queue: "kick-manage-run".
message KickManageRunTask {
  string run_id = 1;
  google.protobuf.Timestamp eta = 2;
}

// ManageRunLongOpTask performs potentially slow work on behalf a Run.
//
// A task of this kind is always created transactionally with the Run entity
// modification recording the operation in OngoingLongOps.
//
// A task of this kind does not modify the Run entity directly, but communicates
// back with Run Manager by sending at least the completion event, and possibly other
// events.
//
// Queue: "manage-run-long-op".
message ManageRunLongOpTask {
  string run_id = 1;
  string operation_id = 2;
}
