// Copyright 2020 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.0
// source: go.chromium.org/luci/cv/internal/run/eventpb/events.proto

package eventpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubmissionResult int32

const (
	SubmissionResult_SUBMISSION_RESULT_UNSPECIFIED SubmissionResult = 0
	// All CLs have been submitted successfully.
	SubmissionResult_SUCCEEDED SubmissionResult = 1
	// Encountered transient failure.
	//
	// RM should retry if quota allows.
	SubmissionResult_FAILED_TRANSIENT SubmissionResult = 2
	// Encountered permanent failure.
	//
	// For example, lack of submit permission or experienced merge conflict.
	SubmissionResult_FAILED_PERMANENT SubmissionResult = 3
)

// Enum value maps for SubmissionResult.
var (
	SubmissionResult_name = map[int32]string{
		0: "SUBMISSION_RESULT_UNSPECIFIED",
		1: "SUCCEEDED",
		2: "FAILED_TRANSIENT",
		3: "FAILED_PERMANENT",
	}
	SubmissionResult_value = map[string]int32{
		"SUBMISSION_RESULT_UNSPECIFIED": 0,
		"SUCCEEDED":                     1,
		"FAILED_TRANSIENT":              2,
		"FAILED_PERMANENT":              3,
	}
)

func (x SubmissionResult) Enum() *SubmissionResult {
	p := new(SubmissionResult)
	*p = x
	return p
}

func (x SubmissionResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubmissionResult) Descriptor() protoreflect.EnumDescriptor {
	return file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_enumTypes[0].Descriptor()
}

func (SubmissionResult) Type() protoreflect.EnumType {
	return &file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_enumTypes[0]
}

func (x SubmissionResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubmissionResult.Descriptor instead.
func (SubmissionResult) EnumDescriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_rawDescGZIP(), []int{0}
}

// Event is a container for all kinds of events a Run Manager can receive.
type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Event:
	//	*Event_Start
	//	*Event_Cancel
	//	*Event_Poke
	//	*Event_NewConfig
	//	*Event_ClUpdated
	//	*Event_ReadyForSubmission
	//	*Event_ClSubmitted
	//	*Event_SubmissionCompleted
	//	*Event_CqdVerificationCompleted
	//	*Event_CqdFinished
	Event isEvent_Event `protobuf_oneof:"event"`
	// Instructs Run Manager that this event can only be processed after
	// this timestamp.
	ProcessAfter *timestamppb.Timestamp `protobuf:"bytes,20,opt,name=process_after,json=processAfter,proto3" json:"process_after,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_rawDescGZIP(), []int{0}
}

func (m *Event) GetEvent() isEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *Event) GetStart() *Start {
	if x, ok := x.GetEvent().(*Event_Start); ok {
		return x.Start
	}
	return nil
}

func (x *Event) GetCancel() *Cancel {
	if x, ok := x.GetEvent().(*Event_Cancel); ok {
		return x.Cancel
	}
	return nil
}

func (x *Event) GetPoke() *Poke {
	if x, ok := x.GetEvent().(*Event_Poke); ok {
		return x.Poke
	}
	return nil
}

func (x *Event) GetNewConfig() *NewConfig {
	if x, ok := x.GetEvent().(*Event_NewConfig); ok {
		return x.NewConfig
	}
	return nil
}

func (x *Event) GetClUpdated() *CLUpdated {
	if x, ok := x.GetEvent().(*Event_ClUpdated); ok {
		return x.ClUpdated
	}
	return nil
}

func (x *Event) GetReadyForSubmission() *ReadyForSubmission {
	if x, ok := x.GetEvent().(*Event_ReadyForSubmission); ok {
		return x.ReadyForSubmission
	}
	return nil
}

func (x *Event) GetClSubmitted() *CLSubmitted {
	if x, ok := x.GetEvent().(*Event_ClSubmitted); ok {
		return x.ClSubmitted
	}
	return nil
}

func (x *Event) GetSubmissionCompleted() *SubmissionCompleted {
	if x, ok := x.GetEvent().(*Event_SubmissionCompleted); ok {
		return x.SubmissionCompleted
	}
	return nil
}

func (x *Event) GetCqdVerificationCompleted() *CQDVerificationCompleted {
	if x, ok := x.GetEvent().(*Event_CqdVerificationCompleted); ok {
		return x.CqdVerificationCompleted
	}
	return nil
}

func (x *Event) GetCqdFinished() *CQDFinished {
	if x, ok := x.GetEvent().(*Event_CqdFinished); ok {
		return x.CqdFinished
	}
	return nil
}

func (x *Event) GetProcessAfter() *timestamppb.Timestamp {
	if x != nil {
		return x.ProcessAfter
	}
	return nil
}

type isEvent_Event interface {
	isEvent_Event()
}

type Event_Start struct {
	// On Start event, Run Manager will start the Run.
	//
	// The Run entity must already exist.
	Start *Start `protobuf:"bytes,1,opt,name=start,proto3,oneof"`
}

type Event_Cancel struct {
	// On Cancel event, Run Manager will cancel the Run.
	Cancel *Cancel `protobuf:"bytes,2,opt,name=cancel,proto3,oneof"`
}

type Event_Poke struct {
	// On Poke event, Run Manager will check the state of the Run and perform
	// any action if necessary.
	//
	// Sent periodically by Project Manager.
	Poke *Poke `protobuf:"bytes,3,opt,name=poke,proto3,oneof"`
}

type Event_NewConfig struct {
	// On NewConfig event, Run Manager will update config the Run for the
	// given RunID.
	//
	// Sent by Project Manager, which guarantees these events are sent in order
	// of config updates. See also its `eversion` field.
	NewConfig *NewConfig `protobuf:"bytes,4,opt,name=new_config,json=newConfig,proto3,oneof"`
}

type Event_ClUpdated struct {
	// On CLUpdated event, Run Manager will decide whether to cancel the Run
	// based on the current CL state.
	//
	// Sent by Gerrit Updater if Run is inside the `IncompleteRuns` list of
	// a CL.
	ClUpdated *CLUpdated `protobuf:"bytes,5,opt,name=cl_updated,json=clUpdated,proto3,oneof"`
}

type Event_ReadyForSubmission struct {
	// On ReadyForSubmission event, Run Manager will try to submit CLs in
	// this Run.
	ReadyForSubmission *ReadyForSubmission `protobuf:"bytes,6,opt,name=ready_for_submission,json=readyForSubmission,proto3,oneof"`
}

type Event_ClSubmitted struct {
	// On CLSubmitted event, Run Manager will mark this CL as submitted.
	ClSubmitted *CLSubmitted `protobuf:"bytes,7,opt,name=cl_submitted,json=clSubmitted,proto3,oneof"`
}

type Event_SubmissionCompleted struct {
	// On SubmissionCompleted event, Run Manager will look at the submission
	// result and decide whether to retry this submission or succeed or fail
	// the Run.
	SubmissionCompleted *SubmissionCompleted `protobuf:"bytes,8,opt,name=submission_completed,json=submissionCompleted,proto3,oneof"`
}

type Event_CqdVerificationCompleted struct {
	// On CQDVerificationCompleted event, Run Manager will finalize the Run.
	//
	// This event is sent by migration api when CQDaemon reports a verified
	// Run back to CV.
	//
	// TODO(crbug/1141880): Remove this event after migration.
	CqdVerificationCompleted *CQDVerificationCompleted `protobuf:"bytes,30,opt,name=cqd_verification_completed,json=cqdVerificationCompleted,proto3,oneof"`
}

type Event_CqdFinished struct {
	// On CQDFinished event, Run Manager will finalize the Run based on Run
	// metadata provided by the CQDaemon.
	//
	// This event is sent by migration api when CQDaemon reports a Run it has
	// finished working on, including submission of CLs or cancelation of
	// triggers as well as sending BQ rows. So, Run Manager doesn't have to do
	// any of that.
	//
	// TODO(crbug/1141880): Remove this event after migration.
	CqdFinished *CQDFinished `protobuf:"bytes,31,opt,name=cqd_finished,json=cqdFinished,proto3,oneof"`
}

func (*Event_Start) isEvent_Event() {}

func (*Event_Cancel) isEvent_Event() {}

func (*Event_Poke) isEvent_Event() {}

func (*Event_NewConfig) isEvent_Event() {}

func (*Event_ClUpdated) isEvent_Event() {}

func (*Event_ReadyForSubmission) isEvent_Event() {}

func (*Event_ClSubmitted) isEvent_Event() {}

func (*Event_SubmissionCompleted) isEvent_Event() {}

func (*Event_CqdVerificationCompleted) isEvent_Event() {}

func (*Event_CqdFinished) isEvent_Event() {}

type Start struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Start) Reset() {
	*x = Start{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Start) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Start) ProtoMessage() {}

func (x *Start) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Start.ProtoReflect.Descriptor instead.
func (*Start) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_rawDescGZIP(), []int{1}
}

type Cancel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Cancel) Reset() {
	*x = Cancel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cancel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cancel) ProtoMessage() {}

func (x *Cancel) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cancel.ProtoReflect.Descriptor instead.
func (*Cancel) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_rawDescGZIP(), []int{2}
}

type Poke struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Poke) Reset() {
	*x = Poke{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Poke) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Poke) ProtoMessage() {}

func (x *Poke) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Poke.ProtoReflect.Descriptor instead.
func (*Poke) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_rawDescGZIP(), []int{3}
}

type NewConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Hash identifying project config version to update to.
	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	// Eversion of the project config version identify by hash.
	//
	// Provided for identifying the latest NewConfig message
	// if there are more than one outstanding NewConfig event.
	Eversion int64 `protobuf:"varint,2,opt,name=eversion,proto3" json:"eversion,omitempty"`
}

func (x *NewConfig) Reset() {
	*x = NewConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewConfig) ProtoMessage() {}

func (x *NewConfig) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewConfig.ProtoReflect.Descriptor instead.
func (*NewConfig) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_rawDescGZIP(), []int{4}
}

func (x *NewConfig) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *NewConfig) GetEversion() int64 {
	if x != nil {
		return x.Eversion
	}
	return 0
}

type CLUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Internal ID of a CL that was updated.
	Clid int64 `protobuf:"varint,1,opt,name=clid,proto3" json:"clid,omitempty"`
	// EVersion of the updated CL entity.
	EVersion int64 `protobuf:"varint,2,opt,name=eVersion,proto3" json:"eVersion,omitempty"`
}

func (x *CLUpdated) Reset() {
	*x = CLUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLUpdated) ProtoMessage() {}

func (x *CLUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLUpdated.ProtoReflect.Descriptor instead.
func (*CLUpdated) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_rawDescGZIP(), []int{5}
}

func (x *CLUpdated) GetClid() int64 {
	if x != nil {
		return x.Clid
	}
	return 0
}

func (x *CLUpdated) GetEVersion() int64 {
	if x != nil {
		return x.EVersion
	}
	return 0
}

type ReadyForSubmission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReadyForSubmission) Reset() {
	*x = ReadyForSubmission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadyForSubmission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadyForSubmission) ProtoMessage() {}

func (x *ReadyForSubmission) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadyForSubmission.ProtoReflect.Descriptor instead.
func (*ReadyForSubmission) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_rawDescGZIP(), []int{6}
}

type CLSubmitted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Internal ID of a CL that was submitted successfully.
	Clid int64 `protobuf:"varint,1,opt,name=clid,proto3" json:"clid,omitempty"`
}

func (x *CLSubmitted) Reset() {
	*x = CLSubmitted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLSubmitted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLSubmitted) ProtoMessage() {}

func (x *CLSubmitted) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLSubmitted.ProtoReflect.Descriptor instead.
func (*CLSubmitted) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_rawDescGZIP(), []int{7}
}

func (x *CLSubmitted) GetClid() int64 {
	if x != nil {
		return x.Clid
	}
	return 0
}

type SubmissionCompleted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Result of this submission.
	Result SubmissionResult `protobuf:"varint,1,opt,name=result,proto3,enum=cv.run.eventpb.SubmissionResult" json:"result,omitempty"`
	// Types that are assignable to FailureReason:
	//	*SubmissionCompleted_ClFailure
	//	*SubmissionCompleted_Timeout
	FailureReason isSubmissionCompleted_FailureReason `protobuf_oneof:"failure_reason"`
}

func (x *SubmissionCompleted) Reset() {
	*x = SubmissionCompleted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmissionCompleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmissionCompleted) ProtoMessage() {}

func (x *SubmissionCompleted) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmissionCompleted.ProtoReflect.Descriptor instead.
func (*SubmissionCompleted) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_rawDescGZIP(), []int{8}
}

func (x *SubmissionCompleted) GetResult() SubmissionResult {
	if x != nil {
		return x.Result
	}
	return SubmissionResult_SUBMISSION_RESULT_UNSPECIFIED
}

func (m *SubmissionCompleted) GetFailureReason() isSubmissionCompleted_FailureReason {
	if m != nil {
		return m.FailureReason
	}
	return nil
}

func (x *SubmissionCompleted) GetClFailure() *SubmissionCompleted_CLSubmissionFailure {
	if x, ok := x.GetFailureReason().(*SubmissionCompleted_ClFailure); ok {
		return x.ClFailure
	}
	return nil
}

func (x *SubmissionCompleted) GetTimeout() bool {
	if x, ok := x.GetFailureReason().(*SubmissionCompleted_Timeout); ok {
		return x.Timeout
	}
	return false
}

type isSubmissionCompleted_FailureReason interface {
	isSubmissionCompleted_FailureReason()
}

type SubmissionCompleted_ClFailure struct {
	// This Run submission fails because of an individual CL submission
	// failure.
	ClFailure *SubmissionCompleted_CLSubmissionFailure `protobuf:"bytes,2,opt,name=cl_failure,json=clFailure,proto3,oneof"`
}

type SubmissionCompleted_Timeout struct {
	Timeout bool `protobuf:"varint,3,opt,name=timeout,proto3,oneof"`
}

func (*SubmissionCompleted_ClFailure) isSubmissionCompleted_FailureReason() {}

func (*SubmissionCompleted_Timeout) isSubmissionCompleted_FailureReason() {}

type CQDVerificationCompleted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CQDVerificationCompleted) Reset() {
	*x = CQDVerificationCompleted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CQDVerificationCompleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CQDVerificationCompleted) ProtoMessage() {}

func (x *CQDVerificationCompleted) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CQDVerificationCompleted.ProtoReflect.Descriptor instead.
func (*CQDVerificationCompleted) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_rawDescGZIP(), []int{9}
}

type CQDFinished struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CQDFinished) Reset() {
	*x = CQDFinished{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CQDFinished) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CQDFinished) ProtoMessage() {}

func (x *CQDFinished) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CQDFinished.ProtoReflect.Descriptor instead.
func (*CQDFinished) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_rawDescGZIP(), []int{10}
}

type SubmissionCompleted_CLSubmissionFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clid    int64  `protobuf:"varint,1,opt,name=clid,proto3" json:"clid,omitempty"`      // Required
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // Required
}

func (x *SubmissionCompleted_CLSubmissionFailure) Reset() {
	*x = SubmissionCompleted_CLSubmissionFailure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmissionCompleted_CLSubmissionFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmissionCompleted_CLSubmissionFailure) ProtoMessage() {}

func (x *SubmissionCompleted_CLSubmissionFailure) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmissionCompleted_CLSubmissionFailure.ProtoReflect.Descriptor instead.
func (*SubmissionCompleted_CLSubmissionFailure) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_rawDescGZIP(), []int{8, 0}
}

func (x *SubmissionCompleted_CLSubmissionFailure) GetClid() int64 {
	if x != nil {
		return x.Clid
	}
	return 0
}

func (x *SubmissionCompleted_CLSubmissionFailure) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_go_chromium_org_luci_cv_internal_run_eventpb_events_proto protoreflect.FileDescriptor

var file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_rawDesc = []byte{
	0x0a, 0x39, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x63, 0x76, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2f, 0x72, 0x75, 0x6e, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x63, 0x76, 0x2e,
	0x72, 0x75, 0x6e, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf6, 0x05, 0x0a,
	0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x76, 0x2e, 0x72, 0x75, 0x6e, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x48, 0x00, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x30, 0x0a, 0x06, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x76, 0x2e, 0x72, 0x75, 0x6e, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x48, 0x00, 0x52,
	0x06, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x2a, 0x0a, 0x04, 0x70, 0x6f, 0x6b, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x76, 0x2e, 0x72, 0x75, 0x6e, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x6b, 0x65, 0x48, 0x00, 0x52, 0x04, 0x70,
	0x6f, 0x6b, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x76, 0x2e, 0x72, 0x75, 0x6e,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4e, 0x65, 0x77, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x48, 0x00, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x3a, 0x0a, 0x0a, 0x63, 0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x76, 0x2e, 0x72, 0x75, 0x6e, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x70, 0x62, 0x2e, 0x43, 0x4c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x48, 0x00,
	0x52, 0x09, 0x63, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x56, 0x0a, 0x14, 0x72,
	0x65, 0x61, 0x64, 0x79, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x76, 0x2e, 0x72,
	0x75, 0x6e, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x79,
	0x46, 0x6f, 0x72, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x12, 0x72, 0x65, 0x61, 0x64, 0x79, 0x46, 0x6f, 0x72, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x0c, 0x63, 0x6c, 0x5f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x76, 0x2e, 0x72,
	0x75, 0x6e, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x43, 0x4c, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x6c, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x74, 0x65, 0x64, 0x12, 0x58, 0x0a, 0x14, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x76, 0x2e, 0x72, 0x75, 0x6e, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x13, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12,
	0x68, 0x0a, 0x1a, 0x63, 0x71, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x76, 0x2e, 0x72, 0x75, 0x6e, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x70, 0x62, 0x2e, 0x43, 0x51, 0x44, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52,
	0x18, 0x63, 0x71, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x40, 0x0a, 0x0c, 0x63, 0x71, 0x64,
	0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x63, 0x76, 0x2e, 0x72, 0x75, 0x6e, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62,
	0x2e, 0x43, 0x51, 0x44, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0b,
	0x63, 0x71, 0x64, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x3f, 0x0a, 0x0d, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x41, 0x66, 0x74, 0x65, 0x72, 0x42, 0x07, 0x0a, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x07, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x22, 0x08,
	0x0a, 0x06, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x22, 0x06, 0x0a, 0x04, 0x50, 0x6f, 0x6b, 0x65,
	0x22, 0x3b, 0x0a, 0x09, 0x4e, 0x65, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x65, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x3b, 0x0a,
	0x09, 0x43, 0x4c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6c,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6c, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x14, 0x0a, 0x12, 0x52, 0x65,
	0x61, 0x64, 0x79, 0x46, 0x6f, 0x72, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0x21, 0x0a, 0x0b, 0x43, 0x4c, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63,
	0x6c, 0x69, 0x64, 0x22, 0x9c, 0x02, 0x0a, 0x13, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x38, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x63, 0x76,
	0x2e, 0x72, 0x75, 0x6e, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x58, 0x0a, 0x0a, 0x63, 0x6c, 0x5f, 0x66, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x76, 0x2e, 0x72,
	0x75, 0x6e, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x2e, 0x43,
	0x4c, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6c, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12,
	0x1a, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x00, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x1a, 0x43, 0x0a, 0x13, 0x43,
	0x4c, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x63, 0x6c, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x42, 0x10, 0x0a, 0x0e, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x22, 0x1a, 0x0a, 0x18, 0x43, 0x51, 0x44, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x0d,
	0x0a, 0x0b, 0x43, 0x51, 0x44, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x2a, 0x70, 0x0a,
	0x10, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x21, 0x0a, 0x1d, 0x53, 0x55, 0x42, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f,
	0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x55, 0x43, 0x43, 0x45, 0x45, 0x44, 0x45,
	0x44, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x54, 0x52,
	0x41, 0x4e, 0x53, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x46, 0x41, 0x49,
	0x4c, 0x45, 0x44, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x41, 0x4e, 0x45, 0x4e, 0x54, 0x10, 0x03, 0x42,
	0x36, 0x5a, 0x34, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x63, 0x76, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2f, 0x72, 0x75, 0x6e, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x3b,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_rawDescData = file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_rawDesc
)

func file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_rawDescData = protoimpl.X.CompressGZIP(file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_rawDescData)
	})
	return file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_rawDescData
}

var file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_goTypes = []interface{}{
	(SubmissionResult)(0),            // 0: cv.run.eventpb.SubmissionResult
	(*Event)(nil),                    // 1: cv.run.eventpb.Event
	(*Start)(nil),                    // 2: cv.run.eventpb.Start
	(*Cancel)(nil),                   // 3: cv.run.eventpb.Cancel
	(*Poke)(nil),                     // 4: cv.run.eventpb.Poke
	(*NewConfig)(nil),                // 5: cv.run.eventpb.NewConfig
	(*CLUpdated)(nil),                // 6: cv.run.eventpb.CLUpdated
	(*ReadyForSubmission)(nil),       // 7: cv.run.eventpb.ReadyForSubmission
	(*CLSubmitted)(nil),              // 8: cv.run.eventpb.CLSubmitted
	(*SubmissionCompleted)(nil),      // 9: cv.run.eventpb.SubmissionCompleted
	(*CQDVerificationCompleted)(nil), // 10: cv.run.eventpb.CQDVerificationCompleted
	(*CQDFinished)(nil),              // 11: cv.run.eventpb.CQDFinished
	(*SubmissionCompleted_CLSubmissionFailure)(nil), // 12: cv.run.eventpb.SubmissionCompleted.CLSubmissionFailure
	(*timestamppb.Timestamp)(nil),                   // 13: google.protobuf.Timestamp
}
var file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_depIdxs = []int32{
	2,  // 0: cv.run.eventpb.Event.start:type_name -> cv.run.eventpb.Start
	3,  // 1: cv.run.eventpb.Event.cancel:type_name -> cv.run.eventpb.Cancel
	4,  // 2: cv.run.eventpb.Event.poke:type_name -> cv.run.eventpb.Poke
	5,  // 3: cv.run.eventpb.Event.new_config:type_name -> cv.run.eventpb.NewConfig
	6,  // 4: cv.run.eventpb.Event.cl_updated:type_name -> cv.run.eventpb.CLUpdated
	7,  // 5: cv.run.eventpb.Event.ready_for_submission:type_name -> cv.run.eventpb.ReadyForSubmission
	8,  // 6: cv.run.eventpb.Event.cl_submitted:type_name -> cv.run.eventpb.CLSubmitted
	9,  // 7: cv.run.eventpb.Event.submission_completed:type_name -> cv.run.eventpb.SubmissionCompleted
	10, // 8: cv.run.eventpb.Event.cqd_verification_completed:type_name -> cv.run.eventpb.CQDVerificationCompleted
	11, // 9: cv.run.eventpb.Event.cqd_finished:type_name -> cv.run.eventpb.CQDFinished
	13, // 10: cv.run.eventpb.Event.process_after:type_name -> google.protobuf.Timestamp
	0,  // 11: cv.run.eventpb.SubmissionCompleted.result:type_name -> cv.run.eventpb.SubmissionResult
	12, // 12: cv.run.eventpb.SubmissionCompleted.cl_failure:type_name -> cv.run.eventpb.SubmissionCompleted.CLSubmissionFailure
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_init() }
func file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_init() {
	if File_go_chromium_org_luci_cv_internal_run_eventpb_events_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Start); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cancel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Poke); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CLUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadyForSubmission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CLSubmitted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmissionCompleted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CQDVerificationCompleted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CQDFinished); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmissionCompleted_CLSubmissionFailure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Event_Start)(nil),
		(*Event_Cancel)(nil),
		(*Event_Poke)(nil),
		(*Event_NewConfig)(nil),
		(*Event_ClUpdated)(nil),
		(*Event_ReadyForSubmission)(nil),
		(*Event_ClSubmitted)(nil),
		(*Event_SubmissionCompleted)(nil),
		(*Event_CqdVerificationCompleted)(nil),
		(*Event_CqdFinished)(nil),
	}
	file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*SubmissionCompleted_ClFailure)(nil),
		(*SubmissionCompleted_Timeout)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_depIdxs,
		EnumInfos:         file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_enumTypes,
		MessageInfos:      file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_cv_internal_run_eventpb_events_proto = out.File
	file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_rawDesc = nil
	file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_goTypes = nil
	file_go_chromium_org_luci_cv_internal_run_eventpb_events_proto_depIdxs = nil
}
