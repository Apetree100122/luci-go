// Copyright 2020 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package cv.run.internal;

option go_package = "go.chromium.org/luci/cv/internal/run/internal;internal";


// Event is a container for all kinds of events a Run Manager can receive.
message Event {
  oneof event {
    // On Start event, Run Manager will start the Run.
    //
    // The Run entity must already exist.
    Start start = 1;
    // On Cancel event, Run Manager will cancel the Run.
    Cancel cancel = 2;
    // On Poke event, Run Manager will check the state of the Run and perform
    // any action if necessary.
    //
    // Sent periodically by Project Manager.
    Poke poke = 3;
    // On UpdateConfig event, Run Manager will update config the Run for the
    // given RunID.
    //
    // Sent by Project Manager, which guarantees these events are sent in order
    // of config updates. See also its `eversion` field.
    UpdateConfig update_config= 4;
    // TODO(yiwzhang): Define following events that Run Manager may receive:
    //  * CLUpdate
    //  * TryjobUpdate
  }
}

message Start {
}

message Cancel {
}

message Poke {
}

message UpdateConfig {
  // Hash identifying project config version to update to.
  string hash = 1;
  // Eversion of the project config version identify by hash.
  //
  // Provided for identifying the latest UpdateConfig message
  // if there are more than one outstanding UpdateConfig event.
  int64 eversion = 2;
}
