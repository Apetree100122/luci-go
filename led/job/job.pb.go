// Code generated by protoc-gen-go. DO NOT EDIT.
// source: go.chromium.org/luci/led/job/job.proto

package job

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	proto1 "go.chromium.org/luci/buildbucket/proto"
	api "go.chromium.org/luci/swarming/proto/api"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Buildbucket is, ideally, just a BBAgentArgs, but there are bits of data that
// led needs to track which aren't currently contained in BBAgentArgs.
//
// Where it makes sense, this additional data should be moved from this
// Buildbucket message into BBAgentArgs, but for now we store it separately to
// get led v2 up and running.
type Buildbucket struct {
	BbagentArgs      *proto1.BBAgentArgs   `protobuf:"bytes,1,opt,name=bbagent_args,json=bbagentArgs,proto3" json:"bbagent_args,omitempty"`
	CipdPackages     []*api.CIPDPackage    `protobuf:"bytes,2,rep,name=cipd_packages,json=cipdPackages,proto3" json:"cipd_packages,omitempty"`
	EnvVars          []*api.StringPair     `protobuf:"bytes,3,rep,name=env_vars,json=envVars,proto3" json:"env_vars,omitempty"`
	EnvPrefixes      []*api.StringListPair `protobuf:"bytes,4,rep,name=env_prefixes,json=envPrefixes,proto3" json:"env_prefixes,omitempty"`
	ExtraTags        []string              `protobuf:"bytes,5,rep,name=extra_tags,json=extraTags,proto3" json:"extra_tags,omitempty"`
	GracePeriod      *duration.Duration    `protobuf:"bytes,6,opt,name=grace_period,json=gracePeriod,proto3" json:"grace_period,omitempty"`
	BotPingTolerance *duration.Duration    `protobuf:"bytes,7,opt,name=bot_ping_tolerance,json=botPingTolerance,proto3" json:"bot_ping_tolerance,omitempty"`
	Containment      *api.Containment      `protobuf:"bytes,8,opt,name=containment,proto3" json:"containment,omitempty"`
	// Indicates that this build should be generated as a legacy kitchen task when
	// launched.
	LegacyKitchen bool `protobuf:"varint,9,opt,name=legacy_kitchen,json=legacyKitchen,proto3" json:"legacy_kitchen,omitempty"`
	// Eventually becomes the name of the launched swarming task.
	Name string `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	// This field contains the path relative to ${ISOLATED_OUTDIR} for the final
	// build.proto result. If blank, will cause the job not to emit any build
	// proto to the output directory.
	//
	// For bbagent-based jobs this must have the file extension ".pb", ".textpb"
	// or ".json", to get the respective encoding.
	//
	// For legacy kitchen jobs this must have the file extension ".json".
	//
	// By default, led will populate this with "build.proto.json".
	FinalBuildProtoPath  string   `protobuf:"bytes,11,opt,name=final_build_proto_path,json=finalBuildProtoPath,proto3" json:"final_build_proto_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Buildbucket) Reset()         { *m = Buildbucket{} }
func (m *Buildbucket) String() string { return proto.CompactTextString(m) }
func (*Buildbucket) ProtoMessage()    {}
func (*Buildbucket) Descriptor() ([]byte, []int) {
	return fileDescriptor_3163e69eaed6833c, []int{0}
}

func (m *Buildbucket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Buildbucket.Unmarshal(m, b)
}
func (m *Buildbucket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Buildbucket.Marshal(b, m, deterministic)
}
func (m *Buildbucket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Buildbucket.Merge(m, src)
}
func (m *Buildbucket) XXX_Size() int {
	return xxx_messageInfo_Buildbucket.Size(m)
}
func (m *Buildbucket) XXX_DiscardUnknown() {
	xxx_messageInfo_Buildbucket.DiscardUnknown(m)
}

var xxx_messageInfo_Buildbucket proto.InternalMessageInfo

func (m *Buildbucket) GetBbagentArgs() *proto1.BBAgentArgs {
	if m != nil {
		return m.BbagentArgs
	}
	return nil
}

func (m *Buildbucket) GetCipdPackages() []*api.CIPDPackage {
	if m != nil {
		return m.CipdPackages
	}
	return nil
}

func (m *Buildbucket) GetEnvVars() []*api.StringPair {
	if m != nil {
		return m.EnvVars
	}
	return nil
}

func (m *Buildbucket) GetEnvPrefixes() []*api.StringListPair {
	if m != nil {
		return m.EnvPrefixes
	}
	return nil
}

func (m *Buildbucket) GetExtraTags() []string {
	if m != nil {
		return m.ExtraTags
	}
	return nil
}

func (m *Buildbucket) GetGracePeriod() *duration.Duration {
	if m != nil {
		return m.GracePeriod
	}
	return nil
}

func (m *Buildbucket) GetBotPingTolerance() *duration.Duration {
	if m != nil {
		return m.BotPingTolerance
	}
	return nil
}

func (m *Buildbucket) GetContainment() *api.Containment {
	if m != nil {
		return m.Containment
	}
	return nil
}

func (m *Buildbucket) GetLegacyKitchen() bool {
	if m != nil {
		return m.LegacyKitchen
	}
	return false
}

func (m *Buildbucket) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Buildbucket) GetFinalBuildProtoPath() string {
	if m != nil {
		return m.FinalBuildProtoPath
	}
	return ""
}

// Swarming is the raw TaskRequest. When a Definition is in this form, the
// user's ability to manipulate it via `led` subcommands is extremely limited.
type Swarming struct {
	Task                 *api.TaskRequest `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	Hostname             string           `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Swarming) Reset()         { *m = Swarming{} }
func (m *Swarming) String() string { return proto.CompactTextString(m) }
func (*Swarming) ProtoMessage()    {}
func (*Swarming) Descriptor() ([]byte, []int) {
	return fileDescriptor_3163e69eaed6833c, []int{1}
}

func (m *Swarming) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Swarming.Unmarshal(m, b)
}
func (m *Swarming) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Swarming.Marshal(b, m, deterministic)
}
func (m *Swarming) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Swarming.Merge(m, src)
}
func (m *Swarming) XXX_Size() int {
	return xxx_messageInfo_Swarming.Size(m)
}
func (m *Swarming) XXX_DiscardUnknown() {
	xxx_messageInfo_Swarming.DiscardUnknown(m)
}

var xxx_messageInfo_Swarming proto.InternalMessageInfo

func (m *Swarming) GetTask() *api.TaskRequest {
	if m != nil {
		return m.Task
	}
	return nil
}

func (m *Swarming) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

type Definition struct {
	// Types that are valid to be assigned to JobType:
	//	*Definition_Buildbucket
	//	*Definition_Swarming
	JobType isDefinition_JobType `protobuf_oneof:"job_type"`
	// If set, this holds the CASTree to use with the build, when launched.
	//
	// At the time of launch, this will be merged with
	// swarming.task_slice[*].properties.cas_inputs, if any.
	//
	// The 'server' and 'namespace' fields here are used as the defaults for any
	// digests specified without server/namespace.
	UserPayload          *api.CASTree `protobuf:"bytes,3,opt,name=user_payload,json=userPayload,proto3" json:"user_payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Definition) Reset()         { *m = Definition{} }
func (m *Definition) String() string { return proto.CompactTextString(m) }
func (*Definition) ProtoMessage()    {}
func (*Definition) Descriptor() ([]byte, []int) {
	return fileDescriptor_3163e69eaed6833c, []int{2}
}

func (m *Definition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Definition.Unmarshal(m, b)
}
func (m *Definition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Definition.Marshal(b, m, deterministic)
}
func (m *Definition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Definition.Merge(m, src)
}
func (m *Definition) XXX_Size() int {
	return xxx_messageInfo_Definition.Size(m)
}
func (m *Definition) XXX_DiscardUnknown() {
	xxx_messageInfo_Definition.DiscardUnknown(m)
}

var xxx_messageInfo_Definition proto.InternalMessageInfo

type isDefinition_JobType interface {
	isDefinition_JobType()
}

type Definition_Buildbucket struct {
	Buildbucket *Buildbucket `protobuf:"bytes,1,opt,name=buildbucket,proto3,oneof"`
}

type Definition_Swarming struct {
	Swarming *Swarming `protobuf:"bytes,2,opt,name=swarming,proto3,oneof"`
}

func (*Definition_Buildbucket) isDefinition_JobType() {}

func (*Definition_Swarming) isDefinition_JobType() {}

func (m *Definition) GetJobType() isDefinition_JobType {
	if m != nil {
		return m.JobType
	}
	return nil
}

func (m *Definition) GetBuildbucket() *Buildbucket {
	if x, ok := m.GetJobType().(*Definition_Buildbucket); ok {
		return x.Buildbucket
	}
	return nil
}

func (m *Definition) GetSwarming() *Swarming {
	if x, ok := m.GetJobType().(*Definition_Swarming); ok {
		return x.Swarming
	}
	return nil
}

func (m *Definition) GetUserPayload() *api.CASTree {
	if m != nil {
		return m.UserPayload
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Definition) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Definition_Buildbucket)(nil),
		(*Definition_Swarming)(nil),
	}
}

func init() {
	proto.RegisterType((*Buildbucket)(nil), "job.Buildbucket")
	proto.RegisterType((*Swarming)(nil), "job.Swarming")
	proto.RegisterType((*Definition)(nil), "job.Definition")
}

func init() {
	proto.RegisterFile("go.chromium.org/luci/led/job/job.proto", fileDescriptor_3163e69eaed6833c)
}

var fileDescriptor_3163e69eaed6833c = []byte{
	// 613 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x94, 0x5f, 0x6f, 0xd3, 0x30,
	0x10, 0xc0, 0xd7, 0xb5, 0x6c, 0xa9, 0xd3, 0xa1, 0xc9, 0x20, 0x08, 0x9b, 0x40, 0x55, 0x25, 0x50,
	0x25, 0x50, 0x2a, 0x3a, 0xfe, 0x48, 0xfc, 0x93, 0x56, 0x26, 0x31, 0x04, 0x0f, 0x51, 0x56, 0xf1,
	0xc0, 0x8b, 0x75, 0x49, 0xaf, 0xae, 0xdb, 0xd4, 0x0e, 0xb6, 0x53, 0xb6, 0xef, 0xc5, 0x27, 0xe1,
	0x13, 0xa1, 0x38, 0xe9, 0xd6, 0xa1, 0x09, 0x1e, 0x22, 0xc5, 0xe7, 0xdf, 0xef, 0x7c, 0x3a, 0x5f,
	0x42, 0x9e, 0x70, 0x15, 0xa6, 0x33, 0xad, 0x96, 0xa2, 0x58, 0x86, 0x4a, 0xf3, 0x41, 0x56, 0xa4,
	0x62, 0x90, 0xe1, 0x64, 0x30, 0x57, 0x49, 0xf9, 0x84, 0xb9, 0x56, 0x56, 0xd1, 0xe6, 0x5c, 0x25,
	0x07, 0x8f, 0xb8, 0x52, 0x3c, 0xc3, 0x81, 0x0b, 0x25, 0xc5, 0x74, 0x30, 0x29, 0x34, 0x58, 0xa1,
	0x64, 0x05, 0x1d, 0xbc, 0xbc, 0x31, 0x59, 0x52, 0x88, 0x6c, 0x92, 0x14, 0xe9, 0x02, 0x6d, 0x65,
	0x0e, 0x32, 0x28, 0x64, 0x3a, 0x43, 0x5d, 0x6b, 0xaf, 0x6e, 0xd4, 0xcc, 0x4f, 0xd0, 0x4b, 0x21,
	0x79, 0xed, 0x40, 0x7e, 0x15, 0xaa, 0xbc, 0xde, 0xef, 0x16, 0xf1, 0x47, 0x57, 0xc9, 0xe9, 0x07,
	0xd2, 0x49, 0x12, 0xe0, 0x28, 0x2d, 0x03, 0xcd, 0x4d, 0xd0, 0xe8, 0x36, 0xfa, 0xfe, 0xf0, 0x30,
	0xdc, 0x28, 0x20, 0x5c, 0x0d, 0xc3, 0xd1, 0xe8, 0xb8, 0x64, 0x8e, 0x35, 0x37, 0xb1, 0x5f, 0x0b,
	0xe5, 0x82, 0xbe, 0x27, 0x7b, 0xa9, 0xc8, 0x27, 0x2c, 0x87, 0x74, 0x01, 0x1c, 0x4d, 0xb0, 0xdd,
	0x6d, 0xf6, 0xfd, 0x61, 0x10, 0x5e, 0x9e, 0xbb, 0x7a, 0x1e, 0x7e, 0xfc, 0x1c, 0x9d, 0x44, 0x15,
	0x10, 0x77, 0x4a, 0xbc, 0x5e, 0x18, 0x3a, 0x24, 0x1e, 0xca, 0x15, 0x5b, 0x81, 0x36, 0x41, 0xd3,
	0x99, 0xf7, 0xaf, 0x99, 0x67, 0x56, 0x0b, 0xc9, 0x23, 0x10, 0x3a, 0xde, 0x45, 0xb9, 0xfa, 0x06,
	0xda, 0x94, 0x25, 0x97, 0x4e, 0xae, 0x71, 0x2a, 0xce, 0xd1, 0x04, 0x2d, 0xe7, 0x1d, 0xde, 0xe0,
	0x7d, 0x15, 0xc6, 0x3a, 0xd7, 0x47, 0xb9, 0x8a, 0x6a, 0x9e, 0x3e, 0x24, 0x04, 0xcf, 0xad, 0x06,
	0x66, 0x81, 0x9b, 0xe0, 0x56, 0xb7, 0xd9, 0x6f, 0xc7, 0x6d, 0x17, 0x19, 0x03, 0x37, 0xf4, 0x1d,
	0xe9, 0x70, 0x0d, 0x29, 0xb2, 0x1c, 0xb5, 0x50, 0x93, 0x60, 0xc7, 0x75, 0xe4, 0x41, 0x58, 0xdd,
	0x63, 0xb8, 0xbe, 0xc7, 0xf0, 0xa4, 0xbe, 0xc7, 0xd8, 0x77, 0x78, 0xe4, 0x68, 0xfa, 0x89, 0xd0,
	0x44, 0x59, 0x96, 0x0b, 0xc9, 0x99, 0x55, 0x19, 0x6a, 0x90, 0x29, 0x06, 0xbb, 0xff, 0xcb, 0xb1,
	0x9f, 0x28, 0x1b, 0x09, 0xc9, 0xc7, 0x6b, 0x85, 0xbe, 0x21, 0x7e, 0xaa, 0xa4, 0x05, 0x21, 0x97,
	0x28, 0x6d, 0xe0, 0xb9, 0x0c, 0x7f, 0xb5, 0xf5, 0x6a, 0x3f, 0xde, 0x84, 0xe9, 0x63, 0x72, 0x3b,
	0x43, 0x0e, 0xe9, 0x05, 0x5b, 0x08, 0x9b, 0xce, 0x50, 0x06, 0xed, 0x6e, 0xa3, 0xef, 0xc5, 0x7b,
	0x55, 0xf4, 0x4b, 0x15, 0xa4, 0x94, 0xb4, 0x24, 0x2c, 0x31, 0x20, 0xdd, 0x46, 0xbf, 0x1d, 0xbb,
	0x77, 0x7a, 0x44, 0xee, 0x4d, 0x85, 0x84, 0x8c, 0xb9, 0x01, 0x60, 0xae, 0x52, 0x96, 0x83, 0x9d,
	0x05, 0xbe, 0xa3, 0xee, 0xb8, 0x5d, 0x37, 0x41, 0x51, 0xb9, 0x17, 0x81, 0x9d, 0xf5, 0xc6, 0xc4,
	0x3b, 0xab, 0xeb, 0xa2, 0xcf, 0x48, 0xcb, 0x82, 0x59, 0xd4, 0x83, 0x74, 0xbd, 0xe0, 0x31, 0x98,
	0x45, 0x8c, 0x3f, 0x0a, 0x34, 0x36, 0x76, 0x14, 0x3d, 0x20, 0xde, 0x4c, 0x19, 0xeb, 0xca, 0xd8,
	0x76, 0x07, 0x5c, 0xae, 0x7b, 0xbf, 0x1a, 0x84, 0x9c, 0xe0, 0x54, 0x48, 0x51, 0xb6, 0x88, 0xbe,
	0x20, 0xfe, 0xc6, 0x50, 0xd6, 0xf9, 0xf7, 0xc3, 0xf2, 0x73, 0xdb, 0x18, 0xe8, 0xd3, 0xad, 0x78,
	0x13, 0xa3, 0x4f, 0x89, 0xb7, 0xae, 0xc0, 0x1d, 0xe0, 0x0f, 0xf7, 0x9c, 0xb2, 0xae, 0xf7, 0x74,
	0x2b, 0xbe, 0x04, 0xe8, 0x6b, 0xd2, 0x29, 0x0c, 0x6a, 0x96, 0xc3, 0x45, 0xa6, 0x60, 0x12, 0x34,
	0x9d, 0x70, 0xf7, 0x7a, 0xd3, 0x8f, 0xcf, 0xc6, 0x1a, 0x31, 0xf6, 0x4b, 0x32, 0xaa, 0xc0, 0x11,
	0x21, 0xde, 0x5c, 0x25, 0xcc, 0x5e, 0xe4, 0x38, 0xea, 0x7d, 0xef, 0xfe, 0xeb, 0xff, 0xf0, 0x76,
	0xae, 0x92, 0x64, 0xc7, 0xf5, 0xf5, 0xe8, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xfb, 0x23, 0x11,
	0x04, 0x4a, 0x04, 0x00, 0x00,
}
