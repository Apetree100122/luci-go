// Copyright 2016 The LUCI Authors. All rights reserved.
// Use of this source code is governed under the Apache License, Version 2.0
// that can be found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.12.1
// source: go.chromium.org/luci/dm/api/service/v1/walk_graph.proto

package dm

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Direction indicates that direction of dependencies that the request should
// walk.
type WalkGraphReq_Mode_Direction int32

const (
	WalkGraphReq_Mode_FORWARDS  WalkGraphReq_Mode_Direction = 0
	WalkGraphReq_Mode_BACKWARDS WalkGraphReq_Mode_Direction = 1
	WalkGraphReq_Mode_BOTH      WalkGraphReq_Mode_Direction = 2
)

// Enum value maps for WalkGraphReq_Mode_Direction.
var (
	WalkGraphReq_Mode_Direction_name = map[int32]string{
		0: "FORWARDS",
		1: "BACKWARDS",
		2: "BOTH",
	}
	WalkGraphReq_Mode_Direction_value = map[string]int32{
		"FORWARDS":  0,
		"BACKWARDS": 1,
		"BOTH":      2,
	}
)

func (x WalkGraphReq_Mode_Direction) Enum() *WalkGraphReq_Mode_Direction {
	p := new(WalkGraphReq_Mode_Direction)
	*p = x
	return p
}

func (x WalkGraphReq_Mode_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WalkGraphReq_Mode_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_enumTypes[0].Descriptor()
}

func (WalkGraphReq_Mode_Direction) Type() protoreflect.EnumType {
	return &file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_enumTypes[0]
}

func (x WalkGraphReq_Mode_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WalkGraphReq_Mode_Direction.Descriptor instead.
func (WalkGraphReq_Mode_Direction) EnumDescriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_rawDescGZIP(), []int{0, 0, 0}
}

// WalkGraphReq allows you to walk from one or more Quests through their
// Attempt's forward dependencies.
//
//
// The handler will evaluate all of the queries, executing them in parallel.
// For each attempt or quest produced by the query, it will queue a walk
// operation for that node, respecting the options set (max_depth, etc.).
type WalkGraphReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional. See Include.AttemptResult for restrictions.
	Auth *Execution_Auth `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	// Query specifies a list of queries to start the graph traversal on. The
	// traversal will occur as a union of the query results. Redundant
	// specification will not cause additional heavy work; every graph node will
	// be processed exactly once, regardless of how many times it appears in the
	// query results. However, redundancy in the queries will cause the server to
	// retrieve and discard more information.
	Query *GraphQuery         `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	Mode  *WalkGraphReq_Mode  `protobuf:"bytes,3,opt,name=mode,proto3" json:"mode,omitempty"`
	Limit *WalkGraphReq_Limit `protobuf:"bytes,4,opt,name=limit,proto3" json:"limit,omitempty"`
	// Include allows you to add additional information to the returned
	// GraphData which is typically medium-to-large sized.
	Include *WalkGraphReq_Include `protobuf:"bytes,5,opt,name=include,proto3" json:"include,omitempty"`
	Exclude *WalkGraphReq_Exclude `protobuf:"bytes,6,opt,name=exclude,proto3" json:"exclude,omitempty"`
}

func (x *WalkGraphReq) Reset() {
	*x = WalkGraphReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalkGraphReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalkGraphReq) ProtoMessage() {}

func (x *WalkGraphReq) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalkGraphReq.ProtoReflect.Descriptor instead.
func (*WalkGraphReq) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_rawDescGZIP(), []int{0}
}

func (x *WalkGraphReq) GetAuth() *Execution_Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *WalkGraphReq) GetQuery() *GraphQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *WalkGraphReq) GetMode() *WalkGraphReq_Mode {
	if x != nil {
		return x.Mode
	}
	return nil
}

func (x *WalkGraphReq) GetLimit() *WalkGraphReq_Limit {
	if x != nil {
		return x.Limit
	}
	return nil
}

func (x *WalkGraphReq) GetInclude() *WalkGraphReq_Include {
	if x != nil {
		return x.Include
	}
	return nil
}

func (x *WalkGraphReq) GetExclude() *WalkGraphReq_Exclude {
	if x != nil {
		return x.Exclude
	}
	return nil
}

type WalkGraphReq_Mode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DFS sets whether this is a Depth-first (ish) or a Breadth-first (ish) load.
	// Since the load operation is multi-threaded, the search order is best
	// effort, but will actually be some hybrid between DFS and BFS. This setting
	// controls the bias direction of the hybrid loading algorithm.
	Dfs       bool                        `protobuf:"varint,1,opt,name=dfs,proto3" json:"dfs,omitempty"`
	Direction WalkGraphReq_Mode_Direction `protobuf:"varint,2,opt,name=direction,proto3,enum=dm.WalkGraphReq_Mode_Direction" json:"direction,omitempty"`
}

func (x *WalkGraphReq_Mode) Reset() {
	*x = WalkGraphReq_Mode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalkGraphReq_Mode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalkGraphReq_Mode) ProtoMessage() {}

func (x *WalkGraphReq_Mode) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalkGraphReq_Mode.ProtoReflect.Descriptor instead.
func (*WalkGraphReq_Mode) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_rawDescGZIP(), []int{0, 0}
}

func (x *WalkGraphReq_Mode) GetDfs() bool {
	if x != nil {
		return x.Dfs
	}
	return false
}

func (x *WalkGraphReq_Mode) GetDirection() WalkGraphReq_Mode_Direction {
	if x != nil {
		return x.Direction
	}
	return WalkGraphReq_Mode_FORWARDS
}

type WalkGraphReq_Limit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// MaxDepth sets the number of attempts to traverse; 0 means 'immediate'
	// (no dependencies), -1 means 'no limit', and >0 is a limit.
	//
	// Any negative value besides -1 is an error.
	MaxDepth int64 `protobuf:"varint,1,opt,name=max_depth,json=maxDepth,proto3" json:"max_depth,omitempty"`
	// MaxTime sets the maximum amount of time that the query processor should
	// take. Application of this deadline is 'best effort', which means the query
	// may take a bit longer than this timeout and still attempt to return data.
	//
	// This is different than the grpc timeout header, which will set a hard
	// deadline for the request.
	MaxTime *durationpb.Duration `protobuf:"bytes,2,opt,name=max_time,json=maxTime,proto3" json:"max_time,omitempty"`
	// MaxDataSize sets the maximum amount of 'Data' (in bytes) that can be
	// returned, if include.quest_data, include.attempt_data, and/or
	// include.attempt_result are set. If this limit is hit, then the
	// appropriate 'partial' value will be set for that object, but the base
	// object would still be included in the result.
	//
	// If this limit is 0, a default limit of 16MB will be used. If this limit
	// exceeds 30MB, it will be reduced to 30MB.
	MaxDataSize uint32 `protobuf:"varint,3,opt,name=max_data_size,json=maxDataSize,proto3" json:"max_data_size,omitempty"`
}

func (x *WalkGraphReq_Limit) Reset() {
	*x = WalkGraphReq_Limit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalkGraphReq_Limit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalkGraphReq_Limit) ProtoMessage() {}

func (x *WalkGraphReq_Limit) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalkGraphReq_Limit.ProtoReflect.Descriptor instead.
func (*WalkGraphReq_Limit) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_rawDescGZIP(), []int{0, 1}
}

func (x *WalkGraphReq_Limit) GetMaxDepth() int64 {
	if x != nil {
		return x.MaxDepth
	}
	return 0
}

func (x *WalkGraphReq_Limit) GetMaxTime() *durationpb.Duration {
	if x != nil {
		return x.MaxTime
	}
	return nil
}

func (x *WalkGraphReq_Limit) GetMaxDataSize() uint32 {
	if x != nil {
		return x.MaxDataSize
	}
	return 0
}

type WalkGraphReq_Include struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Quest     *WalkGraphReq_Include_Options `protobuf:"bytes,1,opt,name=quest,proto3" json:"quest,omitempty"`
	Attempt   *WalkGraphReq_Include_Options `protobuf:"bytes,2,opt,name=attempt,proto3" json:"attempt,omitempty"`
	Execution *WalkGraphReq_Include_Options `protobuf:"bytes,3,opt,name=execution,proto3" json:"execution,omitempty"`
	// Executions is the number of Executions to include per Attempt. If this
	// is 0, then the execution data will be omitted completely.
	//
	// Executions included are from high ids to low ids. So setting this to `1`
	// would return the LAST execution made for this Attempt.
	NumExecutions uint32 `protobuf:"varint,4,opt,name=num_executions,json=numExecutions,proto3" json:"num_executions,omitempty"`
	// FwdDeps instructs WalkGraph to include forward dependency information
	// from the result. This only changes the presence of information in the
	// result; if the query is walking forward attempt dependencies, that will
	// still occur even if this is false.
	FwdDeps bool `protobuf:"varint,5,opt,name=fwd_deps,json=fwdDeps,proto3" json:"fwd_deps,omitempty"`
	// BackDeps instructs WalkGraph to include the backwards dependency
	// information. This only changes the presence of information in the result;
	// if the query is walking backward attempt dependencies, that will still
	// occur even if this is false.
	BackDeps bool `protobuf:"varint,6,opt,name=back_deps,json=backDeps,proto3" json:"back_deps,omitempty"`
}

func (x *WalkGraphReq_Include) Reset() {
	*x = WalkGraphReq_Include{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalkGraphReq_Include) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalkGraphReq_Include) ProtoMessage() {}

func (x *WalkGraphReq_Include) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalkGraphReq_Include.ProtoReflect.Descriptor instead.
func (*WalkGraphReq_Include) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_rawDescGZIP(), []int{0, 2}
}

func (x *WalkGraphReq_Include) GetQuest() *WalkGraphReq_Include_Options {
	if x != nil {
		return x.Quest
	}
	return nil
}

func (x *WalkGraphReq_Include) GetAttempt() *WalkGraphReq_Include_Options {
	if x != nil {
		return x.Attempt
	}
	return nil
}

func (x *WalkGraphReq_Include) GetExecution() *WalkGraphReq_Include_Options {
	if x != nil {
		return x.Execution
	}
	return nil
}

func (x *WalkGraphReq_Include) GetNumExecutions() uint32 {
	if x != nil {
		return x.NumExecutions
	}
	return 0
}

func (x *WalkGraphReq_Include) GetFwdDeps() bool {
	if x != nil {
		return x.FwdDeps
	}
	return false
}

func (x *WalkGraphReq_Include) GetBackDeps() bool {
	if x != nil {
		return x.BackDeps
	}
	return false
}

type WalkGraphReq_Exclude struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Do not include data from the following quests in the response.
	Quests []string `protobuf:"bytes,1,rep,name=quests,proto3" json:"quests,omitempty"`
	// Do not include data from the following attempts in the response.
	Attempts *AttemptList `protobuf:"bytes,2,opt,name=attempts,proto3" json:"attempts,omitempty"`
}

func (x *WalkGraphReq_Exclude) Reset() {
	*x = WalkGraphReq_Exclude{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalkGraphReq_Exclude) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalkGraphReq_Exclude) ProtoMessage() {}

func (x *WalkGraphReq_Exclude) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalkGraphReq_Exclude.ProtoReflect.Descriptor instead.
func (*WalkGraphReq_Exclude) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_rawDescGZIP(), []int{0, 3}
}

func (x *WalkGraphReq_Exclude) GetQuests() []string {
	if x != nil {
		return x.Quests
	}
	return nil
}

func (x *WalkGraphReq_Exclude) GetAttempts() *AttemptList {
	if x != nil {
		return x.Attempts
	}
	return nil
}

type WalkGraphReq_Include_Options struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Fills the 'id' field.
	//
	// If this is false, it will be omitted.
	//
	// Note that there's enough information contextually to derive these ids
	// on the client side, though it can be handy to have the server produce
	// them for you.
	Ids bool `protobuf:"varint,1,opt,name=ids,proto3" json:"ids,omitempty"`
	// Instructs the request to include the Data field
	Data bool `protobuf:"varint,2,opt,name=data,proto3" json:"data,omitempty"`
	// Instructs finished objects to include the Result field.
	//
	// If the requestor is an execution, the query logic will only include the
	// result if the execution's Attempt depends on it, otherwise it will be
	// blank.
	//
	// If the request's cumulative result data would be more than
	// limit.max_data_size of data, the remaining results will have their
	// Partial.Result set to DATA_SIZE_LIMIT.
	//
	// Has no effect for Quests.
	Result bool `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	// If set to true, objects with an abnormal termination will be included.
	Abnormal bool `protobuf:"varint,4,opt,name=abnormal,proto3" json:"abnormal,omitempty"`
	// If set to true, expired objects will be included.
	Expired bool `protobuf:"varint,5,opt,name=expired,proto3" json:"expired,omitempty"`
}

func (x *WalkGraphReq_Include_Options) Reset() {
	*x = WalkGraphReq_Include_Options{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalkGraphReq_Include_Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalkGraphReq_Include_Options) ProtoMessage() {}

func (x *WalkGraphReq_Include_Options) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalkGraphReq_Include_Options.ProtoReflect.Descriptor instead.
func (*WalkGraphReq_Include_Options) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_rawDescGZIP(), []int{0, 2, 0}
}

func (x *WalkGraphReq_Include_Options) GetIds() bool {
	if x != nil {
		return x.Ids
	}
	return false
}

func (x *WalkGraphReq_Include_Options) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

func (x *WalkGraphReq_Include_Options) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *WalkGraphReq_Include_Options) GetAbnormal() bool {
	if x != nil {
		return x.Abnormal
	}
	return false
}

func (x *WalkGraphReq_Include_Options) GetExpired() bool {
	if x != nil {
		return x.Expired
	}
	return false
}

var File_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto protoreflect.FileDescriptor

var file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_rawDesc = []byte{
	0x0a, 0x37, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x64, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x61, 0x6c, 0x6b, 0x5f, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x64, 0x6d, 0x1a, 0x1e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x37, 0x67,
	0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c,
	0x75, 0x63, 0x69, 0x2f, 0x64, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x38, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d,
	0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x64, 0x6d, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x32, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x64, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x99, 0x08, 0x0a, 0x0c, 0x57, 0x61, 0x6c, 0x6b, 0x47, 0x72, 0x61,
	0x70, 0x68, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x6d, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x24, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x64,
	0x6d, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x29, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x64, 0x6d, 0x2e, 0x57, 0x61, 0x6c, 0x6b, 0x47, 0x72, 0x61, 0x70, 0x68,
	0x52, 0x65, 0x71, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x2c,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x64, 0x6d, 0x2e, 0x57, 0x61, 0x6c, 0x6b, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x71, 0x2e,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x32, 0x0a, 0x07,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x64, 0x6d, 0x2e, 0x57, 0x61, 0x6c, 0x6b, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x71, 0x2e,
	0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x52, 0x07, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x12, 0x32, 0x0a, 0x07, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x64, 0x6d, 0x2e, 0x57, 0x61, 0x6c, 0x6b, 0x47, 0x72, 0x61, 0x70, 0x68,
	0x52, 0x65, 0x71, 0x2e, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x52, 0x07, 0x65, 0x78, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x1a, 0x8b, 0x01, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x64, 0x66, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x64, 0x66, 0x73, 0x12,
	0x3d, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x64, 0x6d, 0x2e, 0x57, 0x61, 0x6c, 0x6b, 0x47, 0x72, 0x61, 0x70,
	0x68, 0x52, 0x65, 0x71, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32,
	0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0c, 0x0a, 0x08, 0x46,
	0x4f, 0x52, 0x57, 0x41, 0x52, 0x44, 0x53, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x43,
	0x4b, 0x57, 0x41, 0x52, 0x44, 0x53, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x4f, 0x54, 0x48,
	0x10, 0x02, 0x1a, 0x7e, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x61, 0x78, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x6d, 0x61, 0x78, 0x44, 0x65, 0x70, 0x74, 0x68, 0x12, 0x34, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22,
	0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x44, 0x61, 0x74, 0x61, 0x53, 0x69,
	0x7a, 0x65, 0x1a, 0x9b, 0x03, 0x0a, 0x07, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x12, 0x36,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x64, 0x6d, 0x2e, 0x57, 0x61, 0x6c, 0x6b, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x71, 0x2e,
	0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x05, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x07, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x6d, 0x2e, 0x57, 0x61, 0x6c,
	0x6b, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x71, 0x2e, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x61, 0x74, 0x74, 0x65, 0x6d,
	0x70, 0x74, 0x12, 0x3e, 0x0a, 0x09, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x6d, 0x2e, 0x57, 0x61, 0x6c, 0x6b, 0x47,
	0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x71, 0x2e, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x2e,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x09, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x75, 0x6d, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x77, 0x64,
	0x5f, 0x64, 0x65, 0x70, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x66, 0x77, 0x64,
	0x44, 0x65, 0x70, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x64, 0x65, 0x70,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x62, 0x61, 0x63, 0x6b, 0x44, 0x65, 0x70,
	0x73, 0x1a, 0x7d, 0x0a, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x62,
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x62,
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64,
	0x1a, 0x4e, 0x0a, 0x07, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x12, 0x2b, 0x0a, 0x08, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x64, 0x6d, 0x2e, 0x41, 0x74, 0x74, 0x65, 0x6d,
	0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x08, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73,
	0x42, 0x2b, 0x5a, 0x29, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x64, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x64, 0x6d, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_rawDescData = file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_rawDesc
)

func file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_rawDescData = protoimpl.X.CompressGZIP(file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_rawDescData)
	})
	return file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_rawDescData
}

var file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_goTypes = []interface{}{
	(WalkGraphReq_Mode_Direction)(0),     // 0: dm.WalkGraphReq.Mode.Direction
	(*WalkGraphReq)(nil),                 // 1: dm.WalkGraphReq
	(*WalkGraphReq_Mode)(nil),            // 2: dm.WalkGraphReq.Mode
	(*WalkGraphReq_Limit)(nil),           // 3: dm.WalkGraphReq.Limit
	(*WalkGraphReq_Include)(nil),         // 4: dm.WalkGraphReq.Include
	(*WalkGraphReq_Exclude)(nil),         // 5: dm.WalkGraphReq.Exclude
	(*WalkGraphReq_Include_Options)(nil), // 6: dm.WalkGraphReq.Include.Options
	(*Execution_Auth)(nil),               // 7: dm.Execution.Auth
	(*GraphQuery)(nil),                   // 8: dm.GraphQuery
	(*durationpb.Duration)(nil),          // 9: google.protobuf.Duration
	(*AttemptList)(nil),                  // 10: dm.AttemptList
}
var file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_depIdxs = []int32{
	7,  // 0: dm.WalkGraphReq.auth:type_name -> dm.Execution.Auth
	8,  // 1: dm.WalkGraphReq.query:type_name -> dm.GraphQuery
	2,  // 2: dm.WalkGraphReq.mode:type_name -> dm.WalkGraphReq.Mode
	3,  // 3: dm.WalkGraphReq.limit:type_name -> dm.WalkGraphReq.Limit
	4,  // 4: dm.WalkGraphReq.include:type_name -> dm.WalkGraphReq.Include
	5,  // 5: dm.WalkGraphReq.exclude:type_name -> dm.WalkGraphReq.Exclude
	0,  // 6: dm.WalkGraphReq.Mode.direction:type_name -> dm.WalkGraphReq.Mode.Direction
	9,  // 7: dm.WalkGraphReq.Limit.max_time:type_name -> google.protobuf.Duration
	6,  // 8: dm.WalkGraphReq.Include.quest:type_name -> dm.WalkGraphReq.Include.Options
	6,  // 9: dm.WalkGraphReq.Include.attempt:type_name -> dm.WalkGraphReq.Include.Options
	6,  // 10: dm.WalkGraphReq.Include.execution:type_name -> dm.WalkGraphReq.Include.Options
	10, // 11: dm.WalkGraphReq.Exclude.attempts:type_name -> dm.AttemptList
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_init() }
func file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_init() {
	if File_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto != nil {
		return
	}
	file_go_chromium_org_luci_dm_api_service_v1_graph_data_proto_init()
	file_go_chromium_org_luci_dm_api_service_v1_graph_query_proto_init()
	file_go_chromium_org_luci_dm_api_service_v1_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalkGraphReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalkGraphReq_Mode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalkGraphReq_Limit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalkGraphReq_Include); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalkGraphReq_Exclude); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalkGraphReq_Include_Options); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_depIdxs,
		EnumInfos:         file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_enumTypes,
		MessageInfos:      file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto = out.File
	file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_rawDesc = nil
	file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_goTypes = nil
	file_go_chromium_org_luci_dm_api_service_v1_walk_graph_proto_depIdxs = nil
}
