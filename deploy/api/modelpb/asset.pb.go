// Copyright 2022 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: go.chromium.org/luci/deploy/api/modelpb/asset.proto

package modelpb

import (
	status "google.golang.org/genproto/googleapis/rpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Asset represents a Cloud resource (or a bunch of resources) actuated as
// a single unit.
type Asset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique ID of this asset.
	//
	// Defines the asset type (in particular what oneof branch is expected to
	// be populated in AssetState).
	//
	// Matches full resource name of the asset's root resource per Google Cloud
	// API conventions. For now only Appengine services are supported with asset
	// ID being "apps/<app-id>".
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The snapshot of the most recent actuation (may still be in-flight).
	//
	// Also contains the Deployment associated with this asset.
	LastActuation *Actuation `protobuf:"bytes,2,opt,name=last_actuation,json=lastActuation,proto3" json:"last_actuation,omitempty"`
	// Asset configuration as defined in the IaC repo.
	//
	// It's the configuration consumed the the deployment system itself. Actuated
	// resources are configured via `intended_state`.
	Config *AssetConfig `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	// The intended state of the asset as defined in the IaC repo.
	//
	// This state is derived purely from the committed configuration. The actuator
	// will try to move the asset into this state.
	IntendedState *AssetState `protobuf:"bytes,4,opt,name=intended_state,json=intendedState,proto3" json:"intended_state,omitempty"`
	// The actual state of the asset as reported by the actuator most recently.
	//
	// Always matches some real observed state of the asset, regardless how this
	// state came to be.
	ReportedState *AssetState `protobuf:"bytes,5,opt,name=reported_state,json=reportedState,proto3" json:"reported_state,omitempty"`
	// The last state applied by the actuator itself.
	//
	// For up-to-date assets it matches `intended_state` and `reported_state`.
	//
	// If during an actuation cycle the actuator partially updates some resources
	// and then fails, `actuated_state` may be some intermediate state between
	// the intended and the initial pre-actuation states.
	//
	// If some external entity (not the actuator) messes with the asset,
	// `reported_state` may be different from `actuated_state`.
	ActuatedState *AssetState `protobuf:"bytes,6,opt,name=actuated_state,json=actuatedState,proto3" json:"actuated_state,omitempty"`
}

func (x *Asset) Reset() {
	*x = Asset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_deploy_api_modelpb_asset_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Asset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Asset) ProtoMessage() {}

func (x *Asset) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_deploy_api_modelpb_asset_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Asset.ProtoReflect.Descriptor instead.
func (*Asset) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_deploy_api_modelpb_asset_proto_rawDescGZIP(), []int{0}
}

func (x *Asset) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Asset) GetLastActuation() *Actuation {
	if x != nil {
		return x.LastActuation
	}
	return nil
}

func (x *Asset) GetConfig() *AssetConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *Asset) GetIntendedState() *AssetState {
	if x != nil {
		return x.IntendedState
	}
	return nil
}

func (x *Asset) GetReportedState() *AssetState {
	if x != nil {
		return x.ReportedState
	}
	return nil
}

func (x *Asset) GetActuatedState() *AssetState {
	if x != nil {
		return x.ActuatedState
	}
	return nil
}

// Asset configuration as defined in the IaC repo.
type AssetConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// True to actuate the asset, false to leave it alone.
	EnableAutomation bool `protobuf:"varint,1,opt,name=enable_automation,json=enableAutomation,proto3" json:"enable_automation,omitempty"`
}

func (x *AssetConfig) Reset() {
	*x = AssetConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_deploy_api_modelpb_asset_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetConfig) ProtoMessage() {}

func (x *AssetConfig) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_deploy_api_modelpb_asset_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetConfig.ProtoReflect.Descriptor instead.
func (*AssetConfig) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_deploy_api_modelpb_asset_proto_rawDescGZIP(), []int{1}
}

func (x *AssetConfig) GetEnableAutomation() bool {
	if x != nil {
		return x.EnableAutomation
	}
	return false
}

// A snapshot of the intended or captured state of an asset.
//
// Also contains information about the actuator and the deployment at the time
// the state was captured. This is useful for the historical log of states.
type AssetState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// When this state was captured.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The deployment configuration at the time the state was captured.
	Deployment *Deployment `protobuf:"bytes,2,opt,name=deployment,proto3" json:"deployment,omitempty"`
	// The actuator that performed the capture.
	Actuator *ActuatorInfo `protobuf:"bytes,3,opt,name=actuator,proto3" json:"actuator,omitempty"`
	// Error details if the asset state could not be captured.
	Status *status.Status `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	// The intended or captured state of the asset.
	//
	// Types that are assignable to State:
	//	*AssetState_Appengine
	State isAssetState_State `protobuf_oneof:"state"`
}

func (x *AssetState) Reset() {
	*x = AssetState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_deploy_api_modelpb_asset_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetState) ProtoMessage() {}

func (x *AssetState) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_deploy_api_modelpb_asset_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetState.ProtoReflect.Descriptor instead.
func (*AssetState) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_deploy_api_modelpb_asset_proto_rawDescGZIP(), []int{2}
}

func (x *AssetState) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *AssetState) GetDeployment() *Deployment {
	if x != nil {
		return x.Deployment
	}
	return nil
}

func (x *AssetState) GetActuator() *ActuatorInfo {
	if x != nil {
		return x.Actuator
	}
	return nil
}

func (x *AssetState) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (m *AssetState) GetState() isAssetState_State {
	if m != nil {
		return m.State
	}
	return nil
}

func (x *AssetState) GetAppengine() *AppengineState {
	if x, ok := x.GetState().(*AssetState_Appengine); ok {
		return x.Appengine
	}
	return nil
}

type isAssetState_State interface {
	isAssetState_State()
}

type AssetState_Appengine struct {
	// For assets with ID "apps/<app-id>".
	Appengine *AppengineState `protobuf:"bytes,10,opt,name=appengine,proto3,oneof"`
}

func (*AssetState_Appengine) isAssetState_State() {}

// Intended or captured state of an Appengine service.
type AppengineState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AppengineState) Reset() {
	*x = AppengineState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_deploy_api_modelpb_asset_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppengineState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppengineState) ProtoMessage() {}

func (x *AppengineState) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_deploy_api_modelpb_asset_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppengineState.ProtoReflect.Descriptor instead.
func (*AppengineState) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_deploy_api_modelpb_asset_proto_rawDescGZIP(), []int{3}
}

var File_go_chromium_org_luci_deploy_api_modelpb_asset_proto protoreflect.FileDescriptor

var file_go_chromium_org_luci_deploy_api_modelpb_asset_proto_rawDesc = []byte{
	0x0a, 0x33, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x70, 0x62, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x72, 0x70, 0x63,
	0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x37, 0x67,
	0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c,
	0x75, 0x63, 0x69, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x70, 0x62, 0x2f, 0x61, 0x63, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x38, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d,
	0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x70, 0x62, 0x2f,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xcd, 0x02, 0x0a, 0x05, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3e, 0x0a, 0x0e, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x6c, 0x61, 0x73,
	0x74, 0x41, 0x63, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3f, 0x0a,
	0x0e, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x0d, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3f,
	0x0a, 0x0e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x0d, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x3f, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x75, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x75, 0x61, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x22, 0x3a, 0x0a, 0x0b, 0x41, 0x73, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x2b, 0x0a, 0x11, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xab, 0x02, 0x0a,
	0x0a, 0x41, 0x73, 0x73, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x38, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x36, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x61,
	0x63, 0x74, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x3c, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x09, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x42, 0x07, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x41, 0x70,
	0x70, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x29, 0x5a, 0x27,
	0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x6c, 0x75, 0x63, 0x69, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_go_chromium_org_luci_deploy_api_modelpb_asset_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_deploy_api_modelpb_asset_proto_rawDescData = file_go_chromium_org_luci_deploy_api_modelpb_asset_proto_rawDesc
)

func file_go_chromium_org_luci_deploy_api_modelpb_asset_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_deploy_api_modelpb_asset_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_deploy_api_modelpb_asset_proto_rawDescData = protoimpl.X.CompressGZIP(file_go_chromium_org_luci_deploy_api_modelpb_asset_proto_rawDescData)
	})
	return file_go_chromium_org_luci_deploy_api_modelpb_asset_proto_rawDescData
}

var file_go_chromium_org_luci_deploy_api_modelpb_asset_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_go_chromium_org_luci_deploy_api_modelpb_asset_proto_goTypes = []interface{}{
	(*Asset)(nil),                 // 0: deploy.model.Asset
	(*AssetConfig)(nil),           // 1: deploy.model.AssetConfig
	(*AssetState)(nil),            // 2: deploy.model.AssetState
	(*AppengineState)(nil),        // 3: deploy.model.AppengineState
	(*Actuation)(nil),             // 4: deploy.model.Actuation
	(*timestamppb.Timestamp)(nil), // 5: google.protobuf.Timestamp
	(*Deployment)(nil),            // 6: deploy.model.Deployment
	(*ActuatorInfo)(nil),          // 7: deploy.model.ActuatorInfo
	(*status.Status)(nil),         // 8: google.rpc.Status
}
var file_go_chromium_org_luci_deploy_api_modelpb_asset_proto_depIdxs = []int32{
	4,  // 0: deploy.model.Asset.last_actuation:type_name -> deploy.model.Actuation
	1,  // 1: deploy.model.Asset.config:type_name -> deploy.model.AssetConfig
	2,  // 2: deploy.model.Asset.intended_state:type_name -> deploy.model.AssetState
	2,  // 3: deploy.model.Asset.reported_state:type_name -> deploy.model.AssetState
	2,  // 4: deploy.model.Asset.actuated_state:type_name -> deploy.model.AssetState
	5,  // 5: deploy.model.AssetState.timestamp:type_name -> google.protobuf.Timestamp
	6,  // 6: deploy.model.AssetState.deployment:type_name -> deploy.model.Deployment
	7,  // 7: deploy.model.AssetState.actuator:type_name -> deploy.model.ActuatorInfo
	8,  // 8: deploy.model.AssetState.status:type_name -> google.rpc.Status
	3,  // 9: deploy.model.AssetState.appengine:type_name -> deploy.model.AppengineState
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_deploy_api_modelpb_asset_proto_init() }
func file_go_chromium_org_luci_deploy_api_modelpb_asset_proto_init() {
	if File_go_chromium_org_luci_deploy_api_modelpb_asset_proto != nil {
		return
	}
	file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_init()
	file_go_chromium_org_luci_deploy_api_modelpb_deployment_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_go_chromium_org_luci_deploy_api_modelpb_asset_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Asset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_deploy_api_modelpb_asset_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_deploy_api_modelpb_asset_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_deploy_api_modelpb_asset_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppengineState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_go_chromium_org_luci_deploy_api_modelpb_asset_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*AssetState_Appengine)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_go_chromium_org_luci_deploy_api_modelpb_asset_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_chromium_org_luci_deploy_api_modelpb_asset_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_deploy_api_modelpb_asset_proto_depIdxs,
		MessageInfos:      file_go_chromium_org_luci_deploy_api_modelpb_asset_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_deploy_api_modelpb_asset_proto = out.File
	file_go_chromium_org_luci_deploy_api_modelpb_asset_proto_rawDesc = nil
	file_go_chromium_org_luci_deploy_api_modelpb_asset_proto_goTypes = nil
	file_go_chromium_org_luci_deploy_api_modelpb_asset_proto_depIdxs = nil
}
