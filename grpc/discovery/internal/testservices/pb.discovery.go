// Code generated by cproto. DO NOT EDIT.

package testservices

import "go.chromium.org/luci/grpc/discovery"

import "google.golang.org/protobuf/types/descriptorpb"

func init() {
	discovery.RegisterDescriptorSetCompressed(
		[]string{
			"testservices.Greeter", "testservices.Calc",
		},
		[]byte{31, 139,
			8, 0, 0, 0, 0, 0, 0, 255, 156, 148, 223, 110, 27, 69,
			20, 198, 119, 118, 198, 206, 250, 100, 221, 58, 167, 127, 108, 109,
			74, 124, 112, 3, 69, 8, 214, 141, 17, 72, 80, 129, 148, 70,
			21, 180, 180, 8, 37, 148, 11, 238, 182, 187, 19, 123, 164, 205,
			142, 153, 217, 45, 117, 159, 129, 39, 225, 158, 231, 226, 21, 208,
			140, 119, 67, 64, 228, 166, 119, 251, 105, 190, 249, 190, 223, 156,
			25, 27, 254, 2, 120, 182, 212, 105, 190, 50, 250, 66, 53, 23,
			169, 54, 203, 121, 217, 228, 106, 190, 52, 235, 124, 94, 40, 155,
			235, 215, 210, 108, 230, 170, 170, 165, 169, 178, 114, 94, 75, 91,
			91, 105, 94, 171, 92, 218, 249, 74, 150, 165, 254, 77, 155, 178,
			72, 215, 70, 215, 26, 227, 171, 203, 179, 25, 196, 223, 57, 199,
			169, 252, 181, 145, 182, 70, 4, 81, 101, 23, 114, 194, 136, 125,
			52, 56, 245, 223, 179, 15, 1, 90, 207, 186, 220, 224, 4, 118,
			46, 164, 181, 217, 178, 51, 117, 114, 246, 41, 220, 124, 209, 148,
			181, 90, 151, 155, 46, 46, 6, 246, 198, 219, 122, 167, 236, 141,
			83, 155, 73, 184, 85, 155, 25, 193, 232, 31, 187, 93, 235, 202,
			74, 231, 120, 219, 249, 223, 46, 94, 192, 206, 183, 70, 202, 90,
			26, 124, 12, 209, 89, 182, 241, 24, 152, 164, 87, 143, 144, 94,
			229, 79, 38, 255, 187, 182, 46, 55, 179, 96, 113, 6, 226, 36,
			43, 115, 252, 30, 162, 174, 24, 223, 251, 183, 255, 63, 252, 201,
			193, 117, 203, 91, 222, 89, 240, 248, 209, 47, 95, 190, 243, 229,
			60, 251, 125, 7, 250, 40, 68, 240, 1, 131, 63, 25, 176, 24,
			185, 8, 112, 241, 7, 163, 19, 189, 222, 24, 181, 92, 213, 180,
			120, 120, 244, 5, 253, 180, 146, 244, 252, 229, 201, 83, 58, 110,
			234, 149, 54, 54, 165, 227, 178, 36, 111, 176, 100, 164, 203, 147,
			69, 10, 244, 210, 74, 210, 231, 84, 175, 148, 37, 171, 27, 147,
			75, 202, 117, 33, 73, 89, 90, 58, 142, 74, 22, 212, 84, 133,
			52, 84, 175, 36, 29, 175, 179, 220, 5, 171, 92, 86, 86, 126,
			66, 63, 75, 99, 149, 174, 104, 145, 62, 4, 170, 87, 89, 77,
			121, 86, 209, 43, 73, 231, 186, 169, 10, 82, 149, 223, 245, 252,
			233, 201, 147, 31, 206, 158, 208, 185, 42, 101, 10, 16, 1, 11,
			145, 247, 131, 59, 238, 43, 66, 30, 5, 63, 194, 0, 194, 104,
			119, 251, 153, 66, 216, 15, 80, 236, 6, 55, 88, 50, 243, 231,
			88, 186, 27, 85, 213, 146, 218, 41, 80, 33, 207, 85, 165, 106,
			165, 171, 20, 0, 128, 247, 3, 134, 124, 55, 186, 9, 83, 16,
			253, 32, 12, 144, 15, 195, 207, 19, 164, 51, 89, 21, 150, 178,
			203, 0, 128, 24, 122, 206, 192, 144, 15, 251, 55, 58, 21, 34,
			31, 142, 238, 117, 138, 35, 31, 62, 56, 130, 175, 33, 20, 1,
			138, 189, 224, 22, 75, 142, 60, 134, 217, 222, 48, 181, 143, 151,
			114, 93, 213, 153, 170, 28, 152, 59, 101, 99, 165, 121, 96, 201,
			189, 255, 45, 149, 112, 53, 123, 209, 109, 216, 5, 33, 60, 21,
			134, 232, 90, 156, 232, 57, 21, 117, 138, 33, 199, 193, 176, 83,
			28, 57, 142, 246, 224, 17, 132, 130, 161, 184, 27, 76, 88, 50,
			111, 9, 182, 143, 232, 58, 132, 238, 156, 118, 219, 207, 24, 242,
			187, 17, 250, 126, 230, 250, 199, 225, 29, 223, 193, 124, 255, 184,
			237, 103, 190, 127, 60, 24, 117, 138, 35, 31, 223, 186, 13, 0,
			97, 159, 161, 72, 130, 123, 204, 15, 217, 197, 37, 81, 236, 226,
			250, 62, 110, 63, 252, 198, 15, 109, 27, 176, 223, 14, 148, 249,
			129, 238, 143, 166, 157, 226, 200, 247, 63, 254, 202, 197, 137, 16,
			197, 65, 240, 190, 143, 19, 33, 67, 126, 16, 141, 61, 93, 232,
			226, 166, 161, 15, 112, 162, 231, 212, 78, 167, 24, 242, 105, 52,
			232, 20, 71, 62, 141, 135, 237, 54, 134, 156, 46, 183, 177, 158,
			83, 221, 54, 135, 75, 151, 219, 24, 71, 78, 241, 208, 83, 112,
			20, 247, 221, 15, 200, 81, 112, 134, 252, 126, 52, 241, 113, 220,
			81, 28, 182, 113, 220, 83, 28, 182, 113, 220, 83, 28, 182, 113,
			220, 83, 28, 198, 195, 87, 125, 255, 15, 249, 217, 223, 1, 0,
			0, 255, 255, 223, 189, 250, 92, 114, 5, 0, 0},
	)
}

// FileDescriptorSet returns a descriptor set for this proto package, which
// includes all defined services, and all transitive dependencies.
//
// Will not return nil.
//
// Do NOT modify the returned descriptor.
func FileDescriptorSet() *descriptorpb.FileDescriptorSet {
	// We just need ONE of the service names to look up the FileDescriptorSet.
	ret, err := discovery.GetDescriptorSet("testservices.Greeter")
	if err != nil {
		panic(err)
	}
	return ret
}
