// Copyright 2023 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: go.chromium.org/luci/cipkg/core/action.proto

package core

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Action is a high level description of one node in the build graph.
//
// It includes a set of predefined verbs (e.g. `command`, `reexec`, ...) and
// provides the ability to add additional high level verbs within a single
// application // (`extension` field, see `cipkg/base/actions.SetTransformer`
// for additional details).
//
// Typically, Actions are produced via the Generation process (see
// `cipkg/base/generatorsâ€œ for more details).
//
// An action's dependency on additional Actions forms the high level build
// graph.
//
// The Action graph is transformed into a Derivation graph via the
// ActionProcessor (see `cipkg/base/actions.ActionProcessor` for additional
// details).
//
// Actions exist apart from Derivations in order to maintain a
// serializable/debuggable structure which is higher level than the raw
// Derivations, which end up including system specific details.
type Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name is required for all actions. It's the name of the action's output.
	// The name shouldn't include version of the package and should represents
	// its content (e.g. cpython3, curl, ninja), NOT the action taken place
	// (e.g. build_cpython3, build_curl, build_ninja).
	// This name doesn't need to be unique and won't be used for deduplication,
	// but may be used as the placeholder for the path to the package during
	// transformation.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Metadata contains metadata information which won't affect the result of the
	// output. It can be used by package manager for cache/store packages and
	// helping users to identify its content.
	Metadata *Action_Metadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Dependencies which PackageManager will ensure are available prior to the
	// execution of this Action.
	// TODO: Maybe move dependencies into specs?
	Deps []*Action_Dependency `protobuf:"bytes,3,rep,name=deps,proto3" json:"deps,omitempty"`
	// Spec is the action spec describing what action we want to perform.
	// It can be extended using extension for domain-specific use cases.
	// See cipkg/base/actions.ActionProcessor for additional details.
	//
	// Types that are assignable to Spec:
	//
	//	*Action_Command
	//	*Action_Reexec
	//	*Action_Url
	//	*Action_Copy
	//	*Action_Cipd
	//	*Action_Extension
	Spec isAction_Spec `protobuf_oneof:"spec"`
}

func (x *Action) Reset() {
	*x = Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_cipkg_core_action_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cipkg_core_action_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cipkg_core_action_proto_rawDescGZIP(), []int{0}
}

func (x *Action) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Action) GetMetadata() *Action_Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Action) GetDeps() []*Action_Dependency {
	if x != nil {
		return x.Deps
	}
	return nil
}

func (m *Action) GetSpec() isAction_Spec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (x *Action) GetCommand() *ActionCommand {
	if x, ok := x.GetSpec().(*Action_Command); ok {
		return x.Command
	}
	return nil
}

func (x *Action) GetReexec() *ActionReexec {
	if x, ok := x.GetSpec().(*Action_Reexec); ok {
		return x.Reexec
	}
	return nil
}

func (x *Action) GetUrl() *ActionURLFetch {
	if x, ok := x.GetSpec().(*Action_Url); ok {
		return x.Url
	}
	return nil
}

func (x *Action) GetCopy() *ActionFilesCopy {
	if x, ok := x.GetSpec().(*Action_Copy); ok {
		return x.Copy
	}
	return nil
}

func (x *Action) GetCipd() *ActionCIPDExport {
	if x, ok := x.GetSpec().(*Action_Cipd); ok {
		return x.Cipd
	}
	return nil
}

func (x *Action) GetExtension() *anypb.Any {
	if x, ok := x.GetSpec().(*Action_Extension); ok {
		return x.Extension
	}
	return nil
}

type isAction_Spec interface {
	isAction_Spec()
}

type Action_Command struct {
	Command *ActionCommand `protobuf:"bytes,4,opt,name=command,proto3,oneof"`
}

type Action_Reexec struct {
	Reexec *ActionReexec `protobuf:"bytes,5,opt,name=reexec,proto3,oneof"`
}

type Action_Url struct {
	Url *ActionURLFetch `protobuf:"bytes,6,opt,name=url,proto3,oneof"`
}

type Action_Copy struct {
	Copy *ActionFilesCopy `protobuf:"bytes,7,opt,name=copy,proto3,oneof"`
}

type Action_Cipd struct {
	Cipd *ActionCIPDExport `protobuf:"bytes,8,opt,name=cipd,proto3,oneof"`
}

type Action_Extension struct {
	Extension *anypb.Any `protobuf:"bytes,99,opt,name=extension,proto3,oneof"`
}

func (*Action_Command) isAction_Spec() {}

func (*Action_Reexec) isAction_Spec() {}

func (*Action_Url) isAction_Spec() {}

func (*Action_Copy) isAction_Spec() {}

func (*Action_Cipd) isAction_Spec() {}

func (*Action_Extension) isAction_Spec() {}

type Action_Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Action_Metadata) Reset() {
	*x = Action_Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_cipkg_core_action_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action_Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action_Metadata) ProtoMessage() {}

func (x *Action_Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cipkg_core_action_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action_Metadata.ProtoReflect.Descriptor instead.
func (*Action_Metadata) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cipkg_core_action_proto_rawDescGZIP(), []int{0, 0}
}

type Action_Dependency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action *Action `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	// Runtime, if set, indicates the PackageManager will ensure its
	// availibility even if the package has been built.
	Runtime bool `protobuf:"varint,3,opt,name=runtime,proto3" json:"runtime,omitempty"`
}

func (x *Action_Dependency) Reset() {
	*x = Action_Dependency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_cipkg_core_action_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action_Dependency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action_Dependency) ProtoMessage() {}

func (x *Action_Dependency) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cipkg_core_action_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action_Dependency.ProtoReflect.Descriptor instead.
func (*Action_Dependency) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cipkg_core_action_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Action_Dependency) GetAction() *Action {
	if x != nil {
		return x.Action
	}
	return nil
}

func (x *Action_Dependency) GetRuntime() bool {
	if x != nil {
		return x.Runtime
	}
	return false
}

type Action_Metadata_CIPD struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name is the cipd package name for the Action's output.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// version is the cipd version tag for action's output.
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *Action_Metadata_CIPD) Reset() {
	*x = Action_Metadata_CIPD{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_cipkg_core_action_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action_Metadata_CIPD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action_Metadata_CIPD) ProtoMessage() {}

func (x *Action_Metadata_CIPD) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cipkg_core_action_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action_Metadata_CIPD.ProtoReflect.Descriptor instead.
func (*Action_Metadata_CIPD) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cipkg_core_action_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *Action_Metadata_CIPD) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Action_Metadata_CIPD) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

var File_go_chromium_org_luci_cipkg_core_action_proto protoreflect.FileDescriptor

var file_go_chromium_org_luci_cipkg_core_action_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x63, 0x69, 0x70, 0x6b, 0x67, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x67, 0x6f, 0x2e, 0x63, 0x68,
	0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f,
	0x63, 0x69, 0x70, 0x6b, 0x67, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x86, 0x04, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x26, 0x0a, 0x04, 0x64, 0x65, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e,
	0x64, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x04, 0x64, 0x65, 0x70, 0x73, 0x12, 0x2a, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x27, 0x0a, 0x06, 0x72, 0x65, 0x65, 0x78, 0x65,
	0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x65, 0x78, 0x65, 0x63, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65, 0x65, 0x78, 0x65, 0x63,
	0x12, 0x23, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x52, 0x4c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x48, 0x00,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x04, 0x63, 0x6f, 0x70, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65,
	0x73, 0x43, 0x6f, 0x70, 0x79, 0x48, 0x00, 0x52, 0x04, 0x63, 0x6f, 0x70, 0x79, 0x12, 0x27, 0x0a,
	0x04, 0x63, 0x69, 0x70, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x49, 0x50, 0x44, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x00,
	0x52, 0x04, 0x63, 0x69, 0x70, 0x64, 0x12, 0x34, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x63, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x48,
	0x00, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x40, 0x0a, 0x08,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x34, 0x0a, 0x04, 0x43, 0x49, 0x50, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x47,
	0x0a, 0x0a, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1f, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x42,
	0x21, 0x5a, 0x1f, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x63, 0x69, 0x70, 0x6b, 0x67, 0x2f, 0x63, 0x6f,
	0x72, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_go_chromium_org_luci_cipkg_core_action_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_cipkg_core_action_proto_rawDescData = file_go_chromium_org_luci_cipkg_core_action_proto_rawDesc
)

func file_go_chromium_org_luci_cipkg_core_action_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_cipkg_core_action_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_cipkg_core_action_proto_rawDescData = protoimpl.X.CompressGZIP(file_go_chromium_org_luci_cipkg_core_action_proto_rawDescData)
	})
	return file_go_chromium_org_luci_cipkg_core_action_proto_rawDescData
}

var file_go_chromium_org_luci_cipkg_core_action_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_go_chromium_org_luci_cipkg_core_action_proto_goTypes = []interface{}{
	(*Action)(nil),               // 0: Action
	(*Action_Metadata)(nil),      // 1: Action.Metadata
	(*Action_Dependency)(nil),    // 2: Action.Dependency
	(*Action_Metadata_CIPD)(nil), // 3: Action.Metadata.CIPD
	(*ActionCommand)(nil),        // 4: ActionCommand
	(*ActionReexec)(nil),         // 5: ActionReexec
	(*ActionURLFetch)(nil),       // 6: ActionURLFetch
	(*ActionFilesCopy)(nil),      // 7: ActionFilesCopy
	(*ActionCIPDExport)(nil),     // 8: ActionCIPDExport
	(*anypb.Any)(nil),            // 9: google.protobuf.Any
}
var file_go_chromium_org_luci_cipkg_core_action_proto_depIdxs = []int32{
	1, // 0: Action.metadata:type_name -> Action.Metadata
	2, // 1: Action.deps:type_name -> Action.Dependency
	4, // 2: Action.command:type_name -> ActionCommand
	5, // 3: Action.reexec:type_name -> ActionReexec
	6, // 4: Action.url:type_name -> ActionURLFetch
	7, // 5: Action.copy:type_name -> ActionFilesCopy
	8, // 6: Action.cipd:type_name -> ActionCIPDExport
	9, // 7: Action.extension:type_name -> google.protobuf.Any
	0, // 8: Action.Dependency.action:type_name -> Action
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_cipkg_core_action_proto_init() }
func file_go_chromium_org_luci_cipkg_core_action_proto_init() {
	if File_go_chromium_org_luci_cipkg_core_action_proto != nil {
		return
	}
	file_go_chromium_org_luci_cipkg_core_specs_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_go_chromium_org_luci_cipkg_core_action_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_cipkg_core_action_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action_Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_cipkg_core_action_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action_Dependency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_cipkg_core_action_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action_Metadata_CIPD); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_go_chromium_org_luci_cipkg_core_action_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Action_Command)(nil),
		(*Action_Reexec)(nil),
		(*Action_Url)(nil),
		(*Action_Copy)(nil),
		(*Action_Cipd)(nil),
		(*Action_Extension)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_go_chromium_org_luci_cipkg_core_action_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_chromium_org_luci_cipkg_core_action_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_cipkg_core_action_proto_depIdxs,
		MessageInfos:      file_go_chromium_org_luci_cipkg_core_action_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_cipkg_core_action_proto = out.File
	file_go_chromium_org_luci_cipkg_core_action_proto_rawDesc = nil
	file_go_chromium_org_luci_cipkg_core_action_proto_goTypes = nil
	file_go_chromium_org_luci_cipkg_core_action_proto_depIdxs = nil
}
