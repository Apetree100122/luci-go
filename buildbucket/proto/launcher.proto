// Copyright 2018 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package buildbucket.v2;

option go_package = "go.chromium.org/luci/buildbucket/proto;buildbucketpb";

import "go.chromium.org/luci/buildbucket/proto/build.proto";

// This file is meant for protos passed and used internally.

// A collection of build-related secrets we might pass from Buildbucket to Kitchen.
message BuildSecrets {
  // Token to identify RPCs associated with the same build.
  string build_token = 1;
}

// Arguments for luci_runner command.
// All paths are relateive to the runner process' working directory.
message RunnerArgs {
  message GitAuth {
    bool disable = 1;
    repeated string known_gerrit_hosts = 2;
  }
  message Disablable {
    bool disable = 1;
  }

  message Auth {
    GitAuth git = 1;
    Disablable dev_shell = 2;
    Disablable docker = 3;
    Disablable firebase = 4;


    // Use this LUCI context logical account for system-level operations.
    string luci_system_account = 5;
  }

  // Buildbucket service hostname, e.g. "cr-buildbucket.appspot.com".
  string buildbucket_host = 1;

  // LogDog service hostname, e.g. "logs.chromium.org".
  string logdog_host = 2;

  // Initial state of the build, including immutable state such as id and input
  // properties.
  Build build = 3;

  Auth auth = 4;

  // Where to put temp files and create CWD for the user executable.
  // MUST not exist.
  // Required.
  string work_dir = 5;

  // Path to the user executable.
  // Required.
  string executable_path = 6;

  // Path to a directory where each subdirectory is a cache dir.
  // Managed by Swarming.
  // Required.
  string cache_dir = 7;
}
