// Code generated by protoc-gen-go. DO NOT EDIT.
// source: go.chromium.org/luci/buildbucket/proto/common.proto

package buildbucketpb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Status of a build or a step.
type Status int32

const (
	// Unspecified state. Meaning depends on the context.
	Status_STATUS_UNSPECIFIED Status = 0
	// Build was scheduled, but did not start or end yet.
	Status_SCHEDULED Status = 1
	// Build/step has started.
	Status_STARTED Status = 2
	// A union of all terminal statuses.
	// Can be used in BuildPredicate.status.
	// A concrete build/step cannot have this status.
	// Can be used as a bitmask to check that a build/step ended.
	Status_ENDED_MASK Status = 4
	// A build/step ended successfully.
	// This is a terminal status. It may not transition to another status.
	Status_SUCCESS Status = 12
	// A build/step ended unsuccessfully due to its Build.Input,
	// e.g. tests failed, and NOT due to a build infrastructure failure.
	// This is a terminal status. It may not transition to another status.
	Status_FAILURE Status = 20
	// A build/step ended unsuccessfully due to a failure independent of the
	// input, e.g. swarming failed, not enough capacity or the recipe was unable
	// to read the patch from gerrit.
	// start_time is not required for this status.
	// This is a terminal status. It may not transition to another status.
	Status_INFRA_FAILURE Status = 36
	// A build was cancelled explicitly, e.g. via an RPC.
	// This is a terminal status. It may not transition to another status.
	Status_CANCELED Status = 68
)

var Status_name = map[int32]string{
	0:  "STATUS_UNSPECIFIED",
	1:  "SCHEDULED",
	2:  "STARTED",
	4:  "ENDED_MASK",
	12: "SUCCESS",
	20: "FAILURE",
	36: "INFRA_FAILURE",
	68: "CANCELED",
}

var Status_value = map[string]int32{
	"STATUS_UNSPECIFIED": 0,
	"SCHEDULED":          1,
	"STARTED":            2,
	"ENDED_MASK":         4,
	"SUCCESS":            12,
	"FAILURE":            20,
	"INFRA_FAILURE":      36,
	"CANCELED":           68,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a1a0c34bd7fcf0dc, []int{0}
}

// A boolean with an undefined value.
type Trinary int32

const (
	Trinary_UNSET Trinary = 0
	Trinary_YES   Trinary = 1
	Trinary_NO    Trinary = 2
)

var Trinary_name = map[int32]string{
	0: "UNSET",
	1: "YES",
	2: "NO",
}

var Trinary_value = map[string]int32{
	"UNSET": 0,
	"YES":   1,
	"NO":    2,
}

func (x Trinary) String() string {
	return proto.EnumName(Trinary_name, int32(x))
}

func (Trinary) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a1a0c34bd7fcf0dc, []int{1}
}

// An executable to run when the build is ready to start.
//
// The following describes the protocol between buildbucket and the executable.
// The executable MUST NOT assume/rely on anything that is not explicitly
// specified below.
//
// The executable will be started with the following input:
// - empty current working directory (CWD).
// - stdin: binary-encoded buildbucket.v2.Build message.
// - $TMPDIR, $TEMP, $TMP: env variables point to an empty directory, on the
//   same file system as CWD.
// - $LOGDOG_COORDINATOR_HOST, $LOGDOG_STREAM_PROJECT, $LOGDOG_STREAM_PREFIX,
//   $LOGDOG_NAMESPACE, $LOGDOG_STREAM_SERVER_PATH: env variables describing
//   LogDog context, part of the LogDog Butler protocol.
//   The executable MAY create logdog streams using these variables.
//   Read more at https://godoc.org/go.chromium.org/luci/logdog/client/butlerlib/bootstrap
// - LUCI_CONTEXT["run_build"]["cache_dir"]: a LUCI context value pointing to
//   the root directory of Swarming named caches.
//   MAY be on the same file system as CWD.
//   For example, builder cache is available at "<cache_dir>/builder".
//   For LUCI Context doc, see
//   https://chromium.googlesource.com/infra/luci/luci-py/+/HEAD/client/LUCI_CONTEXT.md
//   See also CacheEntry.
// - LUCI_CONTEXT["buildbucket"]["hostname"]: Buildbucket hostname,
//   e.g. "cr-buildbucket.appspot.com".
//
// The executable MUST write "$LOGDOG_NAMESPACE/build.proto" stream using the
// LogDog streamserver at $LOGDOG_STREAM_SERVER_PATH.
// The stream MUST have a binary-encoded buildbucket.v2.Build message datagrams,
// with content type "application/luci+proto; message=buildbucket.v2.Build".
// Each build message must be valid, as defined by the comments in proto files.
// Server-side build will be updated with the values from the latest message.
//
// A build step S without children in the datagram MAY have a Step.Log named
// "$build.proto".
// It MUST point to a LogDog datagram stream with binary-encoded
// buildbucket.v2.Build messages and content type
// "application/luci+proto; message=buildbucket.v2.Build".
// The step tree from the second datagram will appear as substeps of step S.
// This rule applies recursively, i.e. a leaf step in the datagram MAY also
// have a "$build.proto" log.
// The graph of datagram streams MUST be a tree, i.e. acyclic.
//
// All build step log urls of all Build messages MUST be relative to
// $LOGDOG_STREAM_PREFIX (only stream name) and start with $LOGDOG_NAMESPACE.
type Executable struct {
	// The CIPD package containing the executable.
	// On Linux/Mac, the executable MUST be named "run_build".
	// On Windows, it MUST be named "run_build.exe" or "run_build.bat",
	// in this order of precedence.
	CipdPackage string `protobuf:"bytes,1,opt,name=cipd_package,json=cipdPackage,proto3" json:"cipd_package,omitempty"`
	// The CIPD version to fetch. Defaults to `latest`.
	CipdVersion          string   `protobuf:"bytes,2,opt,name=cipd_version,json=cipdVersion,proto3" json:"cipd_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Executable) Reset()         { *m = Executable{} }
func (m *Executable) String() string { return proto.CompactTextString(m) }
func (*Executable) ProtoMessage()    {}
func (*Executable) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1a0c34bd7fcf0dc, []int{0}
}

func (m *Executable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Executable.Unmarshal(m, b)
}
func (m *Executable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Executable.Marshal(b, m, deterministic)
}
func (m *Executable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Executable.Merge(m, src)
}
func (m *Executable) XXX_Size() int {
	return xxx_messageInfo_Executable.Size(m)
}
func (m *Executable) XXX_DiscardUnknown() {
	xxx_messageInfo_Executable.DiscardUnknown(m)
}

var xxx_messageInfo_Executable proto.InternalMessageInfo

func (m *Executable) GetCipdPackage() string {
	if m != nil {
		return m.CipdPackage
	}
	return ""
}

func (m *Executable) GetCipdVersion() string {
	if m != nil {
		return m.CipdVersion
	}
	return ""
}

// Machine-readable details of a status.
// Human-readble details are present in a sibling summary_markdown field.
type StatusDetails struct {
	// If set, indicates that the failure was due to a resource exhaustion / quota
	// denial.
	// Applicable in FAILURE and INFRA_FAILURE statuses.
	ResourceExhaustion *StatusDetails_ResourceExhaustion `protobuf:"bytes,3,opt,name=resource_exhaustion,json=resourceExhaustion,proto3" json:"resource_exhaustion,omitempty"`
	// If set, indicates that the failure was due to a timeout.
	// Applicable in FAILURE and INFRA_FAILURE statuses.
	Timeout              *StatusDetails_Timeout `protobuf:"bytes,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *StatusDetails) Reset()         { *m = StatusDetails{} }
func (m *StatusDetails) String() string { return proto.CompactTextString(m) }
func (*StatusDetails) ProtoMessage()    {}
func (*StatusDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1a0c34bd7fcf0dc, []int{1}
}

func (m *StatusDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusDetails.Unmarshal(m, b)
}
func (m *StatusDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusDetails.Marshal(b, m, deterministic)
}
func (m *StatusDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusDetails.Merge(m, src)
}
func (m *StatusDetails) XXX_Size() int {
	return xxx_messageInfo_StatusDetails.Size(m)
}
func (m *StatusDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusDetails.DiscardUnknown(m)
}

var xxx_messageInfo_StatusDetails proto.InternalMessageInfo

func (m *StatusDetails) GetResourceExhaustion() *StatusDetails_ResourceExhaustion {
	if m != nil {
		return m.ResourceExhaustion
	}
	return nil
}

func (m *StatusDetails) GetTimeout() *StatusDetails_Timeout {
	if m != nil {
		return m.Timeout
	}
	return nil
}

type StatusDetails_ResourceExhaustion struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusDetails_ResourceExhaustion) Reset()         { *m = StatusDetails_ResourceExhaustion{} }
func (m *StatusDetails_ResourceExhaustion) String() string { return proto.CompactTextString(m) }
func (*StatusDetails_ResourceExhaustion) ProtoMessage()    {}
func (*StatusDetails_ResourceExhaustion) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1a0c34bd7fcf0dc, []int{1, 0}
}

func (m *StatusDetails_ResourceExhaustion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusDetails_ResourceExhaustion.Unmarshal(m, b)
}
func (m *StatusDetails_ResourceExhaustion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusDetails_ResourceExhaustion.Marshal(b, m, deterministic)
}
func (m *StatusDetails_ResourceExhaustion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusDetails_ResourceExhaustion.Merge(m, src)
}
func (m *StatusDetails_ResourceExhaustion) XXX_Size() int {
	return xxx_messageInfo_StatusDetails_ResourceExhaustion.Size(m)
}
func (m *StatusDetails_ResourceExhaustion) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusDetails_ResourceExhaustion.DiscardUnknown(m)
}

var xxx_messageInfo_StatusDetails_ResourceExhaustion proto.InternalMessageInfo

type StatusDetails_Timeout struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusDetails_Timeout) Reset()         { *m = StatusDetails_Timeout{} }
func (m *StatusDetails_Timeout) String() string { return proto.CompactTextString(m) }
func (*StatusDetails_Timeout) ProtoMessage()    {}
func (*StatusDetails_Timeout) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1a0c34bd7fcf0dc, []int{1, 1}
}

func (m *StatusDetails_Timeout) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusDetails_Timeout.Unmarshal(m, b)
}
func (m *StatusDetails_Timeout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusDetails_Timeout.Marshal(b, m, deterministic)
}
func (m *StatusDetails_Timeout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusDetails_Timeout.Merge(m, src)
}
func (m *StatusDetails_Timeout) XXX_Size() int {
	return xxx_messageInfo_StatusDetails_Timeout.Size(m)
}
func (m *StatusDetails_Timeout) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusDetails_Timeout.DiscardUnknown(m)
}

var xxx_messageInfo_StatusDetails_Timeout proto.InternalMessageInfo

// A named log of a step or build.
type Log struct {
	// Log name, standard ("stdout", "stderr") or custom (e.g. "json.output").
	// Unique within the containing message (step or build).
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// URL of a Human-readable page that displays log contents.
	ViewUrl string `protobuf:"bytes,2,opt,name=view_url,json=viewUrl,proto3" json:"view_url,omitempty"`
	// URL of the log content.
	// As of 2018-09-06, the only supported scheme is "logdog".
	// Typically it has form
	// "logdog://<host>/<project>/<prefix>/+/<stream_name>".
	// See also
	// https://godoc.org/go.chromium.org/luci/logdog/common/types#ParseURL
	Url                  string   `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Log) Reset()         { *m = Log{} }
func (m *Log) String() string { return proto.CompactTextString(m) }
func (*Log) ProtoMessage()    {}
func (*Log) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1a0c34bd7fcf0dc, []int{2}
}

func (m *Log) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Log.Unmarshal(m, b)
}
func (m *Log) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Log.Marshal(b, m, deterministic)
}
func (m *Log) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Log.Merge(m, src)
}
func (m *Log) XXX_Size() int {
	return xxx_messageInfo_Log.Size(m)
}
func (m *Log) XXX_DiscardUnknown() {
	xxx_messageInfo_Log.DiscardUnknown(m)
}

var xxx_messageInfo_Log proto.InternalMessageInfo

func (m *Log) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Log) GetViewUrl() string {
	if m != nil {
		return m.ViewUrl
	}
	return ""
}

func (m *Log) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

// A Gerrit patchset.
type GerritChange struct {
	// Gerrit hostname, e.g. "chromium-review.googlesource.com".
	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	// Gerrit project, e.g. "chromium/src".
	Project string `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	// Change number, e.g. 12345.
	Change int64 `protobuf:"varint,3,opt,name=change,proto3" json:"change,omitempty"`
	// Patch set number, e.g. 1.
	Patchset             int64    `protobuf:"varint,4,opt,name=patchset,proto3" json:"patchset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GerritChange) Reset()         { *m = GerritChange{} }
func (m *GerritChange) String() string { return proto.CompactTextString(m) }
func (*GerritChange) ProtoMessage()    {}
func (*GerritChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1a0c34bd7fcf0dc, []int{3}
}

func (m *GerritChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GerritChange.Unmarshal(m, b)
}
func (m *GerritChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GerritChange.Marshal(b, m, deterministic)
}
func (m *GerritChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GerritChange.Merge(m, src)
}
func (m *GerritChange) XXX_Size() int {
	return xxx_messageInfo_GerritChange.Size(m)
}
func (m *GerritChange) XXX_DiscardUnknown() {
	xxx_messageInfo_GerritChange.DiscardUnknown(m)
}

var xxx_messageInfo_GerritChange proto.InternalMessageInfo

func (m *GerritChange) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *GerritChange) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *GerritChange) GetChange() int64 {
	if m != nil {
		return m.Change
	}
	return 0
}

func (m *GerritChange) GetPatchset() int64 {
	if m != nil {
		return m.Patchset
	}
	return 0
}

// A landed Git commit hosted on Gitiles.
type GitilesCommit struct {
	// Gitiles hostname, e.g. "chromium.googlesource.com".
	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	// Repository name on the host, e.g. "chromium/src".
	Project string `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	// Commit HEX SHA1.
	Id string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	// Commit ref, e.g. "refs/heads/master".
	// NOT a branch name: if specified, must start with "refs/".
	Ref string `protobuf:"bytes,4,opt,name=ref,proto3" json:"ref,omitempty"`
	// Defines a total order of commits on the ref. Requires ref field.
	// Typically 1-based, monotonically increasing, contiguous integer
	// defined by a Gerrit plugin, goto.google.com/git-numberer.
	// TODO(tandrii): make it a public doc.
	Position             uint32   `protobuf:"varint,5,opt,name=position,proto3" json:"position,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GitilesCommit) Reset()         { *m = GitilesCommit{} }
func (m *GitilesCommit) String() string { return proto.CompactTextString(m) }
func (*GitilesCommit) ProtoMessage()    {}
func (*GitilesCommit) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1a0c34bd7fcf0dc, []int{4}
}

func (m *GitilesCommit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GitilesCommit.Unmarshal(m, b)
}
func (m *GitilesCommit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GitilesCommit.Marshal(b, m, deterministic)
}
func (m *GitilesCommit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GitilesCommit.Merge(m, src)
}
func (m *GitilesCommit) XXX_Size() int {
	return xxx_messageInfo_GitilesCommit.Size(m)
}
func (m *GitilesCommit) XXX_DiscardUnknown() {
	xxx_messageInfo_GitilesCommit.DiscardUnknown(m)
}

var xxx_messageInfo_GitilesCommit proto.InternalMessageInfo

func (m *GitilesCommit) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *GitilesCommit) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *GitilesCommit) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GitilesCommit) GetRef() string {
	if m != nil {
		return m.Ref
	}
	return ""
}

func (m *GitilesCommit) GetPosition() uint32 {
	if m != nil {
		return m.Position
	}
	return 0
}

// A key-value pair of strings.
type StringPair struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StringPair) Reset()         { *m = StringPair{} }
func (m *StringPair) String() string { return proto.CompactTextString(m) }
func (*StringPair) ProtoMessage()    {}
func (*StringPair) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1a0c34bd7fcf0dc, []int{5}
}

func (m *StringPair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StringPair.Unmarshal(m, b)
}
func (m *StringPair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StringPair.Marshal(b, m, deterministic)
}
func (m *StringPair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringPair.Merge(m, src)
}
func (m *StringPair) XXX_Size() int {
	return xxx_messageInfo_StringPair.Size(m)
}
func (m *StringPair) XXX_DiscardUnknown() {
	xxx_messageInfo_StringPair.DiscardUnknown(m)
}

var xxx_messageInfo_StringPair proto.InternalMessageInfo

func (m *StringPair) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *StringPair) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Half-open time range.
type TimeRange struct {
	// Inclusive lower boundary. Optional.
	StartTime *timestamp.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// Exclusive upper boundary. Optional.
	EndTime              *timestamp.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TimeRange) Reset()         { *m = TimeRange{} }
func (m *TimeRange) String() string { return proto.CompactTextString(m) }
func (*TimeRange) ProtoMessage()    {}
func (*TimeRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1a0c34bd7fcf0dc, []int{6}
}

func (m *TimeRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimeRange.Unmarshal(m, b)
}
func (m *TimeRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimeRange.Marshal(b, m, deterministic)
}
func (m *TimeRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimeRange.Merge(m, src)
}
func (m *TimeRange) XXX_Size() int {
	return xxx_messageInfo_TimeRange.Size(m)
}
func (m *TimeRange) XXX_DiscardUnknown() {
	xxx_messageInfo_TimeRange.DiscardUnknown(m)
}

var xxx_messageInfo_TimeRange proto.InternalMessageInfo

func (m *TimeRange) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *TimeRange) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

// A requested dimension. Looks like StringPair, but also has an expiration.
type RequestedDimension struct {
	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// If set, ignore this dimension after this duration.
	Expiration           *duration.Duration `protobuf:"bytes,3,opt,name=expiration,proto3" json:"expiration,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *RequestedDimension) Reset()         { *m = RequestedDimension{} }
func (m *RequestedDimension) String() string { return proto.CompactTextString(m) }
func (*RequestedDimension) ProtoMessage()    {}
func (*RequestedDimension) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1a0c34bd7fcf0dc, []int{7}
}

func (m *RequestedDimension) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestedDimension.Unmarshal(m, b)
}
func (m *RequestedDimension) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestedDimension.Marshal(b, m, deterministic)
}
func (m *RequestedDimension) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestedDimension.Merge(m, src)
}
func (m *RequestedDimension) XXX_Size() int {
	return xxx_messageInfo_RequestedDimension.Size(m)
}
func (m *RequestedDimension) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestedDimension.DiscardUnknown(m)
}

var xxx_messageInfo_RequestedDimension proto.InternalMessageInfo

func (m *RequestedDimension) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *RequestedDimension) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *RequestedDimension) GetExpiration() *duration.Duration {
	if m != nil {
		return m.Expiration
	}
	return nil
}

func init() {
	proto.RegisterEnum("buildbucket.v2.Status", Status_name, Status_value)
	proto.RegisterEnum("buildbucket.v2.Trinary", Trinary_name, Trinary_value)
	proto.RegisterType((*Executable)(nil), "buildbucket.v2.Executable")
	proto.RegisterType((*StatusDetails)(nil), "buildbucket.v2.StatusDetails")
	proto.RegisterType((*StatusDetails_ResourceExhaustion)(nil), "buildbucket.v2.StatusDetails.ResourceExhaustion")
	proto.RegisterType((*StatusDetails_Timeout)(nil), "buildbucket.v2.StatusDetails.Timeout")
	proto.RegisterType((*Log)(nil), "buildbucket.v2.Log")
	proto.RegisterType((*GerritChange)(nil), "buildbucket.v2.GerritChange")
	proto.RegisterType((*GitilesCommit)(nil), "buildbucket.v2.GitilesCommit")
	proto.RegisterType((*StringPair)(nil), "buildbucket.v2.StringPair")
	proto.RegisterType((*TimeRange)(nil), "buildbucket.v2.TimeRange")
	proto.RegisterType((*RequestedDimension)(nil), "buildbucket.v2.RequestedDimension")
}

func init() {
	proto.RegisterFile("go.chromium.org/luci/buildbucket/proto/common.proto", fileDescriptor_a1a0c34bd7fcf0dc)
}

var fileDescriptor_a1a0c34bd7fcf0dc = []byte{
	// 701 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x41, 0x6f, 0xeb, 0x44,
	0x10, 0x7e, 0xb6, 0xd3, 0x38, 0x99, 0x24, 0x95, 0x59, 0xaa, 0xa7, 0xbc, 0x1c, 0xa0, 0x58, 0x3c,
	0xa9, 0xea, 0xc1, 0x41, 0x6d, 0x41, 0x42, 0x1c, 0x50, 0xb0, 0x9d, 0x92, 0x52, 0x42, 0x65, 0x27,
	0x48, 0x70, 0x89, 0x36, 0xf6, 0xd6, 0x59, 0x6a, 0x7b, 0xcd, 0x7a, 0x9d, 0xb6, 0x42, 0x9c, 0xf9,
	0x9b, 0xfc, 0x14, 0xb4, 0x6b, 0x27, 0xb4, 0x54, 0x82, 0x72, 0x9b, 0xef, 0xdb, 0xef, 0x9b, 0xd9,
	0xd9, 0x19, 0x1b, 0xce, 0x13, 0xe6, 0x44, 0x1b, 0xce, 0x32, 0x5a, 0x65, 0x0e, 0xe3, 0xc9, 0x38,
	0xad, 0x22, 0x3a, 0x5e, 0x57, 0x34, 0x8d, 0xd7, 0x55, 0x74, 0x47, 0xc4, 0xb8, 0xe0, 0x4c, 0xb0,
	0x71, 0xc4, 0xb2, 0x8c, 0xe5, 0x8e, 0x02, 0xe8, 0xf0, 0xc9, 0xb9, 0xb3, 0x3d, 0x1b, 0x7d, 0x94,
	0x30, 0x96, 0xa4, 0xa4, 0x96, 0xae, 0xab, 0xdb, 0x71, 0x5c, 0x71, 0x2c, 0xe8, 0x4e, 0x3f, 0xfa,
	0xf8, 0x9f, 0xe7, 0x82, 0x66, 0xa4, 0x14, 0x38, 0x2b, 0x6a, 0x81, 0x1d, 0x00, 0xf8, 0x0f, 0x24,
	0xaa, 0x04, 0x5e, 0xa7, 0x04, 0x7d, 0x02, 0xfd, 0x88, 0x16, 0xf1, 0xaa, 0xc0, 0xd1, 0x1d, 0x4e,
	0xc8, 0x50, 0x3b, 0xd6, 0x4e, 0xba, 0x41, 0x4f, 0x72, 0x37, 0x35, 0xb5, 0x97, 0x6c, 0x09, 0x2f,
	0x29, 0xcb, 0x87, 0xfa, 0xdf, 0x92, 0x1f, 0x6b, 0xca, 0xfe, 0x53, 0x83, 0x41, 0x28, 0xb0, 0xa8,
	0x4a, 0x8f, 0x08, 0x4c, 0xd3, 0x12, 0x61, 0xf8, 0x90, 0x93, 0x92, 0x55, 0x3c, 0x22, 0x2b, 0xf2,
	0xb0, 0xc1, 0x55, 0x29, 0xef, 0x38, 0x34, 0x8e, 0xb5, 0x93, 0xde, 0xd9, 0x67, 0xce, 0xf3, 0xa6,
	0x9c, 0x67, 0x5e, 0x27, 0x68, 0x8c, 0xfe, 0xde, 0x17, 0x20, 0xfe, 0x82, 0x43, 0x5f, 0x83, 0x29,
	0x7b, 0x63, 0x95, 0x18, 0xb6, 0x54, 0xda, 0xf7, 0xff, 0x9e, 0x76, 0x51, 0x8b, 0x83, 0x9d, 0x6b,
	0x74, 0x04, 0xe8, 0x65, 0xa9, 0x51, 0x17, 0xcc, 0x46, 0x79, 0xd5, 0xea, 0x68, 0x96, 0x7e, 0xd5,
	0xea, 0xe8, 0x96, 0x61, 0x4f, 0xc1, 0xb8, 0x66, 0x09, 0x42, 0xd0, 0xca, 0x71, 0xb6, 0x7b, 0x27,
	0x15, 0xa3, 0x77, 0xd0, 0xd9, 0x52, 0x72, 0xbf, 0xaa, 0x78, 0xda, 0x3c, 0x8e, 0x29, 0xf1, 0x92,
	0xa7, 0xc8, 0x02, 0x43, 0xb2, 0x86, 0x62, 0x65, 0x68, 0x17, 0xd0, 0xbf, 0x24, 0x9c, 0x53, 0xe1,
	0x6e, 0x70, 0x9e, 0x10, 0x99, 0x70, 0xc3, 0x4a, 0xb1, 0x4b, 0x28, 0x63, 0x34, 0x04, 0xb3, 0xe0,
	0xec, 0x17, 0x12, 0x89, 0x5d, 0xbe, 0x06, 0xa2, 0xb7, 0xd0, 0x8e, 0x94, 0x4f, 0xa5, 0x34, 0x82,
	0x06, 0xa1, 0x11, 0x74, 0x0a, 0x2c, 0xa2, 0x4d, 0x49, 0xea, 0xc7, 0x30, 0x82, 0x3d, 0xb6, 0x7f,
	0x83, 0xc1, 0x25, 0x15, 0x34, 0x25, 0xa5, 0xcb, 0xb2, 0x8c, 0x8a, 0xff, 0x59, 0xf2, 0x10, 0x74,
	0x1a, 0x37, 0x1d, 0xe8, 0x34, 0x96, 0x2d, 0x71, 0x72, 0xab, 0xaa, 0x74, 0x03, 0x19, 0xaa, 0xe2,
	0xac, 0xa4, 0x6a, 0xc0, 0x07, 0xc7, 0xda, 0xc9, 0x20, 0xd8, 0x63, 0xfb, 0x02, 0x20, 0x14, 0x9c,
	0xe6, 0xc9, 0x0d, 0xa6, 0x5c, 0x7a, 0xef, 0xc8, 0x63, 0x53, 0x58, 0x86, 0xe8, 0x08, 0x0e, 0xb6,
	0x38, 0xad, 0x48, 0x53, 0xb5, 0x06, 0xf6, 0xef, 0xd0, 0x95, 0x33, 0x08, 0x54, 0x6f, 0x5f, 0x02,
	0x94, 0x02, 0x73, 0xb1, 0x92, 0x73, 0x53, 0xde, 0xde, 0xd9, 0xc8, 0xa9, 0xd7, 0xdc, 0xd9, 0xad,
	0xb9, 0x9a, 0xae, 0x5a, 0xf3, 0xa0, 0xab, 0xd4, 0x12, 0xa3, 0xcf, 0xa1, 0x43, 0xf2, 0xb8, 0x36,
	0xea, 0xff, 0x69, 0x34, 0x49, 0x1e, 0x4b, 0x64, 0xdf, 0xcb, 0xc5, 0xf8, 0xb5, 0x22, 0xa5, 0x20,
	0xb1, 0x47, 0x33, 0x92, 0xcb, 0x25, 0x7f, 0xed, 0xe5, 0xe5, 0x7d, 0xc9, 0x43, 0x41, 0xeb, 0xaf,
	0xb2, 0xd9, 0xf8, 0x77, 0x2f, 0xca, 0x7a, 0xcd, 0x67, 0x1b, 0x3c, 0x11, 0x9f, 0xfe, 0xa1, 0x41,
	0xbb, 0x5e, 0x5a, 0xf4, 0x16, 0x50, 0xb8, 0x98, 0x2c, 0x96, 0xe1, 0x6a, 0x39, 0x0f, 0x6f, 0x7c,
	0x77, 0x36, 0x9d, 0xf9, 0x9e, 0xf5, 0x06, 0x0d, 0xa0, 0x1b, 0xba, 0xdf, 0xfa, 0xde, 0xf2, 0xda,
	0xf7, 0x2c, 0x0d, 0xf5, 0xc0, 0x0c, 0x17, 0x93, 0x60, 0xe1, 0x7b, 0x96, 0x8e, 0x0e, 0x01, 0xfc,
	0xb9, 0xe7, 0x7b, 0xab, 0xef, 0x27, 0xe1, 0x77, 0x56, 0x4b, 0x1d, 0x2e, 0x5d, 0xd7, 0x0f, 0x43,
	0xab, 0x2f, 0xc1, 0x74, 0x32, 0xbb, 0x5e, 0x06, 0xbe, 0x75, 0x84, 0x3e, 0x80, 0xc1, 0x6c, 0x3e,
	0x0d, 0x26, 0xab, 0x1d, 0xf5, 0x29, 0xea, 0x43, 0xc7, 0x9d, 0xcc, 0x5d, 0x5f, 0xe6, 0xf5, 0x4e,
	0xdf, 0x83, 0xb9, 0xe0, 0x34, 0xc7, 0xfc, 0x11, 0x75, 0xe1, 0x60, 0x39, 0x0f, 0xfd, 0x85, 0xf5,
	0x06, 0x99, 0x60, 0xfc, 0xe4, 0x87, 0x96, 0x86, 0xda, 0xa0, 0xcf, 0x7f, 0xb0, 0xf4, 0x6f, 0xbe,
	0xf8, 0xf9, 0xe2, 0x75, 0x3f, 0xb5, 0xaf, 0x9e, 0x30, 0xc5, 0x7a, 0xdd, 0x56, 0xe4, 0xf9, 0x5f,
	0x01, 0x00, 0x00, 0xff, 0xff, 0xdb, 0x95, 0x36, 0xb5, 0x13, 0x05, 0x00, 0x00,
}
