// Code generated by protoc-gen-go. DO NOT EDIT.
// source: go.chromium.org/luci/buildbucket/proto/launcher.proto

package buildbucketpb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// A collection of build-related secrets we might pass from Buildbucket to Kitchen.
type BuildSecrets struct {
	// Token to identify RPCs associated with the same build.
	BuildToken           string   `protobuf:"bytes,1,opt,name=build_token,json=buildToken,proto3" json:"build_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildSecrets) Reset()         { *m = BuildSecrets{} }
func (m *BuildSecrets) String() string { return proto.CompactTextString(m) }
func (*BuildSecrets) ProtoMessage()    {}
func (*BuildSecrets) Descriptor() ([]byte, []int) {
	return fileDescriptor_45f9e6fb262a81d2, []int{0}
}

func (m *BuildSecrets) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildSecrets.Unmarshal(m, b)
}
func (m *BuildSecrets) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildSecrets.Marshal(b, m, deterministic)
}
func (m *BuildSecrets) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildSecrets.Merge(m, src)
}
func (m *BuildSecrets) XXX_Size() int {
	return xxx_messageInfo_BuildSecrets.Size(m)
}
func (m *BuildSecrets) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildSecrets.DiscardUnknown(m)
}

var xxx_messageInfo_BuildSecrets proto.InternalMessageInfo

func (m *BuildSecrets) GetBuildToken() string {
	if m != nil {
		return m.BuildToken
	}
	return ""
}

// Arguments for bbagent command.
//
// All paths are relateive to bbagent's working directory.
type BBAgentArgs struct {
	// Path to the user executable.
	//
	// Required.
	ExecutablePath string `protobuf:"bytes,1,opt,name=executable_path,json=executablePath,proto3" json:"executable_path,omitempty"`
	// Path to a directory where each subdirectory is a cache dir.
	//
	// Required.
	CacheDir string `protobuf:"bytes,2,opt,name=cache_dir,json=cacheDir,proto3" json:"cache_dir,omitempty"`
	// List of Gerrit hosts to force git authentication for.
	//
	// By default public hosts are accessed anonymously, and the anonymous access
	// has very low quota. Context needs to know all such hostnames in advance to
	// be able to force authenticated access to them.
	KnownPublicGerritHosts []string `protobuf:"bytes,3,rep,name=known_public_gerrit_hosts,json=knownPublicGerritHosts,proto3" json:"known_public_gerrit_hosts,omitempty"`
	// Initial state of the build, including immutable state such as id and input
	// properties.
	Build                *Build   `protobuf:"bytes,4,opt,name=build,proto3" json:"build,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BBAgentArgs) Reset()         { *m = BBAgentArgs{} }
func (m *BBAgentArgs) String() string { return proto.CompactTextString(m) }
func (*BBAgentArgs) ProtoMessage()    {}
func (*BBAgentArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_45f9e6fb262a81d2, []int{1}
}

func (m *BBAgentArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BBAgentArgs.Unmarshal(m, b)
}
func (m *BBAgentArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BBAgentArgs.Marshal(b, m, deterministic)
}
func (m *BBAgentArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BBAgentArgs.Merge(m, src)
}
func (m *BBAgentArgs) XXX_Size() int {
	return xxx_messageInfo_BBAgentArgs.Size(m)
}
func (m *BBAgentArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_BBAgentArgs.DiscardUnknown(m)
}

var xxx_messageInfo_BBAgentArgs proto.InternalMessageInfo

func (m *BBAgentArgs) GetExecutablePath() string {
	if m != nil {
		return m.ExecutablePath
	}
	return ""
}

func (m *BBAgentArgs) GetCacheDir() string {
	if m != nil {
		return m.CacheDir
	}
	return ""
}

func (m *BBAgentArgs) GetKnownPublicGerritHosts() []string {
	if m != nil {
		return m.KnownPublicGerritHosts
	}
	return nil
}

func (m *BBAgentArgs) GetBuild() *Build {
	if m != nil {
		return m.Build
	}
	return nil
}

func init() {
	proto.RegisterType((*BuildSecrets)(nil), "buildbucket.v2.BuildSecrets")
	proto.RegisterType((*BBAgentArgs)(nil), "buildbucket.v2.BBAgentArgs")
}

func init() {
	proto.RegisterFile("go.chromium.org/luci/buildbucket/proto/launcher.proto", fileDescriptor_45f9e6fb262a81d2)
}

var fileDescriptor_45f9e6fb262a81d2 = []byte{
	// 274 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0x4d, 0x4b, 0xc4, 0x30,
	0x10, 0x86, 0xa9, 0xab, 0x62, 0x53, 0x59, 0x21, 0xa0, 0x54, 0x3d, 0x58, 0xf6, 0x62, 0x41, 0x48,
	0xa1, 0x7e, 0x80, 0x78, 0xda, 0x22, 0xe8, 0x71, 0xa9, 0x9e, 0xbc, 0x84, 0x26, 0x3b, 0x34, 0xa1,
	0xdd, 0xa6, 0xa4, 0x89, 0xfa, 0xdf, 0xfc, 0x73, 0xd2, 0x59, 0xc1, 0xdd, 0xdb, 0x1e, 0xe7, 0x79,
	0x9f, 0x0c, 0x99, 0x97, 0xdc, 0xd7, 0x86, 0x49, 0x65, 0xcd, 0x4a, 0xfb, 0x15, 0x33, 0xb6, 0xce,
	0x5a, 0x2f, 0x75, 0x26, 0xbc, 0x6e, 0x97, 0xc2, 0xcb, 0x06, 0x5c, 0xd6, 0x5b, 0xe3, 0x4c, 0xd6,
	0x56, 0xbe, 0x93, 0x0a, 0x2c, 0xc3, 0x91, 0x4e, 0x37, 0x0c, 0xf6, 0x99, 0x5f, 0xe4, 0x3b, 0xae,
	0x41, 0xb2, 0xde, 0x31, 0xcb, 0xc8, 0x71, 0x31, 0x8e, 0x6f, 0x20, 0x2d, 0xb8, 0x81, 0x5e, 0x91,
	0x08, 0x63, 0xee, 0x4c, 0x03, 0x5d, 0x1c, 0x24, 0x41, 0x1a, 0x96, 0x04, 0xd1, 0xfb, 0x48, 0x66,
	0x3f, 0x01, 0x89, 0x8a, 0x62, 0x5e, 0x43, 0xe7, 0xe6, 0xb6, 0x1e, 0xe8, 0x35, 0x39, 0x81, 0x6f,
	0x90, 0xde, 0x55, 0xa2, 0x05, 0xde, 0x57, 0x4e, 0xfd, 0x3d, 0x9a, 0xfe, 0xe3, 0x45, 0xe5, 0x14,
	0xbd, 0x24, 0xa1, 0xac, 0xa4, 0x02, 0xbe, 0xd4, 0x36, 0xde, 0x43, 0xe5, 0x08, 0xc1, 0xb3, 0xb6,
	0xf4, 0x91, 0x9c, 0x37, 0x9d, 0xf9, 0xea, 0x78, 0xef, 0x45, 0xab, 0x25, 0xaf, 0xc1, 0x5a, 0xed,
	0xb8, 0x32, 0x83, 0x1b, 0xe2, 0x49, 0x32, 0x49, 0xc3, 0xf2, 0x0c, 0x85, 0x05, 0xe6, 0x2f, 0x18,
	0xbf, 0x8e, 0x29, 0xbd, 0x21, 0x07, 0xf8, 0xbd, 0x78, 0x3f, 0x09, 0xd2, 0x28, 0x3f, 0x65, 0xdb,
	0xad, 0x30, 0x3c, 0xaf, 0x5c, 0x3b, 0xc5, 0xc3, 0xc7, 0xdd, 0x6e, 0x25, 0x3d, 0x6d, 0x90, 0x5e,
	0x88, 0x43, 0x84, 0xb7, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xcc, 0xaf, 0x07, 0x11, 0xaa, 0x01,
	0x00, 0x00,
}
