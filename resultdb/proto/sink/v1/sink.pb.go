// Code generated by protoc-gen-go. DO NOT EDIT.
// source: go.chromium.org/luci/resultdb/proto/sink/v1/sink.proto

package sinkpb

import prpc "go.chromium.org/luci/grpc/prpc"

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ReportTestResultsRequest struct {
	// Test results to report.
	TestResults          []*TestResult `protobuf:"bytes,1,rep,name=test_results,json=testResults,proto3" json:"test_results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ReportTestResultsRequest) Reset()         { *m = ReportTestResultsRequest{} }
func (m *ReportTestResultsRequest) String() string { return proto.CompactTextString(m) }
func (*ReportTestResultsRequest) ProtoMessage()    {}
func (*ReportTestResultsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67e05c474f1f0646, []int{0}
}

func (m *ReportTestResultsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportTestResultsRequest.Unmarshal(m, b)
}
func (m *ReportTestResultsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportTestResultsRequest.Marshal(b, m, deterministic)
}
func (m *ReportTestResultsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportTestResultsRequest.Merge(m, src)
}
func (m *ReportTestResultsRequest) XXX_Size() int {
	return xxx_messageInfo_ReportTestResultsRequest.Size(m)
}
func (m *ReportTestResultsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportTestResultsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReportTestResultsRequest proto.InternalMessageInfo

func (m *ReportTestResultsRequest) GetTestResults() []*TestResult {
	if m != nil {
		return m.TestResults
	}
	return nil
}

type ReportTestResultsResponse struct {
	// List of unique identifiers that can be used to link to these results
	// or requested via luci.resultdb.rpc.v1.ResultDB service.
	TestResultNames      []string `protobuf:"bytes,1,rep,name=test_result_names,json=testResultNames,proto3" json:"test_result_names,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportTestResultsResponse) Reset()         { *m = ReportTestResultsResponse{} }
func (m *ReportTestResultsResponse) String() string { return proto.CompactTextString(m) }
func (*ReportTestResultsResponse) ProtoMessage()    {}
func (*ReportTestResultsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67e05c474f1f0646, []int{1}
}

func (m *ReportTestResultsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportTestResultsResponse.Unmarshal(m, b)
}
func (m *ReportTestResultsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportTestResultsResponse.Marshal(b, m, deterministic)
}
func (m *ReportTestResultsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportTestResultsResponse.Merge(m, src)
}
func (m *ReportTestResultsResponse) XXX_Size() int {
	return xxx_messageInfo_ReportTestResultsResponse.Size(m)
}
func (m *ReportTestResultsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportTestResultsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReportTestResultsResponse proto.InternalMessageInfo

func (m *ReportTestResultsResponse) GetTestResultNames() []string {
	if m != nil {
		return m.TestResultNames
	}
	return nil
}

// A container of a message to a ResultSink server.
// The server accepts a sequence of these messages in JSON format.
type SinkMessageContainer struct {
	// Types that are valid to be assigned to Msg:
	//	*SinkMessageContainer_Handshake
	//	*SinkMessageContainer_TestResult
	//	*SinkMessageContainer_TestResultFile
	Msg                  isSinkMessageContainer_Msg `protobuf_oneof:"msg"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *SinkMessageContainer) Reset()         { *m = SinkMessageContainer{} }
func (m *SinkMessageContainer) String() string { return proto.CompactTextString(m) }
func (*SinkMessageContainer) ProtoMessage()    {}
func (*SinkMessageContainer) Descriptor() ([]byte, []int) {
	return fileDescriptor_67e05c474f1f0646, []int{2}
}

func (m *SinkMessageContainer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SinkMessageContainer.Unmarshal(m, b)
}
func (m *SinkMessageContainer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SinkMessageContainer.Marshal(b, m, deterministic)
}
func (m *SinkMessageContainer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SinkMessageContainer.Merge(m, src)
}
func (m *SinkMessageContainer) XXX_Size() int {
	return xxx_messageInfo_SinkMessageContainer.Size(m)
}
func (m *SinkMessageContainer) XXX_DiscardUnknown() {
	xxx_messageInfo_SinkMessageContainer.DiscardUnknown(m)
}

var xxx_messageInfo_SinkMessageContainer proto.InternalMessageInfo

type isSinkMessageContainer_Msg interface {
	isSinkMessageContainer_Msg()
}

type SinkMessageContainer_Handshake struct {
	Handshake *Handshake `protobuf:"bytes,1,opt,name=handshake,proto3,oneof"`
}

type SinkMessageContainer_TestResult struct {
	TestResult *TestResult `protobuf:"bytes,2,opt,name=test_result,json=testResult,proto3,oneof"`
}

type SinkMessageContainer_TestResultFile struct {
	TestResultFile *TestResultFile `protobuf:"bytes,3,opt,name=test_result_file,json=testResultFile,proto3,oneof"`
}

func (*SinkMessageContainer_Handshake) isSinkMessageContainer_Msg() {}

func (*SinkMessageContainer_TestResult) isSinkMessageContainer_Msg() {}

func (*SinkMessageContainer_TestResultFile) isSinkMessageContainer_Msg() {}

func (m *SinkMessageContainer) GetMsg() isSinkMessageContainer_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (m *SinkMessageContainer) GetHandshake() *Handshake {
	if x, ok := m.GetMsg().(*SinkMessageContainer_Handshake); ok {
		return x.Handshake
	}
	return nil
}

func (m *SinkMessageContainer) GetTestResult() *TestResult {
	if x, ok := m.GetMsg().(*SinkMessageContainer_TestResult); ok {
		return x.TestResult
	}
	return nil
}

func (m *SinkMessageContainer) GetTestResultFile() *TestResultFile {
	if x, ok := m.GetMsg().(*SinkMessageContainer_TestResultFile); ok {
		return x.TestResultFile
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SinkMessageContainer) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SinkMessageContainer_Handshake)(nil),
		(*SinkMessageContainer_TestResult)(nil),
		(*SinkMessageContainer_TestResultFile)(nil),
	}
}

// The very first message in a ResultSink TCP connection.
type Handshake struct {
	// The auth token is available to eligible subprocesses via
	// test_results.uploader.auth_token LUCI_CONTEXT value.
	// More about LUCI_CONTEXT: https://chromium.googlesource.com/infra/luci/luci-py/+/6b6dad7aef994b96d3bb5b6f13fae8168938560f/client/LUCI_CONTEXT.md
	// If the value is unexpected, the server will close the connection.
	AuthToken            string   `protobuf:"bytes,1,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Handshake) Reset()         { *m = Handshake{} }
func (m *Handshake) String() string { return proto.CompactTextString(m) }
func (*Handshake) ProtoMessage()    {}
func (*Handshake) Descriptor() ([]byte, []int) {
	return fileDescriptor_67e05c474f1f0646, []int{3}
}

func (m *Handshake) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Handshake.Unmarshal(m, b)
}
func (m *Handshake) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Handshake.Marshal(b, m, deterministic)
}
func (m *Handshake) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Handshake.Merge(m, src)
}
func (m *Handshake) XXX_Size() int {
	return xxx_messageInfo_Handshake.Size(m)
}
func (m *Handshake) XXX_DiscardUnknown() {
	xxx_messageInfo_Handshake.DiscardUnknown(m)
}

var xxx_messageInfo_Handshake proto.InternalMessageInfo

func (m *Handshake) GetAuthToken() string {
	if m != nil {
		return m.AuthToken
	}
	return ""
}

func init() {
	proto.RegisterType((*ReportTestResultsRequest)(nil), "luci.resultdb.sink.v1.ReportTestResultsRequest")
	proto.RegisterType((*ReportTestResultsResponse)(nil), "luci.resultdb.sink.v1.ReportTestResultsResponse")
	proto.RegisterType((*SinkMessageContainer)(nil), "luci.resultdb.sink.v1.SinkMessageContainer")
	proto.RegisterType((*Handshake)(nil), "luci.resultdb.sink.v1.Handshake")
}

func init() {
	proto.RegisterFile("go.chromium.org/luci/resultdb/proto/sink/v1/sink.proto", fileDescriptor_67e05c474f1f0646)
}

var fileDescriptor_67e05c474f1f0646 = []byte{
	// 357 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x1b, 0xab, 0x42, 0x26, 0xa2, 0x76, 0x51, 0x88, 0x05, 0xa1, 0x06, 0x84, 0xd2, 0x43,
	0x62, 0xa3, 0x78, 0x11, 0x41, 0x6a, 0xd1, 0x5e, 0x14, 0x5c, 0x7b, 0xf2, 0x52, 0xd3, 0x76, 0x4d,
	0x42, 0x92, 0xdd, 0x98, 0xdd, 0x14, 0x8f, 0xfe, 0x6c, 0x8f, 0xb2, 0x1b, 0x6a, 0x22, 0xb6, 0xd4,
	0x9e, 0x16, 0xde, 0xcc, 0x7c, 0xf3, 0x66, 0x76, 0xe0, 0xd2, 0x67, 0xf6, 0x24, 0xc8, 0x58, 0x12,
	0xe6, 0x89, 0xcd, 0x32, 0xdf, 0x89, 0xf3, 0x49, 0xe8, 0x64, 0x84, 0xe7, 0xb1, 0x98, 0x8e, 0x9d,
	0x34, 0x63, 0x82, 0x39, 0x3c, 0xa4, 0x91, 0x33, 0xeb, 0xaa, 0xd7, 0x56, 0x12, 0x3a, 0x94, 0x79,
	0xf6, 0x3c, 0xcf, 0x56, 0x91, 0x59, 0xb7, 0x79, 0xbd, 0x0e, 0x4e, 0x10, 0x2e, 0x46, 0x45, 0xac,
	0xa0, 0x5a, 0xaf, 0x60, 0x62, 0x92, 0xb2, 0x4c, 0x0c, 0x09, 0x17, 0x58, 0x45, 0x38, 0x26, 0xef,
	0x39, 0xe1, 0x02, 0xf5, 0x61, 0xa7, 0x52, 0xc0, 0x4d, 0xad, 0x55, 0x6f, 0x1b, 0xee, 0x89, 0xbd,
	0xd0, 0x88, 0x5d, 0x02, 0xb0, 0x21, 0x4a, 0x98, 0x75, 0x0f, 0x47, 0x0b, 0x3a, 0xf0, 0x94, 0x51,
	0x4e, 0x50, 0x07, 0x1a, 0x95, 0x16, 0x23, 0xea, 0x25, 0xa4, 0xe8, 0xa3, 0xe3, 0xbd, 0x12, 0xf2,
	0x28, 0x65, 0xeb, 0x4b, 0x83, 0x83, 0xe7, 0x90, 0x46, 0x0f, 0x84, 0x73, 0xcf, 0x27, 0xb7, 0x8c,
	0x0a, 0x2f, 0xa4, 0x24, 0x43, 0x37, 0xa0, 0x07, 0x1e, 0x9d, 0xf2, 0xc0, 0x8b, 0x88, 0xa9, 0xb5,
	0xb4, 0xb6, 0xe1, 0xb6, 0x96, 0x98, 0x1c, 0xcc, 0xf3, 0x06, 0x35, 0x5c, 0x16, 0xa1, 0x3e, 0x18,
	0x15, 0x1b, 0xe6, 0x86, 0x62, 0xac, 0x1e, 0x74, 0x50, 0xc3, 0x50, 0xba, 0x44, 0x4f, 0xb0, 0x5f,
	0x1d, 0xe6, 0x2d, 0x8c, 0x89, 0x59, 0x57, 0xa8, 0xd3, 0x95, 0xa8, 0xbb, 0x30, 0x96, 0x9e, 0x76,
	0xc5, 0x2f, 0xa5, 0xb7, 0x05, 0xf5, 0x84, 0xfb, 0x56, 0x07, 0xf4, 0x1f, 0xe7, 0xe8, 0x18, 0xc0,
	0xcb, 0x45, 0x30, 0x12, 0x2c, 0x22, 0x54, 0xcd, 0xab, 0x63, 0x5d, 0x2a, 0x43, 0x29, 0xb8, 0x9f,
	0x1a, 0x6c, 0xca, 0x35, 0xa1, 0x0f, 0x68, 0xfc, 0x59, 0x3c, 0x72, 0x96, 0x38, 0x59, 0x76, 0x04,
	0xcd, 0xb3, 0xff, 0x17, 0x14, 0x7f, 0x6a, 0xd5, 0x7a, 0x17, 0x2f, 0xee, 0x1a, 0x57, 0x79, 0x25,
	0xdf, 0x74, 0x3c, 0xde, 0x56, 0xea, 0xf9, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7a, 0xd9, 0x5d,
	0xe7, 0x21, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SinkClient is the client API for Sink service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SinkClient interface {
	// Reports test results.
	ReportTestResults(ctx context.Context, in *ReportTestResultsRequest, opts ...grpc.CallOption) (*ReportTestResultsResponse, error)
}
type sinkPRPCClient struct {
	client *prpc.Client
}

func NewSinkPRPCClient(client *prpc.Client) SinkClient {
	return &sinkPRPCClient{client}
}

func (c *sinkPRPCClient) ReportTestResults(ctx context.Context, in *ReportTestResultsRequest, opts ...grpc.CallOption) (*ReportTestResultsResponse, error) {
	out := new(ReportTestResultsResponse)
	err := c.client.Call(ctx, "luci.resultdb.sink.v1.Sink", "ReportTestResults", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type sinkClient struct {
	cc grpc.ClientConnInterface
}

func NewSinkClient(cc grpc.ClientConnInterface) SinkClient {
	return &sinkClient{cc}
}

func (c *sinkClient) ReportTestResults(ctx context.Context, in *ReportTestResultsRequest, opts ...grpc.CallOption) (*ReportTestResultsResponse, error) {
	out := new(ReportTestResultsResponse)
	err := c.cc.Invoke(ctx, "/luci.resultdb.sink.v1.Sink/ReportTestResults", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SinkServer is the server API for Sink service.
type SinkServer interface {
	// Reports test results.
	ReportTestResults(context.Context, *ReportTestResultsRequest) (*ReportTestResultsResponse, error)
}

// UnimplementedSinkServer can be embedded to have forward compatible implementations.
type UnimplementedSinkServer struct {
}

func (*UnimplementedSinkServer) ReportTestResults(ctx context.Context, req *ReportTestResultsRequest) (*ReportTestResultsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReportTestResults not implemented")
}

func RegisterSinkServer(s prpc.Registrar, srv SinkServer) {
	s.RegisterService(&_Sink_serviceDesc, srv)
}

func _Sink_ReportTestResults_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReportTestResultsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SinkServer).ReportTestResults(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luci.resultdb.sink.v1.Sink/ReportTestResults",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SinkServer).ReportTestResults(ctx, req.(*ReportTestResultsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Sink_serviceDesc = grpc.ServiceDesc{
	ServiceName: "luci.resultdb.sink.v1.Sink",
	HandlerType: (*SinkServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ReportTestResults",
			Handler:    _Sink_ReportTestResults_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "go.chromium.org/luci/resultdb/proto/sink/v1/sink.proto",
}
