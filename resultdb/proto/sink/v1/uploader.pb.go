// Code generated by protoc-gen-go. DO NOT EDIT.
// source: go.chromium.org/luci/resultdb/proto/sink/v1/uploader.proto

package sinkpb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	v1 "go.chromium.org/luci/resultdb/proto/rpc/v1"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// File format.
type TestResultEntry_ResultsFile_Format int32

const (
	// A sequence of TestResultEntry JSON objects
	// Same format as `luci-test upload` understands.
	// The default format.
	TestResultEntry_ResultsFile_LUCI TestResultEntry_ResultsFile_Format = 0
	// JSON Test Results format
	TestResultEntry_ResultsFile_CHROMIUM_JSON_TEST_RESULTS TestResultEntry_ResultsFile_Format = 1
	// GTest
	TestResultEntry_ResultsFile_GOOGLE_TEST TestResultEntry_ResultsFile_Format = 2
)

var TestResultEntry_ResultsFile_Format_name = map[int32]string{
	0: "LUCI",
	1: "CHROMIUM_JSON_TEST_RESULTS",
	2: "GOOGLE_TEST",
}

var TestResultEntry_ResultsFile_Format_value = map[string]int32{
	"LUCI":                       0,
	"CHROMIUM_JSON_TEST_RESULTS": 1,
	"GOOGLE_TEST":                2,
}

func (x TestResultEntry_ResultsFile_Format) String() string {
	return proto.EnumName(TestResultEntry_ResultsFile_Format_name, int32(x))
}

func (TestResultEntry_ResultsFile_Format) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d8dd10ce3514d035, []int{1, 2, 0}
}

type Handshake struct {
	// The auth token is available to the subprocess via
	// test_results.uploader.auth_token
	// LUCI_CONTEXT value.
	// If the value is unexpected, the server simply closes the connection.
	AuthToken            string   `protobuf:"bytes,1,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Handshake) Reset()         { *m = Handshake{} }
func (m *Handshake) String() string { return proto.CompactTextString(m) }
func (*Handshake) ProtoMessage()    {}
func (*Handshake) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8dd10ce3514d035, []int{0}
}

func (m *Handshake) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Handshake.Unmarshal(m, b)
}
func (m *Handshake) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Handshake.Marshal(b, m, deterministic)
}
func (m *Handshake) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Handshake.Merge(m, src)
}
func (m *Handshake) XXX_Size() int {
	return xxx_messageInfo_Handshake.Size(m)
}
func (m *Handshake) XXX_DiscardUnknown() {
	xxx_messageInfo_Handshake.DiscardUnknown(m)
}

var xxx_messageInfo_Handshake proto.InternalMessageInfo

func (m *Handshake) GetAuthToken() string {
	if m != nil {
		return m.AuthToken
	}
	return ""
}

type TestResultEntry struct {
	// Types that are valid to be assigned to Entry:
	//	*TestResultEntry_TestResult_
	//	*TestResultEntry_ResultsFile_
	Entry                isTestResultEntry_Entry `protobuf_oneof:"entry"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *TestResultEntry) Reset()         { *m = TestResultEntry{} }
func (m *TestResultEntry) String() string { return proto.CompactTextString(m) }
func (*TestResultEntry) ProtoMessage()    {}
func (*TestResultEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8dd10ce3514d035, []int{1}
}

func (m *TestResultEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestResultEntry.Unmarshal(m, b)
}
func (m *TestResultEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestResultEntry.Marshal(b, m, deterministic)
}
func (m *TestResultEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestResultEntry.Merge(m, src)
}
func (m *TestResultEntry) XXX_Size() int {
	return xxx_messageInfo_TestResultEntry.Size(m)
}
func (m *TestResultEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_TestResultEntry.DiscardUnknown(m)
}

var xxx_messageInfo_TestResultEntry proto.InternalMessageInfo

type isTestResultEntry_Entry interface {
	isTestResultEntry_Entry()
}

type TestResultEntry_TestResult_ struct {
	TestResult *TestResultEntry_TestResult `protobuf:"bytes,1,opt,name=test_result,json=testResult,proto3,oneof"`
}

type TestResultEntry_ResultsFile_ struct {
	ResultsFile *TestResultEntry_ResultsFile `protobuf:"bytes,2,opt,name=results_file,json=resultsFile,proto3,oneof"`
}

func (*TestResultEntry_TestResult_) isTestResultEntry_Entry() {}

func (*TestResultEntry_ResultsFile_) isTestResultEntry_Entry() {}

func (m *TestResultEntry) GetEntry() isTestResultEntry_Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

func (m *TestResultEntry) GetTestResult() *TestResultEntry_TestResult {
	if x, ok := m.GetEntry().(*TestResultEntry_TestResult_); ok {
		return x.TestResult
	}
	return nil
}

func (m *TestResultEntry) GetResultsFile() *TestResultEntry_ResultsFile {
	if x, ok := m.GetEntry().(*TestResultEntry_ResultsFile_); ok {
		return x.ResultsFile
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*TestResultEntry) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*TestResultEntry_TestResult_)(nil),
		(*TestResultEntry_ResultsFile_)(nil),
	}
}

// A local test result.
type TestResultEntry_TestResult struct {
	TestName string `protobuf:"bytes,1,opt,name=test_name,json=testName,proto3" json:"test_name,omitempty"`
	// Adds/overrides the variant keys specified on the command line.
	Variant              *v1.VariantDef                   `protobuf:"bytes,2,opt,name=variant,proto3" json:"variant,omitempty"`
	IsExpected           bool                             `protobuf:"varint,3,opt,name=is_expected,json=isExpected,proto3" json:"is_expected,omitempty"`
	Status               v1.TestStatus                    `protobuf:"varint,4,opt,name=status,proto3,enum=luci.resultdb.TestStatus" json:"status,omitempty"`
	SummaryMarkdown      string                           `protobuf:"bytes,5,opt,name=summary_markdown,json=summaryMarkdown,proto3" json:"summary_markdown,omitempty"`
	StartTime            *timestamp.Timestamp             `protobuf:"bytes,6,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	RunDuration          *duration.Duration               `protobuf:"bytes,7,opt,name=run_duration,json=runDuration,proto3" json:"run_duration,omitempty"`
	Files                map[string]*TestResultEntry_File `protobuf:"bytes,8,rep,name=files,proto3" json:"files,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *TestResultEntry_TestResult) Reset()         { *m = TestResultEntry_TestResult{} }
func (m *TestResultEntry_TestResult) String() string { return proto.CompactTextString(m) }
func (*TestResultEntry_TestResult) ProtoMessage()    {}
func (*TestResultEntry_TestResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8dd10ce3514d035, []int{1, 0}
}

func (m *TestResultEntry_TestResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestResultEntry_TestResult.Unmarshal(m, b)
}
func (m *TestResultEntry_TestResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestResultEntry_TestResult.Marshal(b, m, deterministic)
}
func (m *TestResultEntry_TestResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestResultEntry_TestResult.Merge(m, src)
}
func (m *TestResultEntry_TestResult) XXX_Size() int {
	return xxx_messageInfo_TestResultEntry_TestResult.Size(m)
}
func (m *TestResultEntry_TestResult) XXX_DiscardUnknown() {
	xxx_messageInfo_TestResultEntry_TestResult.DiscardUnknown(m)
}

var xxx_messageInfo_TestResultEntry_TestResult proto.InternalMessageInfo

func (m *TestResultEntry_TestResult) GetTestName() string {
	if m != nil {
		return m.TestName
	}
	return ""
}

func (m *TestResultEntry_TestResult) GetVariant() *v1.VariantDef {
	if m != nil {
		return m.Variant
	}
	return nil
}

func (m *TestResultEntry_TestResult) GetIsExpected() bool {
	if m != nil {
		return m.IsExpected
	}
	return false
}

func (m *TestResultEntry_TestResult) GetStatus() v1.TestStatus {
	if m != nil {
		return m.Status
	}
	return v1.TestStatus_STATUS_UNSPECIFIED
}

func (m *TestResultEntry_TestResult) GetSummaryMarkdown() string {
	if m != nil {
		return m.SummaryMarkdown
	}
	return ""
}

func (m *TestResultEntry_TestResult) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *TestResultEntry_TestResult) GetRunDuration() *duration.Duration {
	if m != nil {
		return m.RunDuration
	}
	return nil
}

func (m *TestResultEntry_TestResult) GetFiles() map[string]*TestResultEntry_File {
	if m != nil {
		return m.Files
	}
	return nil
}

// A local file.
type TestResultEntry_File struct {
	// Types that are valid to be assigned to Body:
	//	*TestResultEntry_File_FilePath
	//	*TestResultEntry_File_Contents
	Body                 isTestResultEntry_File_Body `protobuf_oneof:"body"`
	MediaType            string                      `protobuf:"bytes,3,opt,name=media_type,json=mediaType,proto3" json:"media_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *TestResultEntry_File) Reset()         { *m = TestResultEntry_File{} }
func (m *TestResultEntry_File) String() string { return proto.CompactTextString(m) }
func (*TestResultEntry_File) ProtoMessage()    {}
func (*TestResultEntry_File) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8dd10ce3514d035, []int{1, 1}
}

func (m *TestResultEntry_File) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestResultEntry_File.Unmarshal(m, b)
}
func (m *TestResultEntry_File) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestResultEntry_File.Marshal(b, m, deterministic)
}
func (m *TestResultEntry_File) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestResultEntry_File.Merge(m, src)
}
func (m *TestResultEntry_File) XXX_Size() int {
	return xxx_messageInfo_TestResultEntry_File.Size(m)
}
func (m *TestResultEntry_File) XXX_DiscardUnknown() {
	xxx_messageInfo_TestResultEntry_File.DiscardUnknown(m)
}

var xxx_messageInfo_TestResultEntry_File proto.InternalMessageInfo

type isTestResultEntry_File_Body interface {
	isTestResultEntry_File_Body()
}

type TestResultEntry_File_FilePath struct {
	FilePath string `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3,oneof"`
}

type TestResultEntry_File_Contents struct {
	Contents []byte `protobuf:"bytes,2,opt,name=contents,proto3,oneof"`
}

func (*TestResultEntry_File_FilePath) isTestResultEntry_File_Body() {}

func (*TestResultEntry_File_Contents) isTestResultEntry_File_Body() {}

func (m *TestResultEntry_File) GetBody() isTestResultEntry_File_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *TestResultEntry_File) GetFilePath() string {
	if x, ok := m.GetBody().(*TestResultEntry_File_FilePath); ok {
		return x.FilePath
	}
	return ""
}

func (m *TestResultEntry_File) GetContents() []byte {
	if x, ok := m.GetBody().(*TestResultEntry_File_Contents); ok {
		return x.Contents
	}
	return nil
}

func (m *TestResultEntry_File) GetMediaType() string {
	if m != nil {
		return m.MediaType
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*TestResultEntry_File) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*TestResultEntry_File_FilePath)(nil),
		(*TestResultEntry_File_Contents)(nil),
	}
}

// Upload results from a file.
type TestResultEntry_ResultsFile struct {
	// Absolute path to the results file on the same machine
	// as the TCP server.
	Path                 string                             `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Format               TestResultEntry_ResultsFile_Format `protobuf:"varint,2,opt,name=format,proto3,enum=luci.resultdb.TestResultEntry_ResultsFile_Format" json:"format,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *TestResultEntry_ResultsFile) Reset()         { *m = TestResultEntry_ResultsFile{} }
func (m *TestResultEntry_ResultsFile) String() string { return proto.CompactTextString(m) }
func (*TestResultEntry_ResultsFile) ProtoMessage()    {}
func (*TestResultEntry_ResultsFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8dd10ce3514d035, []int{1, 2}
}

func (m *TestResultEntry_ResultsFile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestResultEntry_ResultsFile.Unmarshal(m, b)
}
func (m *TestResultEntry_ResultsFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestResultEntry_ResultsFile.Marshal(b, m, deterministic)
}
func (m *TestResultEntry_ResultsFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestResultEntry_ResultsFile.Merge(m, src)
}
func (m *TestResultEntry_ResultsFile) XXX_Size() int {
	return xxx_messageInfo_TestResultEntry_ResultsFile.Size(m)
}
func (m *TestResultEntry_ResultsFile) XXX_DiscardUnknown() {
	xxx_messageInfo_TestResultEntry_ResultsFile.DiscardUnknown(m)
}

var xxx_messageInfo_TestResultEntry_ResultsFile proto.InternalMessageInfo

func (m *TestResultEntry_ResultsFile) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *TestResultEntry_ResultsFile) GetFormat() TestResultEntry_ResultsFile_Format {
	if m != nil {
		return m.Format
	}
	return TestResultEntry_ResultsFile_LUCI
}

func init() {
	proto.RegisterEnum("luci.resultdb.TestResultEntry_ResultsFile_Format", TestResultEntry_ResultsFile_Format_name, TestResultEntry_ResultsFile_Format_value)
	proto.RegisterType((*Handshake)(nil), "luci.resultdb.Handshake")
	proto.RegisterType((*TestResultEntry)(nil), "luci.resultdb.TestResultEntry")
	proto.RegisterType((*TestResultEntry_TestResult)(nil), "luci.resultdb.TestResultEntry.TestResult")
	proto.RegisterMapType((map[string]*TestResultEntry_File)(nil), "luci.resultdb.TestResultEntry.TestResult.FilesEntry")
	proto.RegisterType((*TestResultEntry_File)(nil), "luci.resultdb.TestResultEntry.File")
	proto.RegisterType((*TestResultEntry_ResultsFile)(nil), "luci.resultdb.TestResultEntry.ResultsFile")
}

func init() {
	proto.RegisterFile("go.chromium.org/luci/resultdb/proto/sink/v1/uploader.proto", fileDescriptor_d8dd10ce3514d035)
}

var fileDescriptor_d8dd10ce3514d035 = []byte{
	// 668 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x4d, 0x4f, 0xdb, 0x4a,
	0x14, 0x4d, 0x20, 0x5f, 0xbe, 0xe6, 0x41, 0x34, 0x2b, 0x3f, 0xbf, 0x07, 0x44, 0xbc, 0x4d, 0x60,
	0xe1, 0x88, 0x80, 0xf4, 0x0a, 0x65, 0x05, 0x04, 0x02, 0x0a, 0xa4, 0x9a, 0x84, 0x2e, 0x2a, 0x55,
	0xd6, 0x24, 0x9e, 0x24, 0x6e, 0x6c, 0x8f, 0x35, 0x33, 0xa6, 0xcd, 0xb2, 0x3f, 0xa9, 0x3f, 0xa8,
	0xff, 0xa5, 0x9a, 0xb1, 0x4d, 0x68, 0xba, 0x00, 0x56, 0xf1, 0x3d, 0xf7, 0x9c, 0x73, 0xaf, 0x73,
	0x4f, 0x02, 0xa7, 0x53, 0xe6, 0x8c, 0x67, 0x9c, 0x85, 0x7e, 0x12, 0x3a, 0x8c, 0x4f, 0x5b, 0x41,
	0x32, 0xf6, 0x5b, 0x9c, 0x8a, 0x24, 0x90, 0xde, 0xa8, 0x15, 0x73, 0x26, 0x59, 0x4b, 0xf8, 0xd1,
	0xbc, 0xf5, 0x78, 0xd8, 0x4a, 0xe2, 0x80, 0x11, 0x8f, 0x72, 0x47, 0xc3, 0xe8, 0x2f, 0xc5, 0x75,
	0x72, 0xae, 0xbd, 0x33, 0x65, 0x6c, 0x1a, 0xd0, 0x54, 0x33, 0x4a, 0x26, 0x2d, 0x2f, 0xe1, 0x44,
	0xfa, 0x2c, 0x4a, 0xe9, 0xf6, 0xee, 0x6a, 0x5f, 0xfa, 0x21, 0x15, 0x92, 0x84, 0x71, 0x46, 0xf8,
	0xff, 0x35, 0xbb, 0xf0, 0x78, 0xac, 0x56, 0x19, 0xb3, 0x30, 0x7c, 0x72, 0x3e, 0x7b, 0x83, 0x50,
	0x52, 0x21, 0xdd, 0xb4, 0x95, 0xaa, 0xf7, 0x0e, 0xc0, 0xe8, 0x92, 0xc8, 0x13, 0x33, 0x32, 0xa7,
	0x68, 0x1b, 0x80, 0x24, 0x72, 0xe6, 0x4a, 0x36, 0xa7, 0x91, 0x55, 0x6c, 0x14, 0x9b, 0x06, 0x36,
	0x14, 0x32, 0x54, 0xc0, 0xde, 0xcf, 0x2a, 0x6c, 0x0d, 0xa9, 0x90, 0x58, 0x1b, 0x74, 0x22, 0xc9,
	0x17, 0xa8, 0x07, 0xe6, 0x33, 0x53, 0xad, 0x31, 0xdb, 0xfb, 0xce, 0x6f, 0x5f, 0x8e, 0xb3, 0x22,
	0x7a, 0x56, 0x77, 0x0b, 0x18, 0xe4, 0x53, 0x85, 0xfa, 0xb0, 0x91, 0x8a, 0x84, 0x3b, 0xf1, 0x03,
	0x6a, 0xad, 0x69, 0xbb, 0x83, 0x17, 0xec, 0xd2, 0x67, 0x71, 0xe5, 0x07, 0xb4, 0x5b, 0xc0, 0x26,
	0x5f, 0x96, 0xf6, 0xf7, 0x12, 0xc0, 0x92, 0x8e, 0xfe, 0x01, 0x43, 0x6f, 0x1b, 0x91, 0x90, 0x66,
	0xef, 0x57, 0x53, 0xc0, 0x3d, 0x09, 0x29, 0x3a, 0x82, 0xea, 0x23, 0xe1, 0x3e, 0x89, 0x64, 0x36,
	0xf7, 0xef, 0x95, 0xb9, 0x1f, 0xd3, 0xee, 0x25, 0x9d, 0xe0, 0x9c, 0x89, 0x76, 0xc1, 0xf4, 0x85,
	0x4b, 0xbf, 0xc5, 0x74, 0x2c, 0xa9, 0x67, 0xad, 0x37, 0x8a, 0xcd, 0x1a, 0x06, 0x5f, 0x74, 0x32,
	0x04, 0x1d, 0x42, 0x45, 0x48, 0x22, 0x13, 0x61, 0x95, 0x1a, 0xc5, 0xe6, 0xe6, 0x1f, 0xa6, 0x6a,
	0xbb, 0x81, 0x26, 0xe0, 0x8c, 0x88, 0xf6, 0xa1, 0x2e, 0x92, 0x30, 0x24, 0x7c, 0xe1, 0x86, 0x84,
	0xcf, 0x3d, 0xf6, 0x35, 0xb2, 0xca, 0x7a, 0xd9, 0xad, 0x0c, 0xbf, 0xcb, 0x60, 0x74, 0x02, 0x20,
	0x24, 0xe1, 0xd2, 0x55, 0x71, 0xb2, 0x2a, 0x7a, 0x6d, 0xdb, 0x49, 0xb3, 0xe6, 0xe4, 0x59, 0x73,
	0x86, 0x79, 0xd6, 0xb0, 0xa1, 0xd9, 0xaa, 0x46, 0x67, 0xb0, 0xc1, 0x93, 0xc8, 0xcd, 0x73, 0x6a,
	0x55, 0xb3, 0x77, 0x5e, 0x15, 0x5f, 0x66, 0x04, 0x6c, 0xf2, 0x24, 0xca, 0x0b, 0x74, 0x0b, 0x65,
	0x75, 0x21, 0x61, 0xd5, 0x1a, 0xeb, 0x4d, 0xb3, 0x7d, 0xfc, 0xea, 0x8b, 0x3b, 0xea, 0x2e, 0x42,
	0xa3, 0x38, 0xb5, 0xb0, 0x3f, 0x03, 0x2c, 0x41, 0x54, 0x87, 0xf5, 0x39, 0x5d, 0x64, 0xd7, 0x51,
	0x8f, 0xe8, 0x04, 0xca, 0x8f, 0x24, 0x48, 0xf2, 0x38, 0xfc, 0xf7, 0xc2, 0x2c, 0xe5, 0x85, 0x53,
	0xc5, 0xe9, 0xda, 0xbb, 0xa2, 0xfd, 0x05, 0x4a, 0x0a, 0x42, 0xdb, 0x60, 0xa8, 0x79, 0x6e, 0x4c,
	0xe4, 0x2c, 0xb5, 0xef, 0x16, 0x70, 0x4d, 0x41, 0x1f, 0x88, 0x9c, 0xa1, 0x7f, 0xa1, 0x36, 0x66,
	0x91, 0xa4, 0x91, 0x14, 0x7a, 0xd0, 0x86, 0xea, 0xe6, 0x88, 0xfa, 0x69, 0x84, 0xd4, 0xf3, 0x89,
	0x2b, 0x17, 0x31, 0xd5, 0x67, 0x36, 0xb0, 0xa1, 0x91, 0xe1, 0x22, 0xa6, 0xe7, 0x15, 0x28, 0x8d,
	0x98, 0xb7, 0xb0, 0x7f, 0x14, 0xc1, 0x7c, 0x16, 0x47, 0x84, 0xa0, 0xb4, 0x1c, 0x87, 0xf5, 0x33,
	0xba, 0x81, 0xca, 0x84, 0xf1, 0x90, 0xa4, 0x31, 0xdb, 0x6c, 0x1f, 0xbe, 0x3e, 0xde, 0xce, 0x95,
	0x16, 0xe2, 0xcc, 0x60, 0xef, 0x02, 0x2a, 0x29, 0x82, 0x6a, 0x50, 0xea, 0x3d, 0x5c, 0xdc, 0xd4,
	0x0b, 0x68, 0x07, 0xec, 0x8b, 0x2e, 0xee, 0xdf, 0xdd, 0x3c, 0xdc, 0xb9, 0xb7, 0x83, 0xfe, 0xbd,
	0x3b, 0xec, 0x0c, 0x86, 0x2e, 0xee, 0x0c, 0x1e, 0x7a, 0xc3, 0x41, 0xbd, 0x88, 0xb6, 0xc0, 0xbc,
	0xee, 0xf7, 0xaf, 0x7b, 0x1d, 0xdd, 0xa8, 0xaf, 0x9d, 0x57, 0xa1, 0x4c, 0xd5, 0xa0, 0xf3, 0xe3,
	0x4f, 0xed, 0x37, 0xfc, 0x21, 0xbe, 0x57, 0x9f, 0xf1, 0x68, 0x54, 0xd1, 0xe8, 0xd1, 0xaf, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xad, 0xbc, 0xc2, 0x1e, 0x4d, 0x05, 0x00, 0x00,
}
