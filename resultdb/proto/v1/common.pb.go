// Code generated by protoc-gen-go. DO NOT EDIT.
// source: go.chromium.org/luci/resultdb/proto/v1/common.proto

package resultspb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// A key-value map describing one variant of a test case.
//
// The same test case can be executed in different ways, for example on
// different OS, GPUs, with different compile options, runtime flags or even
// with different values of the test parameter (for parameterized tests).
// A variant definition captures one variant.
// A test case with a specific variant definition is called test variant.
//
// Guidelines for variant definition design:
// - This rule guides what keys MUST be present in the definition.
//   A single expected result of a given test variant is enough to consider it
//   passing (potentially flakily). If it is important to differentiate across
//   a certain dimension (e.g. whether web tests are executed with or without
//   site per process isolation), then there MUST be a key that captures the
//   dimension (e.g. a name from test_suites.pyl).
//   Otherwise, a pass in one variant will hide a failure of another one.
//
// - This rule guides what keys MUST NOT be present in the definition.
//   A change in the key-value set essentially resets the test result history.
//   For example, if GN args are among variant key-value pairs, then adding a
//   new GN arg changes the identity of the test variant and resets its history.
//
// In Chromium, typical variant keys are:
// - bucket: the LUCI bucket, e.g. "ci"
// - builder: the LUCI builder, e.g. "linux-rel"
// - test_suite: a name from
//   https://cs.chromium.org/chromium/src/testing/buildbot/test_suites.pyl
type VariantDef struct {
	// The definition of the variant.
	// Key regex: ^[a-z][a-z0-9_]*(/[a-z][a-z0-9_]*)*$
	// Max key length: 32.
	Def                  map[string]string `protobuf:"bytes,1,rep,name=def,proto3" json:"def,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *VariantDef) Reset()         { *m = VariantDef{} }
func (m *VariantDef) String() string { return proto.CompactTextString(m) }
func (*VariantDef) ProtoMessage()    {}
func (*VariantDef) Descriptor() ([]byte, []int) {
	return fileDescriptor_227435c4a388f5d7, []int{0}
}

func (m *VariantDef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VariantDef.Unmarshal(m, b)
}
func (m *VariantDef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VariantDef.Marshal(b, m, deterministic)
}
func (m *VariantDef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VariantDef.Merge(m, src)
}
func (m *VariantDef) XXX_Size() int {
	return xxx_messageInfo_VariantDef.Size(m)
}
func (m *VariantDef) XXX_DiscardUnknown() {
	xxx_messageInfo_VariantDef.DiscardUnknown(m)
}

var xxx_messageInfo_VariantDef proto.InternalMessageInfo

func (m *VariantDef) GetDef() map[string]string {
	if m != nil {
		return m.Def
	}
	return nil
}

// A string key-value pair. Typically used for tagging, see Invocation.tags
type StringPair struct {
	// Regex: ^[a-z][a-z0-9_]*(/[a-z][a-z0-9_]*)*$
	// Max length: 64
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Regex: ^[a-z][a-z0-9_]*$
	// Max length: 64
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StringPair) Reset()         { *m = StringPair{} }
func (m *StringPair) String() string { return proto.CompactTextString(m) }
func (*StringPair) ProtoMessage()    {}
func (*StringPair) Descriptor() ([]byte, []int) {
	return fileDescriptor_227435c4a388f5d7, []int{1}
}

func (m *StringPair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StringPair.Unmarshal(m, b)
}
func (m *StringPair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StringPair.Marshal(b, m, deterministic)
}
func (m *StringPair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringPair.Merge(m, src)
}
func (m *StringPair) XXX_Size() int {
	return xxx_messageInfo_StringPair.Size(m)
}
func (m *StringPair) XXX_DiscardUnknown() {
	xxx_messageInfo_StringPair.DiscardUnknown(m)
}

var xxx_messageInfo_StringPair proto.InternalMessageInfo

func (m *StringPair) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *StringPair) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*VariantDef)(nil), "luci.resultdb.VariantDef")
	proto.RegisterMapType((map[string]string)(nil), "luci.resultdb.VariantDef.DefEntry")
	proto.RegisterType((*StringPair)(nil), "luci.resultdb.StringPair")
}

func init() {
	proto.RegisterFile("go.chromium.org/luci/resultdb/proto/v1/common.proto", fileDescriptor_227435c4a388f5d7)
}

var fileDescriptor_227435c4a388f5d7 = []byte{
	// 202 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x32, 0x4e, 0xcf, 0xd7, 0x4b,
	0xce, 0x28, 0xca, 0xcf, 0xcd, 0x2c, 0xcd, 0xd5, 0xcb, 0x2f, 0x4a, 0xd7, 0xcf, 0x29, 0x4d, 0xce,
	0xd4, 0x2f, 0x4a, 0x2d, 0x2e, 0xcd, 0x29, 0x49, 0x49, 0xd2, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0xd7,
	0x2f, 0x33, 0xd4, 0x4f, 0xce, 0xcf, 0xcd, 0xcd, 0xcf, 0xd3, 0x03, 0xf3, 0x85, 0x78, 0x41, 0x8a,
	0xf4, 0x60, 0x8a, 0x94, 0xaa, 0xb8, 0xb8, 0xc2, 0x12, 0x8b, 0x32, 0x13, 0xf3, 0x4a, 0x5c, 0x52,
	0xd3, 0x84, 0x4c, 0xb8, 0x98, 0x53, 0x52, 0xd3, 0x24, 0x18, 0x15, 0x98, 0x35, 0xb8, 0x8d, 0x94,
	0xf4, 0x50, 0x94, 0xea, 0x21, 0xd4, 0xe9, 0xb9, 0xa4, 0xa6, 0xb9, 0xe6, 0x95, 0x14, 0x55, 0x06,
	0x81, 0x94, 0x4b, 0x99, 0x71, 0x71, 0xc0, 0x04, 0x84, 0x04, 0xb8, 0x98, 0xb3, 0x53, 0x2b, 0x25,
	0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0x40, 0x4c, 0x21, 0x11, 0x2e, 0xd6, 0xb2, 0xc4, 0x9c, 0xd2,
	0x54, 0x09, 0x26, 0xb0, 0x18, 0x84, 0x63, 0xc5, 0x64, 0xc1, 0xa8, 0x64, 0xc2, 0xc5, 0x15, 0x5c,
	0x52, 0x94, 0x99, 0x97, 0x1e, 0x90, 0x98, 0x59, 0x44, 0xac, 0x4e, 0x27, 0xa3, 0x28, 0x03, 0xe2,
	0xfc, 0x6d, 0x0d, 0x11, 0x29, 0x2e, 0x48, 0x4a, 0x62, 0x03, 0x8b, 0x19, 0x03, 0x02, 0x00, 0x00,
	0xff, 0xff, 0xb6, 0x3d, 0xf4, 0x11, 0x32, 0x01, 0x00, 0x00,
}
