// Copyright 2021 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.17.3
// source: go.chromium.org/luci/resultdb/proto/v1/unique_test_variant.proto

package resultpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents a unique test variant. Comparing with TestVariant, this message
// doesn't contain the outcomes.
//
// A test variant is unique when it has a unique combination of realm, test_id,
// and variant_hash.
type UniqueTestVariant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The realm that the unique test variant is in.
	Realm string `protobuf:"bytes,1,opt,name=realm,proto3" json:"realm,omitempty"`
	// Test ID that the unique test variant belongs to.
	TestId string `protobuf:"bytes,2,opt,name=test_id,json=testId,proto3" json:"test_id,omitempty"`
	// Hash of the variant.
	//
	// See the comments on luci.resultdb.v1.TestResult.variant_hash for details.
	VariantHash string `protobuf:"bytes,3,opt,name=variant_hash,json=variantHash,proto3" json:"variant_hash,omitempty"`
	// The definition of the variant.
	Variant *Variant `protobuf:"bytes,4,opt,name=variant,proto3" json:"variant,omitempty"`
}

func (x *UniqueTestVariant) Reset() {
	*x = UniqueTestVariant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_resultdb_proto_v1_unique_test_variant_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UniqueTestVariant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UniqueTestVariant) ProtoMessage() {}

func (x *UniqueTestVariant) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_resultdb_proto_v1_unique_test_variant_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UniqueTestVariant.ProtoReflect.Descriptor instead.
func (*UniqueTestVariant) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_resultdb_proto_v1_unique_test_variant_proto_rawDescGZIP(), []int{0}
}

func (x *UniqueTestVariant) GetRealm() string {
	if x != nil {
		return x.Realm
	}
	return ""
}

func (x *UniqueTestVariant) GetTestId() string {
	if x != nil {
		return x.TestId
	}
	return ""
}

func (x *UniqueTestVariant) GetVariantHash() string {
	if x != nil {
		return x.VariantHash
	}
	return ""
}

func (x *UniqueTestVariant) GetVariant() *Variant {
	if x != nil {
		return x.Variant
	}
	return nil
}

var File_go_chromium_org_luci_resultdb_proto_v1_unique_test_variant_proto protoreflect.FileDescriptor

var file_go_chromium_org_luci_resultdb_proto_v1_unique_test_variant_proto_rawDesc = []byte{
	0x0a, 0x40, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f,
	0x74, 0x65, 0x73, 0x74, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x10, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64,
	0x62, 0x2e, 0x76, 0x31, 0x1a, 0x33, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75,
	0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x64, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9a, 0x01, 0x0a, 0x11, 0x55, 0x6e,
	0x69, 0x71, 0x75, 0x65, 0x54, 0x65, 0x73, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x72, 0x65, 0x61, 0x6c, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x33, 0x0a, 0x07, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x07, 0x76,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72,
	0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31,
	0x3b, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_go_chromium_org_luci_resultdb_proto_v1_unique_test_variant_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_resultdb_proto_v1_unique_test_variant_proto_rawDescData = file_go_chromium_org_luci_resultdb_proto_v1_unique_test_variant_proto_rawDesc
)

func file_go_chromium_org_luci_resultdb_proto_v1_unique_test_variant_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_resultdb_proto_v1_unique_test_variant_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_resultdb_proto_v1_unique_test_variant_proto_rawDescData = protoimpl.X.CompressGZIP(file_go_chromium_org_luci_resultdb_proto_v1_unique_test_variant_proto_rawDescData)
	})
	return file_go_chromium_org_luci_resultdb_proto_v1_unique_test_variant_proto_rawDescData
}

var file_go_chromium_org_luci_resultdb_proto_v1_unique_test_variant_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_go_chromium_org_luci_resultdb_proto_v1_unique_test_variant_proto_goTypes = []interface{}{
	(*UniqueTestVariant)(nil), // 0: luci.resultdb.v1.UniqueTestVariant
	(*Variant)(nil),           // 1: luci.resultdb.v1.Variant
}
var file_go_chromium_org_luci_resultdb_proto_v1_unique_test_variant_proto_depIdxs = []int32{
	1, // 0: luci.resultdb.v1.UniqueTestVariant.variant:type_name -> luci.resultdb.v1.Variant
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_resultdb_proto_v1_unique_test_variant_proto_init() }
func file_go_chromium_org_luci_resultdb_proto_v1_unique_test_variant_proto_init() {
	if File_go_chromium_org_luci_resultdb_proto_v1_unique_test_variant_proto != nil {
		return
	}
	file_go_chromium_org_luci_resultdb_proto_v1_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_go_chromium_org_luci_resultdb_proto_v1_unique_test_variant_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UniqueTestVariant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_go_chromium_org_luci_resultdb_proto_v1_unique_test_variant_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_chromium_org_luci_resultdb_proto_v1_unique_test_variant_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_resultdb_proto_v1_unique_test_variant_proto_depIdxs,
		MessageInfos:      file_go_chromium_org_luci_resultdb_proto_v1_unique_test_variant_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_resultdb_proto_v1_unique_test_variant_proto = out.File
	file_go_chromium_org_luci_resultdb_proto_v1_unique_test_variant_proto_rawDesc = nil
	file_go_chromium_org_luci_resultdb_proto_v1_unique_test_variant_proto_goTypes = nil
	file_go_chromium_org_luci_resultdb_proto_v1_unique_test_variant_proto_depIdxs = nil
}
