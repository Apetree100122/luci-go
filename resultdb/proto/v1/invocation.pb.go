// Code generated by protoc-gen-go. DO NOT EDIT.
// source: go.chromium.org/luci/resultdb/proto/v1/invocation.proto

package resultspb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Invocation_State int32

const (
	// The default value. This value is used if the state is omitted.
	Invocation_STATE_UNSPECIFIED Invocation_State = 0
	// The invocation was created and accepts new results.
	Invocation_ACTIVE Invocation_State = 1
	// The invocation is finalized and contains all the results that the
	// associated computation was expected to compute; unlike INTERRUPTED state.
	//
	// The invocation is immutable and no longer accepts new results.
	Invocation_COMPLETED Invocation_State = 2
	// The invocation is finalized and does NOT contain all the results that the
	// associated computation was expected to compute.
	// The computation was interrupted prematurely.
	//
	// Such invocation should be discarded.
	// Often the associated computation is retried.
	//
	// The invocation is immutable and no longer accepts new results.
	Invocation_INTERRUPTED Invocation_State = 3
)

var Invocation_State_name = map[int32]string{
	0: "STATE_UNSPECIFIED",
	1: "ACTIVE",
	2: "COMPLETED",
	3: "INTERRUPTED",
}

var Invocation_State_value = map[string]int32{
	"STATE_UNSPECIFIED": 0,
	"ACTIVE":            1,
	"COMPLETED":         2,
	"INTERRUPTED":       3,
}

func (x Invocation_State) String() string {
	return proto.EnumName(Invocation_State_name, int32(x))
}

func (Invocation_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f10bfdd46378b04d, []int{0, 0}
}

// A conceptual container of results. Immutable once finalized.
// It represents all results of some computation; examples: swarming task,
// buildbucket build, CQ attempt.
// Composable: can include other invocations, see inclusion.proto.
type Invocation struct {
	// The resource name of this invocation. OUTPUT_ONLY.
	// Format: invocations/{INVOCATION_ID}
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Current state of the invocation. OUTPUT_ONLY.
	State Invocation_State `protobuf:"varint,2,opt,name=state,proto3,enum=luci.resultdb.Invocation_State" json:"state,omitempty"`
	// When the invocation was created. OUTPUT_ONLY.
	CreateTime *timestamp.Timestamp `protobuf:"bytes,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Invocation-level string key-value pairs.
	// A key can be repeated.
	Tags []*StringPair `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	// When the invocation was finalized, i.e. transitioned to COMPLETED or
	// INTERRUPTED state. OUTPUT_ONLY.
	// If this field is set, implies that the invocation is finalized.
	FinalizeTime *timestamp.Timestamp `protobuf:"bytes,5,opt,name=finalize_time,json=finalizeTime,proto3" json:"finalize_time,omitempty"`
	// Timestamp when the invocation will be forcefully finalized.
	// Can be extended with UpdateInvocation until finalized.
	Deadline *timestamp.Timestamp `protobuf:"bytes,6,opt,name=deadline,proto3" json:"deadline,omitempty"`
	// Base variant definition for test results in this invocation.
	// A particular test result can have additional key-value pairs.
	BaseTestVariantDef   *VariantDef `protobuf:"bytes,7,opt,name=base_test_variant_def,json=baseTestVariantDef,proto3" json:"base_test_variant_def,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Invocation) Reset()         { *m = Invocation{} }
func (m *Invocation) String() string { return proto.CompactTextString(m) }
func (*Invocation) ProtoMessage()    {}
func (*Invocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_f10bfdd46378b04d, []int{0}
}

func (m *Invocation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Invocation.Unmarshal(m, b)
}
func (m *Invocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Invocation.Marshal(b, m, deterministic)
}
func (m *Invocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Invocation.Merge(m, src)
}
func (m *Invocation) XXX_Size() int {
	return xxx_messageInfo_Invocation.Size(m)
}
func (m *Invocation) XXX_DiscardUnknown() {
	xxx_messageInfo_Invocation.DiscardUnknown(m)
}

var xxx_messageInfo_Invocation proto.InternalMessageInfo

func (m *Invocation) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Invocation) GetState() Invocation_State {
	if m != nil {
		return m.State
	}
	return Invocation_STATE_UNSPECIFIED
}

func (m *Invocation) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Invocation) GetTags() []*StringPair {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Invocation) GetFinalizeTime() *timestamp.Timestamp {
	if m != nil {
		return m.FinalizeTime
	}
	return nil
}

func (m *Invocation) GetDeadline() *timestamp.Timestamp {
	if m != nil {
		return m.Deadline
	}
	return nil
}

func (m *Invocation) GetBaseTestVariantDef() *VariantDef {
	if m != nil {
		return m.BaseTestVariantDef
	}
	return nil
}

// One inclusion edge in the invocation DAG.
//
// Invocations are composable: one invocation can include zero or more other
// invocations, representing a cumulative result. For example, a Buildbucket
// build invocation can include invocations of all child swarming tasks and
// represent overall result of the build, encapsulating the internal structure
// of the build from the client that just needs to load test results scoped
// to the build.
//
// The graph is directed and acyclic. There can be at most one edge between a
// given pair of invocations.
// Including invocation MUST NOT be finalized.
// Included invocation MAY be finalized.
type Inclusion struct {
	// Resource name, identifier of the inclusion. OUTPUT_ONLY.
	// Format:
	// invocations/{INCLUDING_INVOCATION_ID}/inclusions/{INCLUDED_INVOCATION_ID}
	// This implies that there can be only one direct edge between a given pair of
	// invocations
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Name of the included invocation.
	// FORMAT: invocations/{INCLUDED_INVOCATION_ID}.
	IncludedInvocation string `protobuf:"bytes,2,opt,name=included_invocation,json=includedInvocation,proto3" json:"included_invocation,omitempty"`
	// Name of the another inclusion that overrides this one. OUTPUT_ONLY.
	// If set, the invocation by this inclusion no longer influences the final
	// outcome of the including invocation. A typical example is a retry: the
	// new attempt overrides the previous one.
	//
	// Use recorder.OverrideInclusion to set this field.
	OverriddenBy string `protobuf:"bytes,3,opt,name=overridden_by,json=overriddenBy,proto3" json:"overridden_by,omitempty"`
	// Whether the included invocation is finalized before the including
	// invocation. OUTPUT_ONLY.
	// The formula for the field is
	//   included_inv.finalize_time < including_inv.finalize_time
	// If the included invocation is finalized, but the including invocation is
	// not yet, the edge is ready. If both are not finalized yet, the edge is not
	// ready *yet*, but its value may change over time, until the including
	// invocation is finalized.
	//
	// In practice, either
	// - an edge is ready because the including is expected to wait for its
	//   children to conclude its own result, OR
	// - it does not matter e.g. if the including was canceled and finalized
	//   prematurely.
	//
	// By default, QueryTestResults ignores un-ready inclusions.
	Ready                bool     `protobuf:"varint,4,opt,name=ready,proto3" json:"ready,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Inclusion) Reset()         { *m = Inclusion{} }
func (m *Inclusion) String() string { return proto.CompactTextString(m) }
func (*Inclusion) ProtoMessage()    {}
func (*Inclusion) Descriptor() ([]byte, []int) {
	return fileDescriptor_f10bfdd46378b04d, []int{1}
}

func (m *Inclusion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Inclusion.Unmarshal(m, b)
}
func (m *Inclusion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Inclusion.Marshal(b, m, deterministic)
}
func (m *Inclusion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Inclusion.Merge(m, src)
}
func (m *Inclusion) XXX_Size() int {
	return xxx_messageInfo_Inclusion.Size(m)
}
func (m *Inclusion) XXX_DiscardUnknown() {
	xxx_messageInfo_Inclusion.DiscardUnknown(m)
}

var xxx_messageInfo_Inclusion proto.InternalMessageInfo

func (m *Inclusion) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Inclusion) GetIncludedInvocation() string {
	if m != nil {
		return m.IncludedInvocation
	}
	return ""
}

func (m *Inclusion) GetOverriddenBy() string {
	if m != nil {
		return m.OverriddenBy
	}
	return ""
}

func (m *Inclusion) GetReady() bool {
	if m != nil {
		return m.Ready
	}
	return false
}

func init() {
	proto.RegisterEnum("luci.resultdb.Invocation_State", Invocation_State_name, Invocation_State_value)
	proto.RegisterType((*Invocation)(nil), "luci.resultdb.Invocation")
	proto.RegisterType((*Inclusion)(nil), "luci.resultdb.Inclusion")
}

func init() {
	proto.RegisterFile("go.chromium.org/luci/resultdb/proto/v1/invocation.proto", fileDescriptor_f10bfdd46378b04d)
}

var fileDescriptor_f10bfdd46378b04d = []byte{
	// 465 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0x71, 0xf3, 0x87, 0x66, 0xd2, 0x40, 0x58, 0xa8, 0x64, 0x72, 0xa9, 0x15, 0x2e, 0xbe,
	0xb0, 0x86, 0x54, 0xc0, 0xa1, 0x07, 0xd4, 0x26, 0x46, 0x32, 0x2a, 0x25, 0xda, 0xb8, 0x3d, 0x70,
	0xb1, 0xd6, 0xf6, 0xc4, 0xac, 0x64, 0x7b, 0xa3, 0xf5, 0x3a, 0x52, 0x78, 0x05, 0xde, 0x8f, 0xe7,
	0x41, 0xb6, 0x71, 0x03, 0x95, 0x50, 0x7b, 0xb3, 0xbf, 0xfd, 0x7d, 0xfb, 0xcd, 0xec, 0x0c, 0x7c,
	0x48, 0x24, 0x8d, 0xbe, 0x2b, 0x99, 0x89, 0x32, 0xa3, 0x52, 0x25, 0x4e, 0x5a, 0x46, 0xc2, 0x51,
	0x58, 0x94, 0xa9, 0x8e, 0x43, 0x67, 0xa3, 0xa4, 0x96, 0xce, 0xf6, 0xad, 0x23, 0xf2, 0xad, 0x8c,
	0xb8, 0x16, 0x32, 0xa7, 0xb5, 0x46, 0x46, 0x15, 0x48, 0x5b, 0x70, 0x72, 0x92, 0x48, 0x99, 0xa4,
	0xd8, 0x18, 0xc2, 0x72, 0xed, 0x68, 0x91, 0x61, 0xa1, 0x79, 0xb6, 0x69, 0xf8, 0xc9, 0xe9, 0x03,
	0x83, 0x22, 0x99, 0x65, 0x6d, 0xc8, 0xf4, 0x57, 0x07, 0xc0, 0xbb, 0x4d, 0x26, 0x04, 0xba, 0x39,
	0xcf, 0xd0, 0x34, 0x2c, 0xc3, 0x1e, 0xb0, 0xfa, 0x9b, 0xbc, 0x83, 0x5e, 0xa1, 0xb9, 0x46, 0xf3,
	0xc0, 0x32, 0xec, 0x27, 0xb3, 0x13, 0xfa, 0x4f, 0x5d, 0x74, 0xef, 0xa6, 0xab, 0x0a, 0x63, 0x0d,
	0x4d, 0xce, 0x60, 0x18, 0x29, 0xe4, 0x1a, 0x83, 0xaa, 0x50, 0xb3, 0x63, 0x19, 0xf6, 0x70, 0x36,
	0xa1, 0x4d, 0x17, 0xb4, 0xed, 0x82, 0xfa, 0x6d, 0x17, 0x0c, 0x1a, 0xbc, 0x12, 0xc8, 0x6b, 0xe8,
	0x6a, 0x9e, 0x14, 0x66, 0xd7, 0xea, 0xd8, 0xc3, 0xd9, 0xcb, 0x3b, 0x91, 0x2b, 0xad, 0x44, 0x9e,
	0x2c, 0xb9, 0x50, 0xac, 0xc6, 0xc8, 0x47, 0x18, 0xad, 0x45, 0xce, 0x53, 0xf1, 0xe3, 0x4f, 0x5a,
	0xef, 0xde, 0xb4, 0xa3, 0xd6, 0x50, 0xe7, 0xbd, 0x87, 0xc3, 0x18, 0x79, 0x9c, 0x8a, 0x1c, 0xcd,
	0xfe, 0xbd, 0xde, 0x5b, 0x96, 0x5c, 0xc2, 0x71, 0xc8, 0x0b, 0x0c, 0x34, 0x16, 0x3a, 0xd8, 0x72,
	0x25, 0x78, 0xae, 0x83, 0x18, 0xd7, 0xe6, 0xe3, 0xfa, 0x92, 0xbb, 0x85, 0xdf, 0x34, 0xc4, 0x02,
	0xd7, 0x8c, 0x54, 0x3e, 0x1f, 0x0b, 0xbd, 0xd7, 0xa6, 0x9f, 0xa1, 0x57, 0x3f, 0x21, 0x39, 0x86,
	0x67, 0x2b, 0xff, 0xdc, 0x77, 0x83, 0xeb, 0xab, 0xd5, 0xd2, 0x9d, 0x7b, 0x9f, 0x3c, 0x77, 0x31,
	0x7e, 0x44, 0x00, 0xfa, 0xe7, 0x73, 0xdf, 0xbb, 0x71, 0xc7, 0x06, 0x19, 0xc1, 0x60, 0xfe, 0xf5,
	0xcb, 0xf2, 0xd2, 0xf5, 0xdd, 0xc5, 0xf8, 0x80, 0x3c, 0x85, 0xa1, 0x77, 0xe5, 0xbb, 0x8c, 0x5d,
	0x2f, 0x2b, 0xa1, 0x33, 0xfd, 0x69, 0xc0, 0xc0, 0xcb, 0xa3, 0xb4, 0x2c, 0xfe, 0x37, 0x57, 0x07,
	0x9e, 0x8b, 0x0a, 0x88, 0x31, 0x0e, 0xf6, 0xcb, 0x57, 0x4f, 0x79, 0xc0, 0x48, 0x7b, 0xf4, 0xd7,
	0x72, 0xbc, 0x82, 0x91, 0xdc, 0xa2, 0x52, 0x22, 0x8e, 0x31, 0x0f, 0xc2, 0x5d, 0x3d, 0xd3, 0x01,
	0x3b, 0xda, 0x8b, 0x17, 0x3b, 0xf2, 0x02, 0x7a, 0x0a, 0x79, 0xbc, 0x33, 0xbb, 0x96, 0x61, 0x1f,
	0xb2, 0xe6, 0xe7, 0x62, 0xf6, 0xed, 0xcd, 0xc3, 0xb6, 0xf3, 0xac, 0x51, 0x8a, 0x4d, 0x18, 0xf6,
	0x6b, 0xed, 0xf4, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x11, 0xc8, 0x23, 0xc8, 0x41, 0x03, 0x00,
	0x00,
}
