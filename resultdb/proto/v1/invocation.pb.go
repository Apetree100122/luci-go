// Code generated by protoc-gen-go. DO NOT EDIT.
// source: go.chromium.org/luci/resultdb/proto/v1/invocation.proto

package resultspb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Invocation_State int32

const (
	// The default value. This value is used if the state is omitted.
	Invocation_STATE_UNSPECIFIED Invocation_State = 0
	// The invocation was created and accepts new results.
	Invocation_ACTIVE Invocation_State = 1
	// The invocation is finalized and contains all the results that the
	// associated computation was expected to compute; unlike INTERRUPTED state.
	//
	// The invocation is immutable and no longer accepts new results.
	Invocation_COMPLETED Invocation_State = 2
	// The invocation is finalized and does NOT contain all the results that the
	// associated computation was expected to compute.
	// The computation was interrupted prematurely.
	//
	// Such invocation should be discarded.
	// Often the associated computation is retried.
	//
	// The invocation is immutable and no longer accepts new results.
	Invocation_INTERRUPTED Invocation_State = 3
)

var Invocation_State_name = map[int32]string{
	0: "STATE_UNSPECIFIED",
	1: "ACTIVE",
	2: "COMPLETED",
	3: "INTERRUPTED",
}

var Invocation_State_value = map[string]int32{
	"STATE_UNSPECIFIED": 0,
	"ACTIVE":            1,
	"COMPLETED":         2,
	"INTERRUPTED":       3,
}

func (x Invocation_State) String() string {
	return proto.EnumName(Invocation_State_name, int32(x))
}

func (Invocation_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f10bfdd46378b04d, []int{0, 0}
}

// A conceptual container of results. Immutable once finalized.
// It represents all results of some computation; examples: swarming task,
// buildbucket build, CQ attempt.
// Composable: can include other invocations, see inclusion.proto.
type Invocation struct {
	// The resource name of this invocation.
	// Format: invocations/{INVOCATION_ID}
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Current state of the invocation.
	State Invocation_State `protobuf:"varint,2,opt,name=state,proto3,enum=luci.resultdb.Invocation_State" json:"state,omitempty"`
	// When the invocation was created.
	CreateTime *timestamp.Timestamp `protobuf:"bytes,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Invocation-level string key-value pairs.
	// A key can be repeated.
	Tags []*StringPair `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	// When the invocation was finalized, i.e. transitioned to COMPLETED or
	// INTERRUPTED state.
	// If this field is set, implies that the invocation is finalized.
	FinalizeTime *timestamp.Timestamp `protobuf:"bytes,5,opt,name=finalize_time,json=finalizeTime,proto3" json:"finalize_time,omitempty"`
	// Timestamp when the invocation will be forcefully finalized.
	// Can be extended with UpdateInvocation until finalized.
	Deadline *timestamp.Timestamp `protobuf:"bytes,6,opt,name=deadline,proto3" json:"deadline,omitempty"`
	// Variant definition pairs common for all test results in this invocation.
	// A particular test result can have additional key-value pairs.
	BaseTestVariantDef *VariantDef `protobuf:"bytes,7,opt,name=base_test_variant_def,json=baseTestVariantDef,proto3" json:"base_test_variant_def,omitempty"`
	// Set of invocations included into this one, as well as attributes
	// of the inclusion edges. Map key is an invocation name.
	//
	// Invocations are composable: one invocation can include zero or more other
	// invocations, representing a cumulative result. For example, a Buildbucket
	// build invocation can include invocations of all child swarming tasks and
	// represent overall result of the build, encapsulating the internal structure
	// of the build from the client that just needs to load test results scoped
	// to the build.
	//
	// The graph is directed.
	// There can be at most one edge between a given pair of invocations.
	//
	// QueryTestResults returns test results from the transitive closure of
	// invocations.
	//
	// Use Recorder.Include RPC to modify this field.
	Inclusions           map[string]*Invocation_InclusionAttrs `protobuf:"bytes,8,rep,name=inclusions,proto3" json:"inclusions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *Invocation) Reset()         { *m = Invocation{} }
func (m *Invocation) String() string { return proto.CompactTextString(m) }
func (*Invocation) ProtoMessage()    {}
func (*Invocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_f10bfdd46378b04d, []int{0}
}

func (m *Invocation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Invocation.Unmarshal(m, b)
}
func (m *Invocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Invocation.Marshal(b, m, deterministic)
}
func (m *Invocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Invocation.Merge(m, src)
}
func (m *Invocation) XXX_Size() int {
	return xxx_messageInfo_Invocation.Size(m)
}
func (m *Invocation) XXX_DiscardUnknown() {
	xxx_messageInfo_Invocation.DiscardUnknown(m)
}

var xxx_messageInfo_Invocation proto.InternalMessageInfo

func (m *Invocation) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Invocation) GetState() Invocation_State {
	if m != nil {
		return m.State
	}
	return Invocation_STATE_UNSPECIFIED
}

func (m *Invocation) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Invocation) GetTags() []*StringPair {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Invocation) GetFinalizeTime() *timestamp.Timestamp {
	if m != nil {
		return m.FinalizeTime
	}
	return nil
}

func (m *Invocation) GetDeadline() *timestamp.Timestamp {
	if m != nil {
		return m.Deadline
	}
	return nil
}

func (m *Invocation) GetBaseTestVariantDef() *VariantDef {
	if m != nil {
		return m.BaseTestVariantDef
	}
	return nil
}

func (m *Invocation) GetInclusions() map[string]*Invocation_InclusionAttrs {
	if m != nil {
		return m.Inclusions
	}
	return nil
}

// Attributes of a directed "includes" edge between two invocations.
type Invocation_InclusionAttrs struct {
	// Name of another included invocation that overrides this one.
	//
	// If set, this inclusion edge no longer influences the final outcome of the
	// including invocation.
	// A typical example is a retry: the new attempt overrides the previous one.
	//
	// Use IncludeRequest.override_invocation to set this field.
	OverriddenBy string `protobuf:"bytes,1,opt,name=overridden_by,json=overriddenBy,proto3" json:"overridden_by,omitempty"`
	// Whether the included invocation is finalized before the including one.
	// The formula for the field is
	//   included_inv.finalize_time < including_inv.finalize_time
	// If the included invocation is finalized, but the including invocation is
	// not yet, the edge is ready. If both are not finalized yet, the edge is not
	// ready *yet*, but its value may change over time, until the including
	// invocation is finalized.
	//
	// In practice, either
	// - an edge is ready because the including is expected to wait for its
	//   children to conclude its own result, OR
	// - it does not matter e.g. if the including was canceled and finalized
	//   prematurely.
	//
	// By default, QueryTestResults ignores un-ready inclusions.
	Ready                bool     `protobuf:"varint,2,opt,name=ready,proto3" json:"ready,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Invocation_InclusionAttrs) Reset()         { *m = Invocation_InclusionAttrs{} }
func (m *Invocation_InclusionAttrs) String() string { return proto.CompactTextString(m) }
func (*Invocation_InclusionAttrs) ProtoMessage()    {}
func (*Invocation_InclusionAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_f10bfdd46378b04d, []int{0, 0}
}

func (m *Invocation_InclusionAttrs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Invocation_InclusionAttrs.Unmarshal(m, b)
}
func (m *Invocation_InclusionAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Invocation_InclusionAttrs.Marshal(b, m, deterministic)
}
func (m *Invocation_InclusionAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Invocation_InclusionAttrs.Merge(m, src)
}
func (m *Invocation_InclusionAttrs) XXX_Size() int {
	return xxx_messageInfo_Invocation_InclusionAttrs.Size(m)
}
func (m *Invocation_InclusionAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_Invocation_InclusionAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_Invocation_InclusionAttrs proto.InternalMessageInfo

func (m *Invocation_InclusionAttrs) GetOverriddenBy() string {
	if m != nil {
		return m.OverriddenBy
	}
	return ""
}

func (m *Invocation_InclusionAttrs) GetReady() bool {
	if m != nil {
		return m.Ready
	}
	return false
}

func init() {
	proto.RegisterEnum("luci.resultdb.Invocation_State", Invocation_State_name, Invocation_State_value)
	proto.RegisterType((*Invocation)(nil), "luci.resultdb.Invocation")
	proto.RegisterMapType((map[string]*Invocation_InclusionAttrs)(nil), "luci.resultdb.Invocation.InclusionsEntry")
	proto.RegisterType((*Invocation_InclusionAttrs)(nil), "luci.resultdb.Invocation.InclusionAttrs")
}

func init() {
	proto.RegisterFile("go.chromium.org/luci/resultdb/proto/v1/invocation.proto", fileDescriptor_f10bfdd46378b04d)
}

var fileDescriptor_f10bfdd46378b04d = []byte{
	// 537 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xd1, 0x6f, 0x93, 0x50,
	0x14, 0xc6, 0x65, 0x8c, 0xba, 0x9d, 0xae, 0x5b, 0xbd, 0x71, 0x09, 0xf6, 0x65, 0xcd, 0x7c, 0xa9,
	0x0f, 0x82, 0x76, 0x89, 0x9a, 0x99, 0x98, 0xd0, 0x16, 0x13, 0x74, 0xce, 0x86, 0xb2, 0x3d, 0xf8,
	0x42, 0x2e, 0x70, 0xcb, 0x6e, 0x04, 0x6e, 0x73, 0xb9, 0x90, 0xd4, 0xbf, 0x76, 0x7f, 0x85, 0xcf,
	0x86, 0xcb, 0xa0, 0xda, 0xc4, 0xac, 0x6f, 0xdc, 0x8f, 0xdf, 0x39, 0xdf, 0x77, 0xe0, 0x5c, 0x78,
	0x1f, 0x33, 0x23, 0xbc, 0xe3, 0x2c, 0xa5, 0x45, 0x6a, 0x30, 0x1e, 0x9b, 0x49, 0x11, 0x52, 0x93,
	0x93, 0xbc, 0x48, 0x44, 0x14, 0x98, 0x2b, 0xce, 0x04, 0x33, 0xcb, 0xb7, 0x26, 0xcd, 0x4a, 0x16,
	0x62, 0x41, 0x59, 0x66, 0x48, 0x0d, 0xf5, 0x2a, 0xd0, 0x68, 0xc0, 0xc1, 0x59, 0xcc, 0x58, 0x9c,
	0x10, 0x13, 0xaf, 0xa8, 0xb9, 0xa4, 0x24, 0x89, 0xfc, 0x80, 0xdc, 0xe1, 0x92, 0x32, 0x5e, 0xf3,
	0x2d, 0x20, 0x4f, 0x41, 0xb1, 0x34, 0x05, 0x4d, 0x49, 0x2e, 0x70, 0xba, 0x7a, 0x00, 0x2e, 0x76,
	0x4c, 0x12, 0xb2, 0x34, 0x6d, 0x52, 0x9c, 0xff, 0xd6, 0x00, 0x9c, 0x36, 0x1a, 0x1a, 0xc0, 0x7e,
	0x86, 0x53, 0xa2, 0x2b, 0x43, 0x65, 0x74, 0x38, 0xe9, 0xdc, 0x5b, 0xea, 0xbd, 0xa5, 0xb9, 0x52,
	0x43, 0x97, 0xa0, 0xe5, 0x02, 0x0b, 0xa2, 0xef, 0x0d, 0x95, 0xd1, 0xf1, 0xf8, 0xcc, 0xf8, 0x67,
	0x00, 0x63, 0xd3, 0xc5, 0x58, 0x54, 0xd8, 0x44, 0xbd, 0xb7, 0x54, 0xb7, 0x2e, 0x41, 0x53, 0xe8,
	0x86, 0x9c, 0x60, 0x41, 0xfc, 0x2a, 0xb5, 0xae, 0x0e, 0x95, 0x51, 0x77, 0x3c, 0x30, 0xea, 0x91,
	0x8c, 0x66, 0x24, 0xc3, 0x6b, 0x46, 0x6a, 0xad, 0xa1, 0x2e, 0xab, 0x5e, 0xa0, 0xd7, 0xb0, 0x2f,
	0x70, 0x9c, 0xeb, 0xfb, 0x43, 0x75, 0xd4, 0x1d, 0xbf, 0xd8, 0xf2, 0x5f, 0x08, 0x4e, 0xb3, 0x78,
	0x8e, 0x29, 0x77, 0x25, 0x86, 0x66, 0xd0, 0x5b, 0xd2, 0x0c, 0x27, 0xf4, 0xd7, 0x83, 0xab, 0xf6,
	0xa8, 0xab, 0x8c, 0x7c, 0xd4, 0x54, 0x49, 0xd3, 0x77, 0x70, 0x10, 0x11, 0x1c, 0x25, 0x34, 0x23,
	0x7a, 0xe7, 0xb1, 0x06, 0x6e, 0xcb, 0xa2, 0x2b, 0x38, 0x0d, 0x70, 0x4e, 0x7c, 0x41, 0x72, 0xe1,
	0x97, 0x98, 0x53, 0x9c, 0x09, 0x3f, 0x22, 0x4b, 0xfd, 0xa9, 0x6c, 0xb2, 0x9d, 0xfe, 0xb6, 0x26,
	0x66, 0x64, 0xe9, 0xa2, 0xaa, 0xce, 0x23, 0xb9, 0xd8, 0x68, 0xe8, 0x1a, 0x80, 0x66, 0x61, 0x52,
	0xe4, 0x94, 0x65, 0xb9, 0x7e, 0x20, 0x3f, 0xc0, 0xab, 0xff, 0xff, 0x00, 0xa7, 0x65, 0xed, 0x4c,
	0xf0, 0x75, 0x3d, 0xd7, 0x5f, 0x1d, 0x06, 0x5f, 0xe1, 0xb8, 0x65, 0x2c, 0x21, 0x78, 0x8e, 0x5e,
	0x42, 0x8f, 0x95, 0x84, 0x73, 0x1a, 0x45, 0x24, 0xf3, 0x83, 0x75, 0xbd, 0x02, 0xee, 0xd1, 0x46,
	0x9c, 0xac, 0xd1, 0x73, 0xd0, 0x38, 0xc1, 0xd1, 0x5a, 0xae, 0xc0, 0x81, 0x5b, 0x1f, 0x06, 0x31,
	0x9c, 0x6c, 0x19, 0xa2, 0x3e, 0xa8, 0x3f, 0x49, 0xd3, 0xa3, 0x7a, 0x44, 0x9f, 0x40, 0x2b, 0x71,
	0x52, 0xd4, 0xdb, 0xd3, 0x1d, 0x8f, 0x76, 0x08, 0x2f, 0x83, 0xb9, 0x75, 0xd9, 0xe5, 0xde, 0x07,
	0xe5, 0xfc, 0x0b, 0x68, 0x72, 0xb5, 0xd0, 0x29, 0x3c, 0x5b, 0x78, 0x96, 0x67, 0xfb, 0x37, 0xd7,
	0x8b, 0xb9, 0x3d, 0x75, 0x3e, 0x3b, 0xf6, 0xac, 0xff, 0x04, 0x01, 0x74, 0xac, 0xa9, 0xe7, 0xdc,
	0xda, 0x7d, 0x05, 0xf5, 0xe0, 0x70, 0xfa, 0xfd, 0xdb, 0xfc, 0xca, 0xf6, 0xec, 0x59, 0x7f, 0x0f,
	0x9d, 0x40, 0xd7, 0xb9, 0xf6, 0x6c, 0xd7, 0xbd, 0x99, 0x57, 0x82, 0x3a, 0x19, 0xff, 0x78, 0xb3,
	0xdb, 0x7d, 0xf9, 0x58, 0x2b, 0xf9, 0x2a, 0x08, 0x3a, 0x52, 0xbb, 0xf8, 0x13, 0x00, 0x00, 0xff,
	0xff, 0x43, 0x12, 0x9a, 0xd9, 0xf4, 0x03, 0x00, 0x00,
}
