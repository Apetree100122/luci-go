// Code generated by protoc-gen-go. DO NOT EDIT.
// source: go.chromium.org/luci/resultdb/proto/rpc/v1/invocation_processing.proto

package rpcpb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// BigQueryExport indicates that results in this invocation should be exported
// to BigQuery after finalization.
type BigQueryExport struct {
	// Name of the BigQuery project.
	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// Name of the BigQuery Dataset.
	Dataset string `protobuf:"bytes,2,opt,name=dataset,proto3" json:"dataset,omitempty"`
	// Name of the BigQuery Table.
	Table                string                      `protobuf:"bytes,3,opt,name=table,proto3" json:"table,omitempty"`
	TestResults          *BigQueryExport_TestResults `protobuf:"bytes,4,opt,name=test_results,json=testResults,proto3" json:"test_results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *BigQueryExport) Reset()         { *m = BigQueryExport{} }
func (m *BigQueryExport) String() string { return proto.CompactTextString(m) }
func (*BigQueryExport) ProtoMessage()    {}
func (*BigQueryExport) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd796ef82d025389, []int{0}
}

func (m *BigQueryExport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BigQueryExport.Unmarshal(m, b)
}
func (m *BigQueryExport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BigQueryExport.Marshal(b, m, deterministic)
}
func (m *BigQueryExport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BigQueryExport.Merge(m, src)
}
func (m *BigQueryExport) XXX_Size() int {
	return xxx_messageInfo_BigQueryExport.Size(m)
}
func (m *BigQueryExport) XXX_DiscardUnknown() {
	xxx_messageInfo_BigQueryExport.DiscardUnknown(m)
}

var xxx_messageInfo_BigQueryExport proto.InternalMessageInfo

func (m *BigQueryExport) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *BigQueryExport) GetDataset() string {
	if m != nil {
		return m.Dataset
	}
	return ""
}

func (m *BigQueryExport) GetTable() string {
	if m != nil {
		return m.Table
	}
	return ""
}

func (m *BigQueryExport) GetTestResults() *BigQueryExport_TestResults {
	if m != nil {
		return m.TestResults
	}
	return nil
}

// TestResultExport indicates that test results should be exported.
type BigQueryExport_TestResults struct {
	// Use predicate to query test results that should be exported to
	// BigQuery table.
	Predicate            *TestResultPredicate `protobuf:"bytes,1,opt,name=predicate,proto3" json:"predicate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *BigQueryExport_TestResults) Reset()         { *m = BigQueryExport_TestResults{} }
func (m *BigQueryExport_TestResults) String() string { return proto.CompactTextString(m) }
func (*BigQueryExport_TestResults) ProtoMessage()    {}
func (*BigQueryExport_TestResults) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd796ef82d025389, []int{0, 0}
}

func (m *BigQueryExport_TestResults) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BigQueryExport_TestResults.Unmarshal(m, b)
}
func (m *BigQueryExport_TestResults) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BigQueryExport_TestResults.Marshal(b, m, deterministic)
}
func (m *BigQueryExport_TestResults) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BigQueryExport_TestResults.Merge(m, src)
}
func (m *BigQueryExport_TestResults) XXX_Size() int {
	return xxx_messageInfo_BigQueryExport_TestResults.Size(m)
}
func (m *BigQueryExport_TestResults) XXX_DiscardUnknown() {
	xxx_messageInfo_BigQueryExport_TestResults.DiscardUnknown(m)
}

var xxx_messageInfo_BigQueryExport_TestResults proto.InternalMessageInfo

func (m *BigQueryExport_TestResults) GetPredicate() *TestResultPredicate {
	if m != nil {
		return m.Predicate
	}
	return nil
}

func init() {
	proto.RegisterType((*BigQueryExport)(nil), "luci.resultdb.rpc.v1.BigQueryExport")
	proto.RegisterType((*BigQueryExport_TestResults)(nil), "luci.resultdb.rpc.v1.BigQueryExport.TestResults")
}

func init() {
	proto.RegisterFile("go.chromium.org/luci/resultdb/proto/rpc/v1/invocation_processing.proto", fileDescriptor_dd796ef82d025389)
}

var fileDescriptor_dd796ef82d025389 = []byte{
	// 296 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x90, 0x31, 0x4f, 0xf3, 0x30,
	0x10, 0x86, 0xd5, 0xf6, 0xfb, 0x40, 0x75, 0x10, 0x43, 0xc4, 0x10, 0x2a, 0x21, 0x2a, 0xa6, 0xb2,
	0xd8, 0x6d, 0xd9, 0x60, 0xa2, 0x12, 0xb0, 0x42, 0x40, 0x0c, 0x2c, 0x95, 0xe3, 0x1c, 0xae, 0x51,
	0xda, 0xb3, 0xce, 0x97, 0x08, 0xfe, 0x08, 0xbf, 0x8f, 0x9f, 0x82, 0xda, 0x50, 0x52, 0xa4, 0x0e,
	0x30, 0xfa, 0x7d, 0xfc, 0xe8, 0xde, 0x3b, 0x71, 0x6d, 0x51, 0x9a, 0x19, 0xe1, 0xdc, 0x95, 0x73,
	0x89, 0x64, 0x55, 0x51, 0x1a, 0xa7, 0x08, 0x42, 0x59, 0x70, 0x9e, 0x29, 0x4f, 0xc8, 0xa8, 0xc8,
	0x1b, 0x55, 0x8d, 0x94, 0x5b, 0x54, 0x68, 0x34, 0x3b, 0x5c, 0x4c, 0x3d, 0xa1, 0x81, 0x10, 0xdc,
	0xc2, 0xca, 0xd5, 0x97, 0xf8, 0x60, 0xe9, 0xc9, 0xb5, 0x27, 0xc9, 0x1b, 0x59, 0x8d, 0x7a, 0xc7,
	0x16, 0xd1, 0x16, 0xa0, 0xb4, 0x77, 0xea, 0xd9, 0x41, 0x91, 0x4f, 0x33, 0x98, 0xe9, 0xca, 0x21,
	0xd5, 0x5a, 0xef, 0xfc, 0x0f, 0xe3, 0x3d, 0x41, 0xee, 0x8c, 0x66, 0xa8, 0xdd, 0x93, 0xf7, 0xb6,
	0xd8, 0x9f, 0x38, 0x7b, 0x57, 0x02, 0xbd, 0x5d, 0xbd, 0x7a, 0x24, 0x8e, 0x8f, 0xc4, 0xae, 0x27,
	0x7c, 0x01, 0xc3, 0x49, 0xab, 0xdf, 0x1a, 0x74, 0x27, 0x9d, 0x8f, 0xcb, 0x76, 0xba, 0xce, 0x96,
	0x38, 0xd7, 0xac, 0x03, 0x70, 0xd2, 0xde, 0xc0, 0x5f, 0x59, 0x7c, 0x28, 0xfe, 0xb3, 0xce, 0x0a,
	0x48, 0x3a, 0x0d, 0xac, 0x93, 0xf8, 0x5e, 0xec, 0x31, 0x04, 0x9e, 0xd6, 0xcd, 0x42, 0xf2, 0xaf,
	0xdf, 0x1a, 0x44, 0xe3, 0xa1, 0xdc, 0xb6, 0xb5, 0xfc, 0x59, 0x4a, 0x3e, 0x40, 0xe0, 0xb4, 0xf6,
	0xd2, 0x88, 0x9b, 0x47, 0xef, 0x51, 0x44, 0x1b, 0x2c, 0xbe, 0x11, 0xdd, 0xef, 0x15, 0x57, 0xf5,
	0xa3, 0xf1, 0xe9, 0xf6, 0x01, 0x8d, 0x75, 0xbb, 0x16, 0xd2, 0xc6, 0x9d, 0x8c, 0x9f, 0x86, 0xbf,
	0x3f, 0xeb, 0x05, 0x79, 0xe3, 0xb3, 0x6c, 0x67, 0x95, 0x9d, 0x7d, 0x06, 0x00, 0x00, 0xff, 0xff,
	0x42, 0x80, 0x38, 0x90, 0x10, 0x02, 0x00, 0x00,
}
