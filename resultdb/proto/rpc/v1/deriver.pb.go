// Code generated by protoc-gen-go. DO NOT EDIT.
// source: go.chromium.org/luci/resultdb/proto/rpc/v1/deriver.proto

package rpcpb

import prpc "go.chromium.org/luci/grpc/prpc"

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Used a google.rpc.PreconditionFailure.Violation.type returned as a Status
// detail by DeriveChromiumInvocation when responding with a PreconditionFailure status
// code.
type DeriveChromiumInvocationPreconditionFailureType int32

const (
	DeriveChromiumInvocationPreconditionFailureType_DERIVE_CHROMIUM_INVOCATION_PRECONDITION_FAILURE_TYPE_UNSPECIFIED DeriveChromiumInvocationPreconditionFailureType = 0
	DeriveChromiumInvocationPreconditionFailureType_INCOMPLETE_CHROMIUM_SWARMING_TASK                                DeriveChromiumInvocationPreconditionFailureType = 1
)

var DeriveChromiumInvocationPreconditionFailureType_name = map[int32]string{
	0: "DERIVE_CHROMIUM_INVOCATION_PRECONDITION_FAILURE_TYPE_UNSPECIFIED",
	1: "INCOMPLETE_CHROMIUM_SWARMING_TASK",
}

var DeriveChromiumInvocationPreconditionFailureType_value = map[string]int32{
	"DERIVE_CHROMIUM_INVOCATION_PRECONDITION_FAILURE_TYPE_UNSPECIFIED": 0,
	"INCOMPLETE_CHROMIUM_SWARMING_TASK":                                1,
}

func (x DeriveChromiumInvocationPreconditionFailureType) String() string {
	return proto.EnumName(DeriveChromiumInvocationPreconditionFailureType_name, int32(x))
}

func (DeriveChromiumInvocationPreconditionFailureType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00f5345714563a65, []int{0}
}

// A request message for DeriveChromiumInvocation RPC.
type DeriveChromiumInvocationRequest struct {
	// Derive the invocation from the Swarming task.
	SwarmingTask         *DeriveChromiumInvocationRequest_SwarmingTask `protobuf:"bytes,1,opt,name=swarming_task,json=swarmingTask,proto3" json:"swarming_task,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                      `json:"-"`
	XXX_unrecognized     []byte                                        `json:"-"`
	XXX_sizecache        int32                                         `json:"-"`
}

func (m *DeriveChromiumInvocationRequest) Reset()         { *m = DeriveChromiumInvocationRequest{} }
func (m *DeriveChromiumInvocationRequest) String() string { return proto.CompactTextString(m) }
func (*DeriveChromiumInvocationRequest) ProtoMessage()    {}
func (*DeriveChromiumInvocationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00f5345714563a65, []int{0}
}

func (m *DeriveChromiumInvocationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeriveChromiumInvocationRequest.Unmarshal(m, b)
}
func (m *DeriveChromiumInvocationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeriveChromiumInvocationRequest.Marshal(b, m, deterministic)
}
func (m *DeriveChromiumInvocationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeriveChromiumInvocationRequest.Merge(m, src)
}
func (m *DeriveChromiumInvocationRequest) XXX_Size() int {
	return xxx_messageInfo_DeriveChromiumInvocationRequest.Size(m)
}
func (m *DeriveChromiumInvocationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeriveChromiumInvocationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeriveChromiumInvocationRequest proto.InternalMessageInfo

func (m *DeriveChromiumInvocationRequest) GetSwarmingTask() *DeriveChromiumInvocationRequest_SwarmingTask {
	if m != nil {
		return m.SwarmingTask
	}
	return nil
}

// Identifies a swarming task.
type DeriveChromiumInvocationRequest_SwarmingTask struct {
	// Swarming host of task.
	Hostname string `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	// ID of swarming task to process and insert.
	//
	// The task should have tags:
	//  ninja_target: the fully-qualified ninja target used to compile the test
	//    binary used in the task, e.g. "//chrome/test:browser_tests".
	//  bucket: the LUCI bucket of the parent build
	//  buildername: the LUCI builder of the parent build.
	//  test_suite: a value of "test" property in any of the JSON files in
	//    https://chromium.googlesource.com/chromium/src/+/master/testing/buildbot/
	//    used to create the swarming task.
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeriveChromiumInvocationRequest_SwarmingTask) Reset() {
	*m = DeriveChromiumInvocationRequest_SwarmingTask{}
}
func (m *DeriveChromiumInvocationRequest_SwarmingTask) String() string {
	return proto.CompactTextString(m)
}
func (*DeriveChromiumInvocationRequest_SwarmingTask) ProtoMessage() {}
func (*DeriveChromiumInvocationRequest_SwarmingTask) Descriptor() ([]byte, []int) {
	return fileDescriptor_00f5345714563a65, []int{0, 0}
}

func (m *DeriveChromiumInvocationRequest_SwarmingTask) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeriveChromiumInvocationRequest_SwarmingTask.Unmarshal(m, b)
}
func (m *DeriveChromiumInvocationRequest_SwarmingTask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeriveChromiumInvocationRequest_SwarmingTask.Marshal(b, m, deterministic)
}
func (m *DeriveChromiumInvocationRequest_SwarmingTask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeriveChromiumInvocationRequest_SwarmingTask.Merge(m, src)
}
func (m *DeriveChromiumInvocationRequest_SwarmingTask) XXX_Size() int {
	return xxx_messageInfo_DeriveChromiumInvocationRequest_SwarmingTask.Size(m)
}
func (m *DeriveChromiumInvocationRequest_SwarmingTask) XXX_DiscardUnknown() {
	xxx_messageInfo_DeriveChromiumInvocationRequest_SwarmingTask.DiscardUnknown(m)
}

var xxx_messageInfo_DeriveChromiumInvocationRequest_SwarmingTask proto.InternalMessageInfo

func (m *DeriveChromiumInvocationRequest_SwarmingTask) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *DeriveChromiumInvocationRequest_SwarmingTask) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterEnum("luci.resultdb.rpc.v1.DeriveChromiumInvocationPreconditionFailureType", DeriveChromiumInvocationPreconditionFailureType_name, DeriveChromiumInvocationPreconditionFailureType_value)
	proto.RegisterType((*DeriveChromiumInvocationRequest)(nil), "luci.resultdb.rpc.v1.DeriveChromiumInvocationRequest")
	proto.RegisterType((*DeriveChromiumInvocationRequest_SwarmingTask)(nil), "luci.resultdb.rpc.v1.DeriveChromiumInvocationRequest.SwarmingTask")
}

func init() {
	proto.RegisterFile("go.chromium.org/luci/resultdb/proto/rpc/v1/deriver.proto", fileDescriptor_00f5345714563a65)
}

var fileDescriptor_00f5345714563a65 = []byte{
	// 405 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0xcb, 0x6e, 0xd4, 0x30,
	0x18, 0x85, 0x9b, 0x20, 0x71, 0x31, 0x45, 0xaa, 0x0c, 0x8b, 0x51, 0x36, 0x53, 0x2a, 0x21, 0x21,
	0x16, 0x36, 0x1d, 0x84, 0x84, 0xd4, 0x0d, 0x99, 0xc4, 0x03, 0x16, 0xcd, 0x45, 0x49, 0xa6, 0x08,
	0x36, 0x96, 0x93, 0x98, 0x8c, 0xd5, 0x24, 0x0e, 0xce, 0x05, 0xb1, 0xe3, 0x49, 0x78, 0x2b, 0xf6,
	0x3c, 0x0a, 0x6a, 0x66, 0x68, 0x67, 0x31, 0x23, 0x2e, 0x3b, 0xfb, 0xf8, 0x9c, 0xf3, 0x7f, 0xb2,
	0x7e, 0xf0, 0xaa, 0x50, 0x28, 0x5b, 0x69, 0x55, 0xc9, 0xbe, 0x42, 0x4a, 0x17, 0xb8, 0xec, 0x33,
	0x89, 0xb5, 0x68, 0xfb, 0xb2, 0xcb, 0x53, 0xdc, 0x68, 0xd5, 0x29, 0xac, 0x9b, 0x0c, 0x0f, 0xa7,
	0x38, 0x17, 0x5a, 0x0e, 0x42, 0xa3, 0x51, 0x84, 0x8f, 0xae, 0x9c, 0xe8, 0xb7, 0x13, 0xe9, 0x26,
	0x43, 0xc3, 0xa9, 0x35, 0x2d, 0x94, 0x2a, 0x4a, 0x81, 0x79, 0x23, 0xf1, 0x27, 0x29, 0xca, 0x9c,
	0xa5, 0x62, 0xc5, 0x07, 0xa9, 0x36, 0x31, 0xeb, 0xec, 0x1f, 0x06, 0xca, 0x7a, 0x50, 0x19, 0xef,
	0xa4, 0xaa, 0xd7, 0xe1, 0x93, 0x1f, 0x06, 0x98, 0xba, 0x23, 0x85, 0xb3, 0xa9, 0xa0, 0xd7, 0x96,
	0x48, 0x7c, 0xee, 0x45, 0xdb, 0xc1, 0x12, 0x3c, 0x68, 0xbf, 0x70, 0x5d, 0xc9, 0xba, 0x60, 0x1d,
	0x6f, 0x2f, 0x27, 0xc6, 0xb1, 0xf1, 0xf4, 0xfe, 0x6c, 0x8e, 0x76, 0xf1, 0xa2, 0x3f, 0xb4, 0xa1,
	0x78, 0x53, 0x95, 0xf0, 0xf6, 0x72, 0x7e, 0xeb, 0xa7, 0x6d, 0x46, 0x87, 0xed, 0x96, 0x64, 0xb9,
	0xe0, 0x70, 0xdb, 0x02, 0xa7, 0xe0, 0xee, 0x4a, 0xb5, 0x5d, 0xcd, 0x2b, 0x31, 0x0e, 0xbe, 0xb7,
	0x0e, 0x5d, 0x8b, 0xf0, 0x21, 0x30, 0x65, 0x3e, 0x31, 0x6f, 0x9e, 0x4c, 0x99, 0x3f, 0xfb, 0x6e,
	0x00, 0xbc, 0x8f, 0x24, 0xd4, 0x22, 0x53, 0x75, 0x2e, 0xaf, 0xce, 0x0b, 0x2e, 0xcb, 0x5e, 0x8b,
	0xe4, 0x6b, 0x23, 0xa0, 0x0b, 0x5e, 0xbb, 0x24, 0xa2, 0x17, 0x84, 0x39, 0x6f, 0xa3, 0xc0, 0xa3,
	0x4b, 0x8f, 0x51, 0xff, 0x22, 0x70, 0xec, 0x84, 0x06, 0x3e, 0x0b, 0x23, 0xe2, 0x04, 0xbe, 0x4b,
	0xc7, 0xcb, 0xc2, 0xa6, 0xe7, 0xcb, 0x88, 0xb0, 0xe4, 0x43, 0x48, 0xd8, 0xd2, 0x8f, 0x43, 0xe2,
	0xd0, 0x05, 0x25, 0xee, 0xd1, 0x01, 0x7c, 0x02, 0x1e, 0x53, 0xdf, 0x09, 0xbc, 0xf0, 0x9c, 0x24,
	0x5b, 0x4d, 0xf1, 0x7b, 0x3b, 0xf2, 0xa8, 0xff, 0x86, 0x25, 0x76, 0xfc, 0xee, 0xc8, 0x98, 0x7d,
	0x33, 0xc0, 0x9d, 0x35, 0xa0, 0x86, 0x3d, 0x98, 0xec, 0x63, 0x85, 0x2f, 0xff, 0xeb, 0x97, 0xad,
	0xe3, 0xdd, 0xb1, 0x1b, 0xe3, 0xc9, 0xc1, 0x7c, 0xf6, 0xf1, 0xf9, 0xdf, 0xaf, 0xce, 0x99, 0x6e,
	0xb2, 0x26, 0x4d, 0x6f, 0x8f, 0xda, 0x8b, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x54, 0x64, 0xcc,
	0x80, 0xe6, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DeriverClient is the client API for Deriver service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DeriverClient interface {
	// Derives an invocation and test results from a Chromium swarming task.
	// Returns the derived invocation; test results should retrieved using
	// ResultDB.ListTestResults or ResultDB.QueryTestResults.
	DeriveChromiumInvocation(ctx context.Context, in *DeriveChromiumInvocationRequest, opts ...grpc.CallOption) (*Invocation, error)
}
type deriverPRPCClient struct {
	client *prpc.Client
}

func NewDeriverPRPCClient(client *prpc.Client) DeriverClient {
	return &deriverPRPCClient{client}
}

func (c *deriverPRPCClient) DeriveChromiumInvocation(ctx context.Context, in *DeriveChromiumInvocationRequest, opts ...grpc.CallOption) (*Invocation, error) {
	out := new(Invocation)
	err := c.client.Call(ctx, "luci.resultdb.rpc.v1.Deriver", "DeriveChromiumInvocation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type deriverClient struct {
	cc grpc.ClientConnInterface
}

func NewDeriverClient(cc grpc.ClientConnInterface) DeriverClient {
	return &deriverClient{cc}
}

func (c *deriverClient) DeriveChromiumInvocation(ctx context.Context, in *DeriveChromiumInvocationRequest, opts ...grpc.CallOption) (*Invocation, error) {
	out := new(Invocation)
	err := c.cc.Invoke(ctx, "/luci.resultdb.rpc.v1.Deriver/DeriveChromiumInvocation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DeriverServer is the server API for Deriver service.
type DeriverServer interface {
	// Derives an invocation and test results from a Chromium swarming task.
	// Returns the derived invocation; test results should retrieved using
	// ResultDB.ListTestResults or ResultDB.QueryTestResults.
	DeriveChromiumInvocation(context.Context, *DeriveChromiumInvocationRequest) (*Invocation, error)
}

// UnimplementedDeriverServer can be embedded to have forward compatible implementations.
type UnimplementedDeriverServer struct {
}

func (*UnimplementedDeriverServer) DeriveChromiumInvocation(ctx context.Context, req *DeriveChromiumInvocationRequest) (*Invocation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeriveChromiumInvocation not implemented")
}

func RegisterDeriverServer(s prpc.Registrar, srv DeriverServer) {
	s.RegisterService(&_Deriver_serviceDesc, srv)
}

func _Deriver_DeriveChromiumInvocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeriveChromiumInvocationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeriverServer).DeriveChromiumInvocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luci.resultdb.rpc.v1.Deriver/DeriveChromiumInvocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeriverServer).DeriveChromiumInvocation(ctx, req.(*DeriveChromiumInvocationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Deriver_serviceDesc = grpc.ServiceDesc{
	ServiceName: "luci.resultdb.rpc.v1.Deriver",
	HandlerType: (*DeriverServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DeriveChromiumInvocation",
			Handler:    _Deriver_DeriveChromiumInvocation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "go.chromium.org/luci/resultdb/proto/rpc/v1/deriver.proto",
}
