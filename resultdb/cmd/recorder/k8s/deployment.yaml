# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# TODO: separate out deployment stages and refactor configs as appropriate

apiVersion: v1
kind: Service
metadata:
  name: recorder
  labels:
    app: recorder
spec:
  type: NodePort
  selector:
    app: recorder
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: recorder
  labels:
    app: recorder
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: recorder
    spec:
      volumes:
      - name: root-luci-secret
        secret:
          secretName: root-luci-secret
      containers:
      - name: recorder
        image: gcr.io/chops-public-images-dev/luci/resultdb/recorder:dev
        imagePullPolicy: Always
        args: [
          "-prod",
          "-cloud-project", "luci-resultdb-dev",
          "-http-addr", ":8800",
          "-admin-addr", ":8900",
          "-auth-service-host", "chrome-infra-auth-dev.appspot.com",
          "-service-account-json", ":gce",
          "-root-secret-path", "/secrets/root-luci-secret/secret.json",
          "-ts-mon-account", "app-engine-metric-publishers@prodx-mon-chrome-infra.google.com.iam.gserviceaccount.com",
          "-ts-mon-service-name", "luci-resultdb-dev",
          "-ts-mon-job-name", "luci-resultdb-dev-recorder",
        ]
        volumeMounts:
        - name: root-luci-secret
          mountPath: '/secrets/root-luci-secret'
          readOnly: true
        ports:
        - name: http
          containerPort: 8800
