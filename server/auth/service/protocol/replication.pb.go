// Code generated by protoc-gen-go. DO NOT EDIT.
// source: components/auth/proto/replication.proto

package protocol

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Status codes.
type ServiceLinkResponse_Status int32

const (
	// The service is now linked and primary will be pushing updates to it.
	ServiceLinkResponse_SUCCESS ServiceLinkResponse_Status = 0
	// Primary do not replies.
	ServiceLinkResponse_TRANSPORT_ERROR ServiceLinkResponse_Status = 1
	// Linking ticket is invalid or expired.
	ServiceLinkResponse_BAD_TICKET ServiceLinkResponse_Status = 2
	// Linking ticket was generated for another app, not the calling one.
	ServiceLinkResponse_AUTH_ERROR ServiceLinkResponse_Status = 3
)

var ServiceLinkResponse_Status_name = map[int32]string{
	0: "SUCCESS",
	1: "TRANSPORT_ERROR",
	2: "BAD_TICKET",
	3: "AUTH_ERROR",
}

var ServiceLinkResponse_Status_value = map[string]int32{
	"SUCCESS":         0,
	"TRANSPORT_ERROR": 1,
	"BAD_TICKET":      2,
	"AUTH_ERROR":      3,
}

func (x ServiceLinkResponse_Status) String() string {
	return proto.EnumName(ServiceLinkResponse_Status_name, int32(x))
}

func (ServiceLinkResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_50ffc9710d2c04e3, []int{2, 0}
}

// Overall status of the operation.
type ReplicationPushResponse_Status int32

const (
	// Replica accepted the push request and updated its copy of auth db.
	ReplicationPushResponse_APPLIED ReplicationPushResponse_Status = 0
	// Replica has a newer version of AuthDB, the push request is skipped.
	ReplicationPushResponse_SKIPPED ReplicationPushResponse_Status = 1
	// Non fatal error happened, the push request may be retried.
	ReplicationPushResponse_TRANSIENT_ERROR ReplicationPushResponse_Status = 2
	// Fatal error happened, the push request must not be retried.
	ReplicationPushResponse_FATAL_ERROR ReplicationPushResponse_Status = 3
)

var ReplicationPushResponse_Status_name = map[int32]string{
	0: "APPLIED",
	1: "SKIPPED",
	2: "TRANSIENT_ERROR",
	3: "FATAL_ERROR",
}

var ReplicationPushResponse_Status_value = map[string]int32{
	"APPLIED":         0,
	"SKIPPED":         1,
	"TRANSIENT_ERROR": 2,
	"FATAL_ERROR":     3,
}

func (x ReplicationPushResponse_Status) String() string {
	return proto.EnumName(ReplicationPushResponse_Status_name, int32(x))
}

func (ReplicationPushResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_50ffc9710d2c04e3, []int{11, 0}
}

// Error codes, for TRANSIENT_ERROR and FATAL_ERROR statuses.
type ReplicationPushResponse_ErrorCode int32

const (
	// Some unrecognized error.
	ReplicationPushResponse_ERROR_UNKNOWN ReplicationPushResponse_ErrorCode = 0
	// Trying to push an update to service that is not a replica.
	ReplicationPushResponse_NOT_A_REPLICA ReplicationPushResponse_ErrorCode = 1
	// Replica doesn't know about the service that pushing the update.
	ReplicationPushResponse_FORBIDDEN ReplicationPushResponse_ErrorCode = 2
	// Signature headers are missing.
	ReplicationPushResponse_MISSING_SIGNATURE ReplicationPushResponse_ErrorCode = 3
	// Signature is not valid.
	ReplicationPushResponse_BAD_SIGNATURE ReplicationPushResponse_ErrorCode = 4
	// Format of the request is not valid.
	ReplicationPushResponse_BAD_REQUEST ReplicationPushResponse_ErrorCode = 5
)

var ReplicationPushResponse_ErrorCode_name = map[int32]string{
	0: "ERROR_UNKNOWN",
	1: "NOT_A_REPLICA",
	2: "FORBIDDEN",
	3: "MISSING_SIGNATURE",
	4: "BAD_SIGNATURE",
	5: "BAD_REQUEST",
}

var ReplicationPushResponse_ErrorCode_value = map[string]int32{
	"ERROR_UNKNOWN":     0,
	"NOT_A_REPLICA":     1,
	"FORBIDDEN":         2,
	"MISSING_SIGNATURE": 3,
	"BAD_SIGNATURE":     4,
	"BAD_REQUEST":       5,
}

func (x ReplicationPushResponse_ErrorCode) String() string {
	return proto.EnumName(ReplicationPushResponse_ErrorCode_name, int32(x))
}

func (ReplicationPushResponse_ErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_50ffc9710d2c04e3, []int{11, 1}
}

// Generated by Primary, passed to Replica to initiate linking process.
type ServiceLinkTicket struct {
	// GAE application ID of Primary that generated this ticket. Replica will send
	// ServiceLinkRequest to this service when it processes the ticket.
	PrimaryId string `protobuf:"bytes,1,opt,name=primary_id,json=primaryId,proto3" json:"primary_id,omitempty"`
	// URL to the root page of a primary service, i.e. https://<...>.appspot.com.
	// Useful when testing on dev appserver and on non-default version.
	PrimaryUrl string `protobuf:"bytes,2,opt,name=primary_url,json=primaryUrl,proto3" json:"primary_url,omitempty"`
	// Identity of a user that generated this ticket.
	GeneratedBy string `protobuf:"bytes,3,opt,name=generated_by,json=generatedBy,proto3" json:"generated_by,omitempty"`
	// Opaque blob passed back to Primary in ServiceLinkRequest. Its exact
	// structure is an implementation detail of Primary. It contains app_id of
	// a replica this ticket is intended for, timestamp and HMAC tag.
	Ticket               []byte   `protobuf:"bytes,4,opt,name=ticket,proto3" json:"ticket,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceLinkTicket) Reset()         { *m = ServiceLinkTicket{} }
func (m *ServiceLinkTicket) String() string { return proto.CompactTextString(m) }
func (*ServiceLinkTicket) ProtoMessage()    {}
func (*ServiceLinkTicket) Descriptor() ([]byte, []int) {
	return fileDescriptor_50ffc9710d2c04e3, []int{0}
}

func (m *ServiceLinkTicket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceLinkTicket.Unmarshal(m, b)
}
func (m *ServiceLinkTicket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceLinkTicket.Marshal(b, m, deterministic)
}
func (m *ServiceLinkTicket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceLinkTicket.Merge(m, src)
}
func (m *ServiceLinkTicket) XXX_Size() int {
	return xxx_messageInfo_ServiceLinkTicket.Size(m)
}
func (m *ServiceLinkTicket) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceLinkTicket.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceLinkTicket proto.InternalMessageInfo

func (m *ServiceLinkTicket) GetPrimaryId() string {
	if m != nil {
		return m.PrimaryId
	}
	return ""
}

func (m *ServiceLinkTicket) GetPrimaryUrl() string {
	if m != nil {
		return m.PrimaryUrl
	}
	return ""
}

func (m *ServiceLinkTicket) GetGeneratedBy() string {
	if m != nil {
		return m.GeneratedBy
	}
	return ""
}

func (m *ServiceLinkTicket) GetTicket() []byte {
	if m != nil {
		return m.Ticket
	}
	return nil
}

// Sent from Replica to Primary via direct service <-> service HTTP call,
// replicas app_id would be available via X-Appengine-Inbound-Appid header.
type ServiceLinkRequest struct {
	// Same ticket that was passed to Replica via ServiceLinkTicket.
	Ticket []byte `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	// URL to use when making requests to Replica from Primary.
	ReplicaUrl string `protobuf:"bytes,2,opt,name=replica_url,json=replicaUrl,proto3" json:"replica_url,omitempty"`
	// Identity of a user that accepted the ticket and initiated this request.
	InitiatedBy          string   `protobuf:"bytes,3,opt,name=initiated_by,json=initiatedBy,proto3" json:"initiated_by,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceLinkRequest) Reset()         { *m = ServiceLinkRequest{} }
func (m *ServiceLinkRequest) String() string { return proto.CompactTextString(m) }
func (*ServiceLinkRequest) ProtoMessage()    {}
func (*ServiceLinkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_50ffc9710d2c04e3, []int{1}
}

func (m *ServiceLinkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceLinkRequest.Unmarshal(m, b)
}
func (m *ServiceLinkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceLinkRequest.Marshal(b, m, deterministic)
}
func (m *ServiceLinkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceLinkRequest.Merge(m, src)
}
func (m *ServiceLinkRequest) XXX_Size() int {
	return xxx_messageInfo_ServiceLinkRequest.Size(m)
}
func (m *ServiceLinkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceLinkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceLinkRequest proto.InternalMessageInfo

func (m *ServiceLinkRequest) GetTicket() []byte {
	if m != nil {
		return m.Ticket
	}
	return nil
}

func (m *ServiceLinkRequest) GetReplicaUrl() string {
	if m != nil {
		return m.ReplicaUrl
	}
	return ""
}

func (m *ServiceLinkRequest) GetInitiatedBy() string {
	if m != nil {
		return m.InitiatedBy
	}
	return ""
}

// Primary's response to ServiceLinkRequest. Always returned with HTTP code 200.
type ServiceLinkResponse struct {
	Status               ServiceLinkResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=components.auth.ServiceLinkResponse_Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ServiceLinkResponse) Reset()         { *m = ServiceLinkResponse{} }
func (m *ServiceLinkResponse) String() string { return proto.CompactTextString(m) }
func (*ServiceLinkResponse) ProtoMessage()    {}
func (*ServiceLinkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_50ffc9710d2c04e3, []int{2}
}

func (m *ServiceLinkResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceLinkResponse.Unmarshal(m, b)
}
func (m *ServiceLinkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceLinkResponse.Marshal(b, m, deterministic)
}
func (m *ServiceLinkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceLinkResponse.Merge(m, src)
}
func (m *ServiceLinkResponse) XXX_Size() int {
	return xxx_messageInfo_ServiceLinkResponse.Size(m)
}
func (m *ServiceLinkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceLinkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceLinkResponse proto.InternalMessageInfo

func (m *ServiceLinkResponse) GetStatus() ServiceLinkResponse_Status {
	if m != nil {
		return m.Status
	}
	return ServiceLinkResponse_SUCCESS
}

// Some user group. Corresponds to AuthGroup entity in model.py.
type AuthGroup struct {
	// Name of the group.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// List of members that are explicitly in this group.
	Members []string `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty"`
	// List of identity-glob expressions (like 'user:*@example.com').
	Globs []string `protobuf:"bytes,3,rep,name=globs,proto3" json:"globs,omitempty"`
	// List of nested group names.
	Nested []string `protobuf:"bytes,4,rep,name=nested,proto3" json:"nested,omitempty"`
	// Human readable description.
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// When the group was created. Microseconds since epoch.
	CreatedTs int64 `protobuf:"varint,6,opt,name=created_ts,json=createdTs,proto3" json:"created_ts,omitempty"`
	// Who created the group.
	CreatedBy string `protobuf:"bytes,7,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	// When the group was modified last time. Microseconds since epoch.
	ModifiedTs int64 `protobuf:"varint,8,opt,name=modified_ts,json=modifiedTs,proto3" json:"modified_ts,omitempty"`
	// Who modified the group last time.
	ModifiedBy string `protobuf:"bytes,9,opt,name=modified_by,json=modifiedBy,proto3" json:"modified_by,omitempty"`
	// A name of the group that can modify or delete this group.
	Owners               string   `protobuf:"bytes,10,opt,name=owners,proto3" json:"owners,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthGroup) Reset()         { *m = AuthGroup{} }
func (m *AuthGroup) String() string { return proto.CompactTextString(m) }
func (*AuthGroup) ProtoMessage()    {}
func (*AuthGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_50ffc9710d2c04e3, []int{3}
}

func (m *AuthGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthGroup.Unmarshal(m, b)
}
func (m *AuthGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthGroup.Marshal(b, m, deterministic)
}
func (m *AuthGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthGroup.Merge(m, src)
}
func (m *AuthGroup) XXX_Size() int {
	return xxx_messageInfo_AuthGroup.Size(m)
}
func (m *AuthGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthGroup.DiscardUnknown(m)
}

var xxx_messageInfo_AuthGroup proto.InternalMessageInfo

func (m *AuthGroup) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AuthGroup) GetMembers() []string {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *AuthGroup) GetGlobs() []string {
	if m != nil {
		return m.Globs
	}
	return nil
}

func (m *AuthGroup) GetNested() []string {
	if m != nil {
		return m.Nested
	}
	return nil
}

func (m *AuthGroup) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *AuthGroup) GetCreatedTs() int64 {
	if m != nil {
		return m.CreatedTs
	}
	return 0
}

func (m *AuthGroup) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *AuthGroup) GetModifiedTs() int64 {
	if m != nil {
		return m.ModifiedTs
	}
	return 0
}

func (m *AuthGroup) GetModifiedBy() string {
	if m != nil {
		return m.ModifiedBy
	}
	return ""
}

func (m *AuthGroup) GetOwners() string {
	if m != nil {
		return m.Owners
	}
	return ""
}

// A named set of whitelisted IP addresses. Corresponds to AuthIPWhitelist
// entity in model.py.
type AuthIPWhitelist struct {
	// Name of the IP whitelist.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The list of IP subnets.
	Subnets []string `protobuf:"bytes,2,rep,name=subnets,proto3" json:"subnets,omitempty"`
	// Human readable description.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// When the list was created. Microseconds since epoch.
	CreatedTs int64 `protobuf:"varint,4,opt,name=created_ts,json=createdTs,proto3" json:"created_ts,omitempty"`
	// Who created the list.
	CreatedBy string `protobuf:"bytes,5,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	// When the list was modified. Microseconds since epoch.
	ModifiedTs int64 `protobuf:"varint,6,opt,name=modified_ts,json=modifiedTs,proto3" json:"modified_ts,omitempty"`
	// Who modified the list the last time.
	ModifiedBy           string   `protobuf:"bytes,7,opt,name=modified_by,json=modifiedBy,proto3" json:"modified_by,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthIPWhitelist) Reset()         { *m = AuthIPWhitelist{} }
func (m *AuthIPWhitelist) String() string { return proto.CompactTextString(m) }
func (*AuthIPWhitelist) ProtoMessage()    {}
func (*AuthIPWhitelist) Descriptor() ([]byte, []int) {
	return fileDescriptor_50ffc9710d2c04e3, []int{4}
}

func (m *AuthIPWhitelist) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthIPWhitelist.Unmarshal(m, b)
}
func (m *AuthIPWhitelist) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthIPWhitelist.Marshal(b, m, deterministic)
}
func (m *AuthIPWhitelist) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthIPWhitelist.Merge(m, src)
}
func (m *AuthIPWhitelist) XXX_Size() int {
	return xxx_messageInfo_AuthIPWhitelist.Size(m)
}
func (m *AuthIPWhitelist) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthIPWhitelist.DiscardUnknown(m)
}

var xxx_messageInfo_AuthIPWhitelist proto.InternalMessageInfo

func (m *AuthIPWhitelist) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AuthIPWhitelist) GetSubnets() []string {
	if m != nil {
		return m.Subnets
	}
	return nil
}

func (m *AuthIPWhitelist) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *AuthIPWhitelist) GetCreatedTs() int64 {
	if m != nil {
		return m.CreatedTs
	}
	return 0
}

func (m *AuthIPWhitelist) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *AuthIPWhitelist) GetModifiedTs() int64 {
	if m != nil {
		return m.ModifiedTs
	}
	return 0
}

func (m *AuthIPWhitelist) GetModifiedBy() string {
	if m != nil {
		return m.ModifiedBy
	}
	return ""
}

// A pair (identity, IP whitelist name) plus some metadata. Corresponds to
// AuthIPWhitelistAssignments.Assignment model in model.py.
type AuthIPWhitelistAssignment struct {
	// Identity name to limit by IP whitelist.
	Identity string `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	// Name of IP whitelist to use (see AuthIPWhitelist).
	IpWhitelist string `protobuf:"bytes,2,opt,name=ip_whitelist,json=ipWhitelist,proto3" json:"ip_whitelist,omitempty"`
	// Why the assignment was created.
	Comment string `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	// When the assignment was created. Microseconds since epoch.
	CreatedTs int64 `protobuf:"varint,4,opt,name=created_ts,json=createdTs,proto3" json:"created_ts,omitempty"`
	// Who created the assignment.
	CreatedBy            string   `protobuf:"bytes,5,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthIPWhitelistAssignment) Reset()         { *m = AuthIPWhitelistAssignment{} }
func (m *AuthIPWhitelistAssignment) String() string { return proto.CompactTextString(m) }
func (*AuthIPWhitelistAssignment) ProtoMessage()    {}
func (*AuthIPWhitelistAssignment) Descriptor() ([]byte, []int) {
	return fileDescriptor_50ffc9710d2c04e3, []int{5}
}

func (m *AuthIPWhitelistAssignment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthIPWhitelistAssignment.Unmarshal(m, b)
}
func (m *AuthIPWhitelistAssignment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthIPWhitelistAssignment.Marshal(b, m, deterministic)
}
func (m *AuthIPWhitelistAssignment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthIPWhitelistAssignment.Merge(m, src)
}
func (m *AuthIPWhitelistAssignment) XXX_Size() int {
	return xxx_messageInfo_AuthIPWhitelistAssignment.Size(m)
}
func (m *AuthIPWhitelistAssignment) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthIPWhitelistAssignment.DiscardUnknown(m)
}

var xxx_messageInfo_AuthIPWhitelistAssignment proto.InternalMessageInfo

func (m *AuthIPWhitelistAssignment) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

func (m *AuthIPWhitelistAssignment) GetIpWhitelist() string {
	if m != nil {
		return m.IpWhitelist
	}
	return ""
}

func (m *AuthIPWhitelistAssignment) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *AuthIPWhitelistAssignment) GetCreatedTs() int64 {
	if m != nil {
		return m.CreatedTs
	}
	return 0
}

func (m *AuthIPWhitelistAssignment) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

// An entire database of auth configuration that is being replicated.
type AuthDB struct {
	// OAuth2 client_id to use to mint new OAuth2 tokens.
	OauthClientId string `protobuf:"bytes,1,opt,name=oauth_client_id,json=oauthClientId,proto3" json:"oauth_client_id,omitempty"`
	// OAuth2 client secret. Not so secret really, since it's passed to clients.
	OauthClientSecret string `protobuf:"bytes,2,opt,name=oauth_client_secret,json=oauthClientSecret,proto3" json:"oauth_client_secret,omitempty"`
	// Additional OAuth2 client_ids allowed to access the services.
	OauthAdditionalClientIds []string `protobuf:"bytes,3,rep,name=oauth_additional_client_ids,json=oauthAdditionalClientIds,proto3" json:"oauth_additional_client_ids,omitempty"`
	// All groups.
	Groups []*AuthGroup `protobuf:"bytes,4,rep,name=groups,proto3" json:"groups,omitempty"`
	// All IP whitelists.
	IpWhitelists []*AuthIPWhitelist `protobuf:"bytes,6,rep,name=ip_whitelists,json=ipWhitelists,proto3" json:"ip_whitelists,omitempty"`
	// Mapping 'account -> IP whitlist to use for that account'.
	IpWhitelistAssignments []*AuthIPWhitelistAssignment `protobuf:"bytes,7,rep,name=ip_whitelist_assignments,json=ipWhitelistAssignments,proto3" json:"ip_whitelist_assignments,omitempty"`
	// URL of a token server to use to generate delegation tokens.
	TokenServerUrl string `protobuf:"bytes,8,opt,name=token_server_url,json=tokenServerUrl,proto3" json:"token_server_url,omitempty"`
	// Serialized security_config.SecurityConfig proto with security-related
	// configuration to distribute across all services.
	//
	// It is distributed in a serialized form to make sure old services ingest it
	// fully, even if they don't understand some SecurityConfig proto fields
	// (yet). As soon as their code is updated, they SHOULD start using all
	// SecurityConfig fields, without waiting for another push from Auth Service.
	//
	// If we use SecurityConfig directly here, old services would just drop fields
	// they don't understand when accepting an AuthDB push.
	SecurityConfig []byte `protobuf:"bytes,9,opt,name=security_config,json=securityConfig,proto3" json:"security_config,omitempty"`
	// Definition of all known permissions and realms in a LUCI deployment.
	//
	// It is ultimately used by LUCI services for authorizing access to resources.
	// See realms.proto for more details.
	Realms               *Realms  `protobuf:"bytes,11,opt,name=realms,proto3" json:"realms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthDB) Reset()         { *m = AuthDB{} }
func (m *AuthDB) String() string { return proto.CompactTextString(m) }
func (*AuthDB) ProtoMessage()    {}
func (*AuthDB) Descriptor() ([]byte, []int) {
	return fileDescriptor_50ffc9710d2c04e3, []int{6}
}

func (m *AuthDB) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthDB.Unmarshal(m, b)
}
func (m *AuthDB) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthDB.Marshal(b, m, deterministic)
}
func (m *AuthDB) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthDB.Merge(m, src)
}
func (m *AuthDB) XXX_Size() int {
	return xxx_messageInfo_AuthDB.Size(m)
}
func (m *AuthDB) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthDB.DiscardUnknown(m)
}

var xxx_messageInfo_AuthDB proto.InternalMessageInfo

func (m *AuthDB) GetOauthClientId() string {
	if m != nil {
		return m.OauthClientId
	}
	return ""
}

func (m *AuthDB) GetOauthClientSecret() string {
	if m != nil {
		return m.OauthClientSecret
	}
	return ""
}

func (m *AuthDB) GetOauthAdditionalClientIds() []string {
	if m != nil {
		return m.OauthAdditionalClientIds
	}
	return nil
}

func (m *AuthDB) GetGroups() []*AuthGroup {
	if m != nil {
		return m.Groups
	}
	return nil
}

func (m *AuthDB) GetIpWhitelists() []*AuthIPWhitelist {
	if m != nil {
		return m.IpWhitelists
	}
	return nil
}

func (m *AuthDB) GetIpWhitelistAssignments() []*AuthIPWhitelistAssignment {
	if m != nil {
		return m.IpWhitelistAssignments
	}
	return nil
}

func (m *AuthDB) GetTokenServerUrl() string {
	if m != nil {
		return m.TokenServerUrl
	}
	return ""
}

func (m *AuthDB) GetSecurityConfig() []byte {
	if m != nil {
		return m.SecurityConfig
	}
	return nil
}

func (m *AuthDB) GetRealms() *Realms {
	if m != nil {
		return m.Realms
	}
	return nil
}

// Information about some particular revision of auth DB.
type AuthDBRevision struct {
	// GAE App ID of a service holding primary copy of Auth DB.
	PrimaryId string `protobuf:"bytes,1,opt,name=primary_id,json=primaryId,proto3" json:"primary_id,omitempty"`
	// Revision of Auth DB being pushed.
	AuthDbRev int64 `protobuf:"varint,2,opt,name=auth_db_rev,json=authDbRev,proto3" json:"auth_db_rev,omitempty"`
	// Timestamp of that revision by Primary's clock, microseconds since epoch.
	ModifiedTs           int64    `protobuf:"varint,3,opt,name=modified_ts,json=modifiedTs,proto3" json:"modified_ts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthDBRevision) Reset()         { *m = AuthDBRevision{} }
func (m *AuthDBRevision) String() string { return proto.CompactTextString(m) }
func (*AuthDBRevision) ProtoMessage()    {}
func (*AuthDBRevision) Descriptor() ([]byte, []int) {
	return fileDescriptor_50ffc9710d2c04e3, []int{7}
}

func (m *AuthDBRevision) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthDBRevision.Unmarshal(m, b)
}
func (m *AuthDBRevision) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthDBRevision.Marshal(b, m, deterministic)
}
func (m *AuthDBRevision) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthDBRevision.Merge(m, src)
}
func (m *AuthDBRevision) XXX_Size() int {
	return xxx_messageInfo_AuthDBRevision.Size(m)
}
func (m *AuthDBRevision) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthDBRevision.DiscardUnknown(m)
}

var xxx_messageInfo_AuthDBRevision proto.InternalMessageInfo

func (m *AuthDBRevision) GetPrimaryId() string {
	if m != nil {
		return m.PrimaryId
	}
	return ""
}

func (m *AuthDBRevision) GetAuthDbRev() int64 {
	if m != nil {
		return m.AuthDbRev
	}
	return 0
}

func (m *AuthDBRevision) GetModifiedTs() int64 {
	if m != nil {
		return m.ModifiedTs
	}
	return 0
}

// SignedAuthDB contains serialized and signed AuthDB proto.
//
// It is used to store AuthDB snapshots in Google Storage. Signing is used as
// a defense against unauthorized writes to the storage bucket.
type SignedAuthDB struct {
	// Serialized ReplicationPushRequest message with actual data.
	//
	// Contains revision information and AuthDB itself.
	AuthDbBlob []byte `protobuf:"bytes,1,opt,name=auth_db_blob,json=authDbBlob,proto3" json:"auth_db_blob,omitempty"`
	// Service account name whose key was used to sign the AuthDB blob.
	SignerId string `protobuf:"bytes,2,opt,name=signer_id,json=signerId,proto3" json:"signer_id,omitempty"`
	// ID of the signing key.
	SigningKeyId string `protobuf:"bytes,3,opt,name=signing_key_id,json=signingKeyId,proto3" json:"signing_key_id,omitempty"`
	// The signature of auth_db_blob field.
	//
	// It is RS256(SHA512(auth_db_blob)).
	//
	// Where:
	//   * RS256 is RSASSA-PKCS1-v1_5 using SHA-256, see RS256 algo in RFC7518.
	//   * SHA512 is a byte string (64 bytes) with SHA-512 digest of its input.
	//
	// Such peculiar structure is due to limitations of GAE signing infrastructure
	// (RS256 function can accept at most 8KB of input).
	//
	// Consumers of SignedAuthDB are expected to do the following:
	//   1. Check 'signer_id' is what they expect.
	//   2. Use https://www.googleapis.com/service_accounts/v1/metadata/x509/...
	//      endpoint to get the signer's public key with ID 'signing_key_id'.
	//   3. Construct to-be-signed string as SHA512(auth_db_blob).
	//   4. Verify 'signature' matches to-be-signed string using the public key
	//      from step 2.
	Signature            []byte   `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignedAuthDB) Reset()         { *m = SignedAuthDB{} }
func (m *SignedAuthDB) String() string { return proto.CompactTextString(m) }
func (*SignedAuthDB) ProtoMessage()    {}
func (*SignedAuthDB) Descriptor() ([]byte, []int) {
	return fileDescriptor_50ffc9710d2c04e3, []int{8}
}

func (m *SignedAuthDB) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignedAuthDB.Unmarshal(m, b)
}
func (m *SignedAuthDB) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignedAuthDB.Marshal(b, m, deterministic)
}
func (m *SignedAuthDB) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignedAuthDB.Merge(m, src)
}
func (m *SignedAuthDB) XXX_Size() int {
	return xxx_messageInfo_SignedAuthDB.Size(m)
}
func (m *SignedAuthDB) XXX_DiscardUnknown() {
	xxx_messageInfo_SignedAuthDB.DiscardUnknown(m)
}

var xxx_messageInfo_SignedAuthDB proto.InternalMessageInfo

func (m *SignedAuthDB) GetAuthDbBlob() []byte {
	if m != nil {
		return m.AuthDbBlob
	}
	return nil
}

func (m *SignedAuthDB) GetSignerId() string {
	if m != nil {
		return m.SignerId
	}
	return ""
}

func (m *SignedAuthDB) GetSigningKeyId() string {
	if m != nil {
		return m.SigningKeyId
	}
	return ""
}

func (m *SignedAuthDB) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

// Published by Primary into 'auth-db-changed' PubSub topic. The body of the
// message is base64 encoded serialized ChangeNotification. Additional
// attributes are:
//  X-AuthDB-SigKey-v1: <id of a public key>
//  X-AuthDB-SigVal-v1: <base64 encoded RSA-SHA256(blob) signature>
type ChangeNotification struct {
	// New revision of the AuthDB.
	Revision             *AuthDBRevision `protobuf:"bytes,1,opt,name=revision,proto3" json:"revision,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ChangeNotification) Reset()         { *m = ChangeNotification{} }
func (m *ChangeNotification) String() string { return proto.CompactTextString(m) }
func (*ChangeNotification) ProtoMessage()    {}
func (*ChangeNotification) Descriptor() ([]byte, []int) {
	return fileDescriptor_50ffc9710d2c04e3, []int{9}
}

func (m *ChangeNotification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeNotification.Unmarshal(m, b)
}
func (m *ChangeNotification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeNotification.Marshal(b, m, deterministic)
}
func (m *ChangeNotification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeNotification.Merge(m, src)
}
func (m *ChangeNotification) XXX_Size() int {
	return xxx_messageInfo_ChangeNotification.Size(m)
}
func (m *ChangeNotification) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeNotification.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeNotification proto.InternalMessageInfo

func (m *ChangeNotification) GetRevision() *AuthDBRevision {
	if m != nil {
		return m.Revision
	}
	return nil
}

// Sent from Primary to Replica to update Replica's AuthDB.
//
// Primary signs the entire serialized message with its private key and appends
// two headers to HTTP request that carries the blob:
//  X-AuthDB-SigKey-v1: <id of a public key>
//  X-AuthDB-SigVal-v1: <base64 encoded RSA-SHA256(SHA512(blob)) signature>
//
// Binary serialization of ReplicationPushRequest is sometimes misleadingly
// called "AuthDB blob". It is stored in Datastore (as is) and in Google Storage
// (as serialized SignedAuthDB) for consumers that do not use Primary -> Replica
// protocol.
type ReplicationPushRequest struct {
	// Revision that is being pushed.
	Revision *AuthDBRevision `protobuf:"bytes,1,opt,name=revision,proto3" json:"revision,omitempty"`
	// An entire database of auth configuration for specific revision.
	AuthDb *AuthDB `protobuf:"bytes,2,opt,name=auth_db,json=authDb,proto3" json:"auth_db,omitempty"`
	// Version of 'auth' component on Primary, see components/auth/version.py.
	AuthCodeVersion      string   `protobuf:"bytes,3,opt,name=auth_code_version,json=authCodeVersion,proto3" json:"auth_code_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplicationPushRequest) Reset()         { *m = ReplicationPushRequest{} }
func (m *ReplicationPushRequest) String() string { return proto.CompactTextString(m) }
func (*ReplicationPushRequest) ProtoMessage()    {}
func (*ReplicationPushRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_50ffc9710d2c04e3, []int{10}
}

func (m *ReplicationPushRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicationPushRequest.Unmarshal(m, b)
}
func (m *ReplicationPushRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicationPushRequest.Marshal(b, m, deterministic)
}
func (m *ReplicationPushRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicationPushRequest.Merge(m, src)
}
func (m *ReplicationPushRequest) XXX_Size() int {
	return xxx_messageInfo_ReplicationPushRequest.Size(m)
}
func (m *ReplicationPushRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicationPushRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicationPushRequest proto.InternalMessageInfo

func (m *ReplicationPushRequest) GetRevision() *AuthDBRevision {
	if m != nil {
		return m.Revision
	}
	return nil
}

func (m *ReplicationPushRequest) GetAuthDb() *AuthDB {
	if m != nil {
		return m.AuthDb
	}
	return nil
}

func (m *ReplicationPushRequest) GetAuthCodeVersion() string {
	if m != nil {
		return m.AuthCodeVersion
	}
	return ""
}

// Replica's response to ReplicationPushRequest.
type ReplicationPushResponse struct {
	// Overall status of the operation.
	Status ReplicationPushResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=components.auth.ReplicationPushResponse_Status" json:"status,omitempty"`
	// Revision known by Replica (set for APPLIED and SKIPPED statuses).
	CurrentRevision *AuthDBRevision `protobuf:"bytes,2,opt,name=current_revision,json=currentRevision,proto3" json:"current_revision,omitempty"`
	// Present for TRANSIENT_ERROR and FATAL_ERROR statuses.
	ErrorCode ReplicationPushResponse_ErrorCode `protobuf:"varint,3,opt,name=error_code,json=errorCode,proto3,enum=components.auth.ReplicationPushResponse_ErrorCode" json:"error_code,omitempty"`
	// Version of 'auth' component on Replica, see components/auth/version.py.
	AuthCodeVersion      string   `protobuf:"bytes,4,opt,name=auth_code_version,json=authCodeVersion,proto3" json:"auth_code_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplicationPushResponse) Reset()         { *m = ReplicationPushResponse{} }
func (m *ReplicationPushResponse) String() string { return proto.CompactTextString(m) }
func (*ReplicationPushResponse) ProtoMessage()    {}
func (*ReplicationPushResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_50ffc9710d2c04e3, []int{11}
}

func (m *ReplicationPushResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicationPushResponse.Unmarshal(m, b)
}
func (m *ReplicationPushResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicationPushResponse.Marshal(b, m, deterministic)
}
func (m *ReplicationPushResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicationPushResponse.Merge(m, src)
}
func (m *ReplicationPushResponse) XXX_Size() int {
	return xxx_messageInfo_ReplicationPushResponse.Size(m)
}
func (m *ReplicationPushResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicationPushResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicationPushResponse proto.InternalMessageInfo

func (m *ReplicationPushResponse) GetStatus() ReplicationPushResponse_Status {
	if m != nil {
		return m.Status
	}
	return ReplicationPushResponse_APPLIED
}

func (m *ReplicationPushResponse) GetCurrentRevision() *AuthDBRevision {
	if m != nil {
		return m.CurrentRevision
	}
	return nil
}

func (m *ReplicationPushResponse) GetErrorCode() ReplicationPushResponse_ErrorCode {
	if m != nil {
		return m.ErrorCode
	}
	return ReplicationPushResponse_ERROR_UNKNOWN
}

func (m *ReplicationPushResponse) GetAuthCodeVersion() string {
	if m != nil {
		return m.AuthCodeVersion
	}
	return ""
}

func init() {
	proto.RegisterEnum("components.auth.ServiceLinkResponse_Status", ServiceLinkResponse_Status_name, ServiceLinkResponse_Status_value)
	proto.RegisterEnum("components.auth.ReplicationPushResponse_Status", ReplicationPushResponse_Status_name, ReplicationPushResponse_Status_value)
	proto.RegisterEnum("components.auth.ReplicationPushResponse_ErrorCode", ReplicationPushResponse_ErrorCode_name, ReplicationPushResponse_ErrorCode_value)
	proto.RegisterType((*ServiceLinkTicket)(nil), "components.auth.ServiceLinkTicket")
	proto.RegisterType((*ServiceLinkRequest)(nil), "components.auth.ServiceLinkRequest")
	proto.RegisterType((*ServiceLinkResponse)(nil), "components.auth.ServiceLinkResponse")
	proto.RegisterType((*AuthGroup)(nil), "components.auth.AuthGroup")
	proto.RegisterType((*AuthIPWhitelist)(nil), "components.auth.AuthIPWhitelist")
	proto.RegisterType((*AuthIPWhitelistAssignment)(nil), "components.auth.AuthIPWhitelistAssignment")
	proto.RegisterType((*AuthDB)(nil), "components.auth.AuthDB")
	proto.RegisterType((*AuthDBRevision)(nil), "components.auth.AuthDBRevision")
	proto.RegisterType((*SignedAuthDB)(nil), "components.auth.SignedAuthDB")
	proto.RegisterType((*ChangeNotification)(nil), "components.auth.ChangeNotification")
	proto.RegisterType((*ReplicationPushRequest)(nil), "components.auth.ReplicationPushRequest")
	proto.RegisterType((*ReplicationPushResponse)(nil), "components.auth.ReplicationPushResponse")
}

func init() {
	proto.RegisterFile("components/auth/proto/replication.proto", fileDescriptor_50ffc9710d2c04e3)
}

var fileDescriptor_50ffc9710d2c04e3 = []byte{
	// 1222 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0xcd, 0x6e, 0xdb, 0x46,
	0x10, 0x0e, 0x25, 0x59, 0x3f, 0x23, 0x59, 0xa2, 0x37, 0x6d, 0xc2, 0x26, 0x6d, 0xa2, 0x12, 0x45,
	0x63, 0xa4, 0x80, 0x5c, 0xa8, 0x40, 0x0f, 0x4d, 0x7b, 0xd0, 0x0f, 0xe3, 0xd0, 0x76, 0x65, 0x65,
	0x29, 0x37, 0x40, 0x2f, 0x84, 0x44, 0x6e, 0xe4, 0x85, 0x25, 0x52, 0xdd, 0x25, 0x1d, 0x08, 0x7d,
	0x87, 0x02, 0x3d, 0xf5, 0xdc, 0x4b, 0x1f, 0xa0, 0x7d, 0xa2, 0xbe, 0x43, 0x1f, 0xa0, 0xd8, 0xe5,
	0x92, 0x62, 0x64, 0x3b, 0x0e, 0x90, 0x13, 0xb9, 0xdf, 0xce, 0xcc, 0xce, 0x7c, 0x3b, 0xb3, 0x33,
	0xf0, 0xc4, 0x0b, 0x97, 0xab, 0x30, 0x20, 0x41, 0xc4, 0x0f, 0xa6, 0x71, 0x74, 0x7e, 0xb0, 0x62,
	0x61, 0x14, 0x1e, 0x30, 0xb2, 0x5a, 0x50, 0x6f, 0x1a, 0xd1, 0x30, 0xe8, 0x48, 0x04, 0xb5, 0x36,
	0x82, 0x1d, 0x21, 0xf8, 0xc0, 0xbc, 0x49, 0x73, 0xba, 0x58, 0xf2, 0x44, 0xc9, 0xfc, 0x4d, 0x83,
	0x3d, 0x87, 0xb0, 0x4b, 0xea, 0x91, 0x13, 0x1a, 0x5c, 0x4c, 0xa8, 0x77, 0x41, 0x22, 0xf4, 0x19,
	0xc0, 0x8a, 0xd1, 0xe5, 0x94, 0xad, 0x5d, 0xea, 0x1b, 0x5a, 0x5b, 0xdb, 0xaf, 0xe1, 0x9a, 0x42,
	0x6c, 0x1f, 0x3d, 0x86, 0x7a, 0xba, 0x1d, 0xb3, 0x85, 0x51, 0x90, 0xfb, 0xa9, 0xc6, 0x19, 0x5b,
	0xa0, 0xcf, 0xa1, 0x31, 0x27, 0x01, 0x61, 0xd3, 0x88, 0xf8, 0xee, 0x6c, 0x6d, 0x14, 0xa5, 0x44,
	0x3d, 0xc3, 0xfa, 0x6b, 0x74, 0x0f, 0xca, 0x91, 0x3c, 0xcc, 0x28, 0xb5, 0xb5, 0xfd, 0x06, 0x56,
	0x2b, 0x73, 0x05, 0x28, 0xe7, 0x0f, 0x26, 0xbf, 0xc4, 0x84, 0x47, 0x39, 0x69, 0x2d, 0x2f, 0x2d,
	0x3c, 0x51, 0x44, 0xe4, 0x3d, 0x51, 0x90, 0xf2, 0x84, 0x06, 0x34, 0xa2, 0x5b, 0x9e, 0x64, 0x58,
	0x7f, 0x6d, 0xfe, 0xa5, 0xc1, 0xdd, 0xb7, 0x8e, 0xe4, 0xab, 0x30, 0xe0, 0x04, 0x0d, 0xa0, 0xcc,
	0xa3, 0x69, 0x14, 0x73, 0x79, 0x66, 0xb3, 0xfb, 0x55, 0x67, 0x8b, 0xe0, 0xce, 0x35, 0x5a, 0x1d,
	0x47, 0xaa, 0x60, 0xa5, 0x6a, 0x1e, 0x41, 0x39, 0x41, 0x50, 0x1d, 0x2a, 0xce, 0xd9, 0x60, 0x60,
	0x39, 0x8e, 0x7e, 0x07, 0xdd, 0x85, 0xd6, 0x04, 0xf7, 0x46, 0xce, 0xf8, 0x14, 0x4f, 0x5c, 0x0b,
	0xe3, 0x53, 0xac, 0x6b, 0xa8, 0x09, 0xd0, 0xef, 0x0d, 0xdd, 0x89, 0x3d, 0x38, 0xb6, 0x26, 0x7a,
	0x41, 0xac, 0x7b, 0x67, 0x93, 0x17, 0x6a, 0xbf, 0x68, 0xfe, 0x59, 0x80, 0x5a, 0x2f, 0x8e, 0xce,
	0x0f, 0x59, 0x18, 0xaf, 0x10, 0x82, 0x52, 0x30, 0x5d, 0x12, 0x75, 0x3b, 0xf2, 0x1f, 0x19, 0x50,
	0x59, 0x92, 0xe5, 0x8c, 0x30, 0x6e, 0x14, 0xda, 0xc5, 0xfd, 0x1a, 0x4e, 0x97, 0xe8, 0x23, 0xd8,
	0x99, 0x2f, 0xc2, 0x19, 0x37, 0x8a, 0x12, 0x4f, 0x16, 0x82, 0xd6, 0x80, 0xf0, 0x88, 0xf8, 0x46,
	0x49, 0xc2, 0x6a, 0x85, 0xda, 0x50, 0xf7, 0x09, 0xf7, 0x18, 0x5d, 0x89, 0xfc, 0x32, 0x76, 0x12,
	0xd2, 0x72, 0x90, 0xc8, 0x10, 0x8f, 0x11, 0xc9, 0x6a, 0xc4, 0x8d, 0x72, 0x5b, 0xdb, 0x2f, 0xe2,
	0x9a, 0x42, 0x26, 0x3c, 0xbf, 0x3d, 0x5b, 0x1b, 0x95, 0x24, 0x81, 0x14, 0xd2, 0x5f, 0x8b, 0x6b,
	0x5b, 0x86, 0x3e, 0x7d, 0x4d, 0x13, 0xf5, 0xaa, 0x54, 0x87, 0x14, 0x9a, 0xf0, 0xb7, 0x04, 0x66,
	0x6b, 0xa3, 0x96, 0xdc, 0x6b, 0x0a, 0x25, 0xe9, 0x13, 0xbe, 0x09, 0x44, 0xa0, 0x20, 0xf7, 0xd4,
	0xca, 0xfc, 0x57, 0x83, 0x96, 0xe0, 0xc8, 0x1e, 0xbf, 0x3a, 0xa7, 0x11, 0x59, 0x50, 0x1e, 0xdd,
	0xc4, 0x14, 0x8f, 0x67, 0x01, 0x89, 0x32, 0xa6, 0xd4, 0x72, 0x3b, 0xf6, 0xe2, 0x6d, 0xb1, 0x97,
	0xde, 0x1d, 0xfb, 0xce, 0x2d, 0xb1, 0x97, 0x6f, 0x8b, 0xbd, 0xb2, 0x1d, 0xbb, 0xf9, 0xb7, 0x06,
	0x9f, 0x6c, 0xc5, 0xd8, 0xe3, 0x9c, 0xce, 0x83, 0x25, 0x09, 0x22, 0xf4, 0x00, 0xaa, 0xd4, 0x27,
	0x41, 0x44, 0xa3, 0xb5, 0x8a, 0x38, 0x5b, 0xcb, 0x6a, 0x58, 0xb9, 0x6f, 0x52, 0x2d, 0x55, 0x2f,
	0x75, 0xba, 0xda, 0x90, 0x65, 0x40, 0xc5, 0x0b, 0x97, 0xc2, 0x92, 0x0a, 0x3d, 0x5d, 0x7e, 0x58,
	0xd8, 0xe6, 0x1f, 0x25, 0x28, 0x0b, 0xa7, 0x87, 0x7d, 0xf4, 0x25, 0xb4, 0x42, 0x51, 0x3f, 0xae,
	0xb7, 0xa0, 0x24, 0x88, 0x36, 0x4f, 0xcc, 0xae, 0x84, 0x07, 0x12, 0xb5, 0x7d, 0xd4, 0x81, 0xbb,
	0x6f, 0xc9, 0x71, 0xe2, 0x31, 0x92, 0x3a, 0xbd, 0x97, 0x93, 0x75, 0xe4, 0x06, 0xfa, 0x01, 0x1e,
	0x26, 0xf2, 0x53, 0xdf, 0xa7, 0xe2, 0xa6, 0xa6, 0x8b, 0xcd, 0x11, 0x69, 0xe6, 0x1b, 0x52, 0xa4,
	0x97, 0x49, 0xa4, 0xa7, 0x71, 0xd4, 0x85, 0xf2, 0x5c, 0x54, 0x16, 0x97, 0xc5, 0x50, 0xef, 0x3e,
	0xb8, 0x52, 0xef, 0x59, 0xf1, 0x61, 0x25, 0x89, 0x2c, 0xd8, 0xcd, 0x13, 0x2a, 0xae, 0x53, 0xa8,
	0xb6, 0xaf, 0x55, 0xcd, 0xdd, 0x17, 0x6e, 0xe4, 0x38, 0xe7, 0xc8, 0x07, 0x23, 0x6f, 0xc6, 0x9d,
	0x66, 0xd7, 0xc9, 0x8d, 0x8a, 0xb4, 0xf8, 0xf4, 0x36, 0x8b, 0x9b, 0x0c, 0xc0, 0xf7, 0x72, 0xb6,
	0x37, 0x30, 0x47, 0xfb, 0xa0, 0x47, 0xe1, 0x05, 0x09, 0x5c, 0x4e, 0xd8, 0x25, 0x61, 0xf2, 0xc5,
	0xac, 0x4a, 0x32, 0x9b, 0x12, 0x77, 0x24, 0x2c, 0x5e, 0xcd, 0x27, 0xd0, 0xe2, 0xc4, 0x8b, 0x19,
	0x8d, 0xd6, 0xae, 0x17, 0x06, 0xaf, 0xe9, 0x5c, 0x96, 0x60, 0x03, 0x37, 0x53, 0x78, 0x20, 0x51,
	0xf4, 0x2d, 0x94, 0x93, 0x76, 0x62, 0xd4, 0xdb, 0xda, 0x7e, 0xbd, 0xfb, 0xe8, 0x8a, 0x9b, 0xaa,
	0xdb, 0x60, 0xf9, 0xc1, 0x4a, 0xfa, 0xa8, 0x54, 0xdd, 0xd1, 0xcb, 0x47, 0xa5, 0x2a, 0xe8, 0x75,
	0x73, 0x05, 0xcd, 0x24, 0x31, 0x30, 0xb9, 0xa4, 0x5c, 0x15, 0xd8, 0xbb, 0xda, 0xcf, 0x23, 0xa8,
	0xcb, 0x6b, 0xf6, 0x67, 0x2e, 0x23, 0x97, 0x32, 0x1f, 0x8a, 0xb8, 0x26, 0xa0, 0xe1, 0x0c, 0x93,
	0xcb, 0xed, 0x0a, 0x2b, 0x6e, 0x57, 0x98, 0xf9, 0xbb, 0x06, 0x0d, 0x87, 0xce, 0x03, 0xe2, 0xab,
	0x8c, 0x6c, 0x43, 0x23, 0xb5, 0x38, 0x5b, 0x84, 0x33, 0xd5, 0x64, 0x20, 0x31, 0xd9, 0x5f, 0x84,
	0x33, 0xf4, 0x10, 0x6a, 0x82, 0x48, 0xc2, 0x84, 0x47, 0x49, 0x06, 0x56, 0x13, 0xc0, 0xf6, 0xd1,
	0x17, 0xd0, 0x14, 0xff, 0x34, 0x98, 0xbb, 0x17, 0x44, 0xfa, 0x9c, 0x94, 0x4e, 0x43, 0xa1, 0xc7,
	0x44, 0xb8, 0xfd, 0x69, 0x62, 0x62, 0x1a, 0xc5, 0x8c, 0xa8, 0xa6, 0xb7, 0x01, 0xcc, 0x97, 0x80,
	0x06, 0xe7, 0xd3, 0x60, 0x4e, 0x46, 0x61, 0x44, 0x5f, 0xab, 0xce, 0x8e, 0x9e, 0x41, 0x95, 0x29,
	0x56, 0xa4, 0x53, 0xf5, 0xee, 0xe3, 0x6b, 0x13, 0x61, 0x43, 0x1e, 0xce, 0x14, 0xcc, 0x7f, 0x34,
	0xb8, 0x87, 0x37, 0x63, 0xc2, 0x38, 0xe6, 0xe7, 0x69, 0x3f, 0xfd, 0x10, 0xbb, 0xe8, 0x6b, 0xa8,
	0x28, 0xb6, 0x24, 0x13, 0xf5, 0xee, 0xfd, 0x9b, 0x74, 0xcb, 0x09, 0x83, 0xe8, 0x29, 0xec, 0x25,
	0x85, 0x1c, 0xfa, 0xc4, 0xbd, 0x24, 0x8c, 0x6f, 0x5e, 0xd6, 0x96, 0x2c, 0xe3, 0xd0, 0x27, 0x3f,
	0x25, 0xb0, 0xf9, 0x5f, 0x11, 0xee, 0x5f, 0xf1, 0x5a, 0xb5, 0xe4, 0xc3, 0xad, 0x96, 0x7c, 0x70,
	0xe5, 0xe0, 0x1b, 0x34, 0xb7, 0xda, 0x32, 0x3a, 0x02, 0xdd, 0x8b, 0x19, 0x13, 0x4f, 0x43, 0xc6,
	0x43, 0xe1, 0xfd, 0x78, 0x68, 0x29, 0xc5, 0x2c, 0x5b, 0x5f, 0x02, 0x10, 0xc6, 0x42, 0x26, 0xa3,
	0x93, 0x51, 0x35, 0xbb, 0xdd, 0xf7, 0x76, 0xcc, 0x12, 0xaa, 0x22, 0x7e, 0x5c, 0x23, 0xe9, 0xef,
	0xf5, 0x7c, 0x95, 0xae, 0xe7, 0xeb, 0x45, 0x7e, 0xc2, 0xe8, 0x8d, 0xc7, 0x27, 0xb6, 0x35, 0xd4,
	0xef, 0xc8, 0x71, 0xe3, 0xd8, 0x1e, 0x8f, 0xad, 0xa1, 0xae, 0x65, 0xe3, 0x86, 0x6d, 0x8d, 0xd2,
	0x71, 0xa3, 0x80, 0x5a, 0x50, 0x7f, 0xde, 0x9b, 0xf4, 0x4e, 0xb2, 0xf9, 0xe2, 0x57, 0xa8, 0x65,
	0xde, 0xa0, 0x3d, 0xd8, 0x95, 0xb8, 0x7b, 0x36, 0x3a, 0x1e, 0x9d, 0xbe, 0x1a, 0xe9, 0x77, 0x04,
	0x34, 0x3a, 0x9d, 0xb8, 0x3d, 0x17, 0x5b, 0xe3, 0x13, 0x7b, 0xd0, 0xd3, 0x35, 0xb4, 0x0b, 0xb5,
	0xe7, 0xa7, 0xb8, 0x6f, 0x0f, 0x87, 0xd6, 0x48, 0x2f, 0xa0, 0x8f, 0x61, 0xef, 0x47, 0xdb, 0x71,
	0xec, 0xd1, 0xa1, 0xeb, 0xd8, 0x87, 0xa3, 0xde, 0xe4, 0x0c, 0x5b, 0x7a, 0x51, 0x28, 0x8a, 0xc1,
	0x66, 0x03, 0x95, 0xc4, 0xe1, 0x02, 0xc2, 0xd6, 0xcb, 0x33, 0xcb, 0x99, 0xe8, 0x3b, 0xfd, 0xef,
	0x7f, 0xfe, 0x6e, 0x1e, 0x76, 0xbc, 0x73, 0x16, 0x2e, 0x69, 0xbc, 0xec, 0x84, 0x6c, 0x7e, 0xb0,
	0x88, 0x3d, 0x7a, 0x90, 0xbc, 0x55, 0xc9, 0xfc, 0xca, 0x93, 0x79, 0x2b, 0x99, 0x63, 0xbd, 0x70,
	0xf1, 0x2c, 0xfd, 0x99, 0x95, 0xe5, 0xdf, 0x37, 0xff, 0x07, 0x00, 0x00, 0xff, 0xff, 0x53, 0x1d,
	0x70, 0xaf, 0x2d, 0x0b, 0x00, 0x00,
}
