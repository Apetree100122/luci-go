// Copyright 2023 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.7
// source: go.chromium.org/luci/tree_status/proto/v1/tree_status.proto

package v1

import prpc "go.chromium.org/luci/grpc/prpc"

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TreeStatusGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TreeStatusGetRequest) Reset() {
	*x = TreeStatusGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_tree_status_proto_v1_tree_status_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreeStatusGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreeStatusGetRequest) ProtoMessage() {}

func (x *TreeStatusGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_tree_status_proto_v1_tree_status_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreeStatusGetRequest.ProtoReflect.Descriptor instead.
func (*TreeStatusGetRequest) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_tree_status_proto_v1_tree_status_proto_rawDescGZIP(), []int{0}
}

type TreeStatusGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TreeStatusGetResponse) Reset() {
	*x = TreeStatusGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_tree_status_proto_v1_tree_status_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreeStatusGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreeStatusGetResponse) ProtoMessage() {}

func (x *TreeStatusGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_tree_status_proto_v1_tree_status_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreeStatusGetResponse.ProtoReflect.Descriptor instead.
func (*TreeStatusGetResponse) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_tree_status_proto_v1_tree_status_proto_rawDescGZIP(), []int{1}
}

var File_go_chromium_org_luci_tree_status_proto_v1_tree_status_proto protoreflect.FileDescriptor

var file_go_chromium_org_luci_tree_status_proto_v1_tree_status_proto_rawDesc = []byte{
	0x0a, 0x3b, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x65, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x6c,
	0x75, 0x63, 0x69, 0x2e, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e,
	0x76, 0x31, 0x22, 0x16, 0x0a, 0x14, 0x54, 0x72, 0x65, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x54, 0x72,
	0x65, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x32, 0x6c, 0x0a, 0x0a, 0x54, 0x72, 0x65, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x5e, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x29, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e,
	0x74, 0x72, 0x65, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x72, 0x65, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x74, 0x72, 0x65, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_go_chromium_org_luci_tree_status_proto_v1_tree_status_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_tree_status_proto_v1_tree_status_proto_rawDescData = file_go_chromium_org_luci_tree_status_proto_v1_tree_status_proto_rawDesc
)

func file_go_chromium_org_luci_tree_status_proto_v1_tree_status_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_tree_status_proto_v1_tree_status_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_tree_status_proto_v1_tree_status_proto_rawDescData = protoimpl.X.CompressGZIP(file_go_chromium_org_luci_tree_status_proto_v1_tree_status_proto_rawDescData)
	})
	return file_go_chromium_org_luci_tree_status_proto_v1_tree_status_proto_rawDescData
}

var file_go_chromium_org_luci_tree_status_proto_v1_tree_status_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_go_chromium_org_luci_tree_status_proto_v1_tree_status_proto_goTypes = []interface{}{
	(*TreeStatusGetRequest)(nil),  // 0: luci.tree_status.v1.TreeStatusGetRequest
	(*TreeStatusGetResponse)(nil), // 1: luci.tree_status.v1.TreeStatusGetResponse
}
var file_go_chromium_org_luci_tree_status_proto_v1_tree_status_proto_depIdxs = []int32{
	0, // 0: luci.tree_status.v1.TreeStatus.Get:input_type -> luci.tree_status.v1.TreeStatusGetRequest
	1, // 1: luci.tree_status.v1.TreeStatus.Get:output_type -> luci.tree_status.v1.TreeStatusGetResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_tree_status_proto_v1_tree_status_proto_init() }
func file_go_chromium_org_luci_tree_status_proto_v1_tree_status_proto_init() {
	if File_go_chromium_org_luci_tree_status_proto_v1_tree_status_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_go_chromium_org_luci_tree_status_proto_v1_tree_status_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TreeStatusGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_tree_status_proto_v1_tree_status_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TreeStatusGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_go_chromium_org_luci_tree_status_proto_v1_tree_status_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_go_chromium_org_luci_tree_status_proto_v1_tree_status_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_tree_status_proto_v1_tree_status_proto_depIdxs,
		MessageInfos:      file_go_chromium_org_luci_tree_status_proto_v1_tree_status_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_tree_status_proto_v1_tree_status_proto = out.File
	file_go_chromium_org_luci_tree_status_proto_v1_tree_status_proto_rawDesc = nil
	file_go_chromium_org_luci_tree_status_proto_v1_tree_status_proto_goTypes = nil
	file_go_chromium_org_luci_tree_status_proto_v1_tree_status_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TreeStatusClient is the client API for TreeStatus service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TreeStatusClient interface {
	Get(ctx context.Context, in *TreeStatusGetRequest, opts ...grpc.CallOption) (*TreeStatusGetResponse, error)
}
type treeStatusPRPCClient struct {
	client *prpc.Client
}

func NewTreeStatusPRPCClient(client *prpc.Client) TreeStatusClient {
	return &treeStatusPRPCClient{client}
}

func (c *treeStatusPRPCClient) Get(ctx context.Context, in *TreeStatusGetRequest, opts ...grpc.CallOption) (*TreeStatusGetResponse, error) {
	out := new(TreeStatusGetResponse)
	err := c.client.Call(ctx, "luci.tree_status.v1.TreeStatus", "Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type treeStatusClient struct {
	cc grpc.ClientConnInterface
}

func NewTreeStatusClient(cc grpc.ClientConnInterface) TreeStatusClient {
	return &treeStatusClient{cc}
}

func (c *treeStatusClient) Get(ctx context.Context, in *TreeStatusGetRequest, opts ...grpc.CallOption) (*TreeStatusGetResponse, error) {
	out := new(TreeStatusGetResponse)
	err := c.cc.Invoke(ctx, "/luci.tree_status.v1.TreeStatus/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TreeStatusServer is the server API for TreeStatus service.
type TreeStatusServer interface {
	Get(context.Context, *TreeStatusGetRequest) (*TreeStatusGetResponse, error)
}

// UnimplementedTreeStatusServer can be embedded to have forward compatible implementations.
type UnimplementedTreeStatusServer struct {
}

func (*UnimplementedTreeStatusServer) Get(context.Context, *TreeStatusGetRequest) (*TreeStatusGetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}

func RegisterTreeStatusServer(s prpc.Registrar, srv TreeStatusServer) {
	s.RegisterService(&_TreeStatus_serviceDesc, srv)
}

func _TreeStatus_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TreeStatusGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TreeStatusServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luci.tree_status.v1.TreeStatus/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TreeStatusServer).Get(ctx, req.(*TreeStatusGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TreeStatus_serviceDesc = grpc.ServiceDesc{
	ServiceName: "luci.tree_status.v1.TreeStatus",
	HandlerType: (*TreeStatusServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _TreeStatus_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "go.chromium.org/luci/tree_status/proto/v1/tree_status.proto",
}
