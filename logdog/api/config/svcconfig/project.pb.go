// Code generated by protoc-gen-go. DO NOT EDIT.
// source: go.chromium.org/luci/logdog/api/config/svcconfig/project.proto

package svcconfig

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// ProjectConfig is a set of per-project configuration parameters. Each
// luci-config project must include one of these configs in order to register
// or view log streams in that project's log stream space.
//
// A project's configuration should reside in the "projects/<project>" config
// set and be named "<app-id>.cfg".
//
// Many of the parameters here can be bounded by GlobalConfig parameters.
type ProjectConfig struct {
	// The set of auth service groups that are permitted READ access to this
	// project's log streams.
	ReaderAuthGroups []string `protobuf:"bytes,2,rep,name=reader_auth_groups,json=readerAuthGroups,proto3" json:"reader_auth_groups,omitempty"`
	// The set of chrome-infra-auth groups that are permitted WRITE access to this
	// project's log streams.
	WriterAuthGroups []string `protobuf:"bytes,3,rep,name=writer_auth_groups,json=writerAuthGroups,proto3" json:"writer_auth_groups,omitempty"`
	// The maximum lifetime of a log stream.
	//
	// If a stream has not terminated after this period of time, it will be
	// forcefully archived, and additional stream data will be discarded.
	//
	// This is upper-bounded by the global "archive_delay_max" parameter.
	MaxStreamAge *duration.Duration `protobuf:"bytes,4,opt,name=max_stream_age,json=maxStreamAge,proto3" json:"max_stream_age,omitempty"`
	// The maximum amount of time after a prefix has been registered when log
	// streams may also be registered under that prefix.
	//
	// See Config's "prefix_expiration" for more information.
	PrefixExpiration *duration.Duration `protobuf:"bytes,5,opt,name=prefix_expiration,json=prefixExpiration,proto3" json:"prefix_expiration,omitempty"`
	// The archival Google Storage bucket name.
	//
	// Log streams artifacts will be stored in a subdirectory of this bucket:
	// gs://<archive_gs_bucket>/<app-id>/<project-name>/<log-path>/artifact...
	//
	// Note that the Archivist microservice must have WRITE access to this
	// bucket, and the Coordinator must have READ access.
	//
	// If this is not set, the logs will be archived in a project-named
	// subdirectory in the global "archive_gs_base" location.
	ArchiveGsBucket string `protobuf:"bytes,10,opt,name=archive_gs_bucket,json=archiveGsBucket,proto3" json:"archive_gs_bucket,omitempty"`
	// Project-specific archive index configuration.
	//
	// Any unspecified index configuration will default to the service archival
	// config.
	ArchiveIndexConfig   *ArchiveIndexConfig `protobuf:"bytes,12,opt,name=archive_index_config,json=archiveIndexConfig,proto3" json:"archive_index_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ProjectConfig) Reset()         { *m = ProjectConfig{} }
func (m *ProjectConfig) String() string { return proto.CompactTextString(m) }
func (*ProjectConfig) ProtoMessage()    {}
func (*ProjectConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_4b481a5cd36b270f, []int{0}
}

func (m *ProjectConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectConfig.Unmarshal(m, b)
}
func (m *ProjectConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectConfig.Marshal(b, m, deterministic)
}
func (m *ProjectConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectConfig.Merge(m, src)
}
func (m *ProjectConfig) XXX_Size() int {
	return xxx_messageInfo_ProjectConfig.Size(m)
}
func (m *ProjectConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectConfig proto.InternalMessageInfo

func (m *ProjectConfig) GetReaderAuthGroups() []string {
	if m != nil {
		return m.ReaderAuthGroups
	}
	return nil
}

func (m *ProjectConfig) GetWriterAuthGroups() []string {
	if m != nil {
		return m.WriterAuthGroups
	}
	return nil
}

func (m *ProjectConfig) GetMaxStreamAge() *duration.Duration {
	if m != nil {
		return m.MaxStreamAge
	}
	return nil
}

func (m *ProjectConfig) GetPrefixExpiration() *duration.Duration {
	if m != nil {
		return m.PrefixExpiration
	}
	return nil
}

func (m *ProjectConfig) GetArchiveGsBucket() string {
	if m != nil {
		return m.ArchiveGsBucket
	}
	return ""
}

func (m *ProjectConfig) GetArchiveIndexConfig() *ArchiveIndexConfig {
	if m != nil {
		return m.ArchiveIndexConfig
	}
	return nil
}

func init() {
	proto.RegisterType((*ProjectConfig)(nil), "svcconfig.ProjectConfig")
}

func init() {
	proto.RegisterFile("go.chromium.org/luci/logdog/api/config/svcconfig/project.proto", fileDescriptor_4b481a5cd36b270f)
}

var fileDescriptor_4b481a5cd36b270f = []byte{
	// 334 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x90, 0xcf, 0x4a, 0x33, 0x31,
	0x14, 0xc5, 0xe9, 0xd7, 0x7e, 0x62, 0xd3, 0xaa, 0x6d, 0x70, 0x31, 0x16, 0x94, 0xe2, 0xaa, 0x88,
	0x24, 0xa0, 0x7b, 0x4b, 0xfd, 0x57, 0x74, 0xa3, 0x8c, 0x0f, 0x10, 0xd2, 0x4c, 0x9a, 0x89, 0xce,
	0x4c, 0x86, 0x4c, 0x52, 0xe7, 0x1d, 0x7c, 0x69, 0x69, 0xee, 0xb4, 0x88, 0x2e, 0xc4, 0x5d, 0x72,
	0xcf, 0xef, 0x9e, 0x7b, 0x38, 0xe8, 0x4a, 0x19, 0x22, 0x52, 0x6b, 0x72, 0xed, 0x73, 0x62, 0xac,
	0xa2, 0x99, 0x17, 0x9a, 0x66, 0x46, 0x25, 0x46, 0x51, 0x5e, 0x6a, 0x2a, 0x4c, 0xb1, 0xd4, 0x8a,
	0x56, 0x2b, 0xd1, 0xbc, 0x4a, 0x6b, 0x5e, 0xa5, 0x70, 0xa4, 0xb4, 0xc6, 0x19, 0xdc, 0xdd, 0x0a,
	0xa3, 0xe9, 0x9f, 0xad, 0xb8, 0x15, 0xa9, 0x5e, 0xf1, 0x0c, 0xbc, 0x46, 0x27, 0xca, 0x18, 0x95,
	0x49, 0x1a, 0x7e, 0x0b, 0xbf, 0xa4, 0x89, 0xb7, 0xdc, 0x69, 0x53, 0x80, 0x7e, 0xfa, 0xd1, 0x46,
	0x7b, 0xcf, 0x70, 0xfd, 0x26, 0x18, 0xe0, 0x73, 0x84, 0xad, 0xe4, 0x89, 0xb4, 0x8c, 0x7b, 0x97,
	0x32, 0x65, 0x8d, 0x2f, 0xab, 0xe8, 0xdf, 0xb8, 0x3d, 0xe9, 0xc6, 0x03, 0x50, 0x66, 0xde, 0xa5,
	0xf3, 0x30, 0x5f, 0xd3, 0xef, 0x56, 0xbb, 0x6f, 0x74, 0x1b, 0x68, 0x50, 0xbe, 0xd0, 0x53, 0xb4,
	0x9f, 0xf3, 0x9a, 0x55, 0xce, 0x4a, 0x9e, 0x33, 0xae, 0x64, 0xd4, 0x19, 0xb7, 0x26, 0xbd, 0x8b,
	0x23, 0x02, 0x31, 0xc9, 0x26, 0x26, 0xb9, 0x6d, 0x62, 0xc6, 0xfd, 0x9c, 0xd7, 0x2f, 0x81, 0x9f,
	0x29, 0x89, 0xef, 0xd1, 0xb0, 0xb4, 0x72, 0xa9, 0x6b, 0x26, 0xeb, 0x52, 0x03, 0x12, 0xfd, 0xff,
	0xcd, 0x63, 0x00, 0x3b, 0x77, 0xdb, 0x15, 0x7c, 0x86, 0x86, 0x50, 0x94, 0x64, 0xaa, 0x62, 0x0b,
	0x2f, 0xde, 0xa4, 0x8b, 0xd0, 0xb8, 0x35, 0xe9, 0xc6, 0x07, 0x8d, 0x30, 0xaf, 0xae, 0xc3, 0x18,
	0x3f, 0xa1, 0xc3, 0x0d, 0xab, 0x8b, 0x44, 0xd6, 0x0c, 0x9a, 0x8e, 0xfa, 0xe1, 0xec, 0x31, 0xd9,
	0x76, 0x4f, 0x66, 0x80, 0x3d, 0xac, 0x29, 0x68, 0x33, 0xc6, 0xfc, 0xc7, 0xec, 0xb1, 0xb3, 0xdb,
	0x1b, 0xf4, 0x63, 0x6c, 0x65, 0x11, 0x5a, 0xce, 0xb2, 0xa6, 0x90, 0x6a, 0xb1, 0x13, 0xb2, 0x5f,
	0x7e, 0x06, 0x00, 0x00, 0xff, 0xff, 0x66, 0xf2, 0x21, 0xcf, 0x42, 0x02, 0x00, 0x00,
}
