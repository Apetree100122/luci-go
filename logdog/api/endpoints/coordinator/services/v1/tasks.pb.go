// Code generated by protoc-gen-go. DO NOT EDIT.
// source: go.chromium.org/luci/logdog/api/endpoints/coordinator/services/v1/tasks.proto

package logdog

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/duration"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// ArchiveTask is a task queue task description for the archival of a single
// log stream.
type ArchiveTask struct {
	// The name of the project that this stream is bound to.
	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// The hash ID of the log stream to archive.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// The TaskQueue Name of this task, used in the taskqueue pipeline.
	// This is required for ACKing.
	TaskName string `protobuf:"bytes,7,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`
	// TODO(hinoka): Remove this after crbug.com/923557
	// The archival key of the log stream. If this key doesn't match the key in
	// the log stream state, the request is superfluous and should be deleted.
	Key                  []byte   `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArchiveTask) Reset()         { *m = ArchiveTask{} }
func (m *ArchiveTask) String() string { return proto.CompactTextString(m) }
func (*ArchiveTask) ProtoMessage()    {}
func (*ArchiveTask) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd952f8ecee7e922, []int{0}
}

func (m *ArchiveTask) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArchiveTask.Unmarshal(m, b)
}
func (m *ArchiveTask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArchiveTask.Marshal(b, m, deterministic)
}
func (m *ArchiveTask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArchiveTask.Merge(m, src)
}
func (m *ArchiveTask) XXX_Size() int {
	return xxx_messageInfo_ArchiveTask.Size(m)
}
func (m *ArchiveTask) XXX_DiscardUnknown() {
	xxx_messageInfo_ArchiveTask.DiscardUnknown(m)
}

var xxx_messageInfo_ArchiveTask proto.InternalMessageInfo

func (m *ArchiveTask) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *ArchiveTask) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ArchiveTask) GetTaskName() string {
	if m != nil {
		return m.TaskName
	}
	return ""
}

func (m *ArchiveTask) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func init() {
	proto.RegisterType((*ArchiveTask)(nil), "logdog.ArchiveTask")
}

func init() {
	proto.RegisterFile("go.chromium.org/luci/logdog/api/endpoints/coordinator/services/v1/tasks.proto", fileDescriptor_cd952f8ecee7e922)
}

var fileDescriptor_cd952f8ecee7e922 = []byte{
	// 221 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0xce, 0xc1, 0x4e, 0xc3, 0x30,
	0x0c, 0x06, 0x60, 0xb5, 0x93, 0x36, 0x16, 0x10, 0x42, 0x3d, 0x45, 0x43, 0x82, 0x89, 0xd3, 0x4e,
	0xb5, 0x10, 0x4f, 0xc0, 0x03, 0xc0, 0x61, 0xe2, 0x8e, 0xb2, 0xc4, 0xcb, 0x4c, 0x9b, 0x38, 0x72,
	0xd2, 0x4a, 0xbc, 0x3d, 0x6a, 0x2b, 0x2e, 0xbb, 0xd9, 0x9f, 0x7f, 0xcb, 0x56, 0x1f, 0x9e, 0x5b,
	0x7b, 0x11, 0x0e, 0x34, 0x84, 0x96, 0xc5, 0x43, 0x3f, 0x58, 0x82, 0x9e, 0xbd, 0x63, 0x0f, 0x26,
	0x11, 0x60, 0x74, 0x89, 0x29, 0x96, 0x0c, 0x96, 0x59, 0x1c, 0x45, 0x53, 0x58, 0x20, 0xa3, 0x8c,
	0x64, 0x31, 0xc3, 0xf8, 0x0a, 0xc5, 0xe4, 0x2e, 0xb7, 0x49, 0xb8, 0x70, 0xb3, 0x5e, 0x36, 0x77,
	0x4f, 0x9e, 0xd9, 0xf7, 0x08, 0xb3, 0x9e, 0x86, 0x33, 0xb8, 0x41, 0x4c, 0x21, 0x8e, 0x4b, 0x6e,
	0xf7, 0x7c, 0x3d, 0x2f, 0x14, 0x30, 0x17, 0x13, 0xd2, 0x12, 0x78, 0x39, 0xab, 0xdb, 0x77, 0xb1,
	0x17, 0x1a, 0xf1, 0xcb, 0xe4, 0xae, 0xd1, 0x6a, 0x93, 0x84, 0x7f, 0xd0, 0x16, 0x5d, 0xed, 0xab,
	0xc3, 0xf6, 0xf8, 0xdf, 0x36, 0xf7, 0xaa, 0x26, 0xa7, 0xeb, 0x19, 0x6b, 0x72, 0xcd, 0xa3, 0xda,
	0x4e, 0x0f, 0x7d, 0x47, 0x13, 0x50, 0x6f, 0x66, 0xbe, 0x99, 0xe0, 0xd3, 0x04, 0x6c, 0x1e, 0xd4,
	0xaa, 0xc3, 0x5f, 0xbd, 0xda, 0x57, 0x87, 0xbb, 0xe3, 0x54, 0x9e, 0xd6, 0xf3, 0xb9, 0xb7, 0xbf,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x60, 0x80, 0xef, 0x0d, 0x08, 0x01, 0x00, 0x00,
}
