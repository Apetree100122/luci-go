// Copyright 2023 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.7
// source: go.chromium.org/luci/bisection/proto/v1/common.proto

package bisectionpb

import (
	proto "go.chromium.org/luci/buildbucket/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AnalysisStatus represents the result status of an analysis.
type AnalysisStatus int32

const (
	AnalysisStatus_ANALYSIS_STATUS_UNSPECIFIED AnalysisStatus = 0
	// The analysis has been created, but not yet started.
	// We don't have this status in code. It's here for backward-compatability.
	AnalysisStatus_CREATED AnalysisStatus = 1
	// The analysis is running, but results have not been finalised.
	AnalysisStatus_RUNNING AnalysisStatus = 2
	// The analysis has finished and found (and verified) the culprit.
	AnalysisStatus_FOUND AnalysisStatus = 3
	// The analysis has finished but no culprit/suspect has been found.
	AnalysisStatus_NOTFOUND AnalysisStatus = 4
	// The analysis resulted in an error.
	AnalysisStatus_ERROR AnalysisStatus = 5
	// The analysis found some suspects, either from heuristic or nth-section.
	AnalysisStatus_SUSPECTFOUND AnalysisStatus = 6
)

// Enum value maps for AnalysisStatus.
var (
	AnalysisStatus_name = map[int32]string{
		0: "ANALYSIS_STATUS_UNSPECIFIED",
		1: "CREATED",
		2: "RUNNING",
		3: "FOUND",
		4: "NOTFOUND",
		5: "ERROR",
		6: "SUSPECTFOUND",
	}
	AnalysisStatus_value = map[string]int32{
		"ANALYSIS_STATUS_UNSPECIFIED": 0,
		"CREATED":                     1,
		"RUNNING":                     2,
		"FOUND":                       3,
		"NOTFOUND":                    4,
		"ERROR":                       5,
		"SUSPECTFOUND":                6,
	}
)

func (x AnalysisStatus) Enum() *AnalysisStatus {
	p := new(AnalysisStatus)
	*p = x
	return p
}

func (x AnalysisStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AnalysisStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_go_chromium_org_luci_bisection_proto_v1_common_proto_enumTypes[0].Descriptor()
}

func (AnalysisStatus) Type() protoreflect.EnumType {
	return &file_go_chromium_org_luci_bisection_proto_v1_common_proto_enumTypes[0]
}

func (x AnalysisStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AnalysisStatus.Descriptor instead.
func (AnalysisStatus) EnumDescriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_bisection_proto_v1_common_proto_rawDescGZIP(), []int{0}
}

type RerunStatus int32

const (
	RerunStatus_RERUN_STATUS_UNSPECIFIED  RerunStatus = 0
	RerunStatus_RERUN_STATUS_IN_PROGRESS  RerunStatus = 1
	RerunStatus_RERUN_STATUS_PASSED       RerunStatus = 2
	RerunStatus_RERUN_STATUS_FAILED       RerunStatus = 3
	RerunStatus_RERUN_STATUS_INFRA_FAILED RerunStatus = 4
	RerunStatus_RERUN_STATUS_CANCELED     RerunStatus = 5
)

// Enum value maps for RerunStatus.
var (
	RerunStatus_name = map[int32]string{
		0: "RERUN_STATUS_UNSPECIFIED",
		1: "RERUN_STATUS_IN_PROGRESS",
		2: "RERUN_STATUS_PASSED",
		3: "RERUN_STATUS_FAILED",
		4: "RERUN_STATUS_INFRA_FAILED",
		5: "RERUN_STATUS_CANCELED",
	}
	RerunStatus_value = map[string]int32{
		"RERUN_STATUS_UNSPECIFIED":  0,
		"RERUN_STATUS_IN_PROGRESS":  1,
		"RERUN_STATUS_PASSED":       2,
		"RERUN_STATUS_FAILED":       3,
		"RERUN_STATUS_INFRA_FAILED": 4,
		"RERUN_STATUS_CANCELED":     5,
	}
)

func (x RerunStatus) Enum() *RerunStatus {
	p := new(RerunStatus)
	*p = x
	return p
}

func (x RerunStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RerunStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_go_chromium_org_luci_bisection_proto_v1_common_proto_enumTypes[1].Descriptor()
}

func (RerunStatus) Type() protoreflect.EnumType {
	return &file_go_chromium_org_luci_bisection_proto_v1_common_proto_enumTypes[1]
}

func (x RerunStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RerunStatus.Descriptor instead.
func (RerunStatus) EnumDescriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_bisection_proto_v1_common_proto_rawDescGZIP(), []int{1}
}

// RerunResult contains the result of one rerun.
// It is for the bots to update result back to LUCI Bisection.
type RerunResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Status of the rerun.
	RerunStatus RerunStatus `protobuf:"varint,1,opt,name=rerun_status,json=rerunStatus,proto3,enum=luci.bisection.v1.RerunStatus" json:"rerun_status,omitempty"`
	// Error message, in case of FAILED or INFRA_FAILED status.
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
}

func (x *RerunResult) Reset() {
	*x = RerunResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_bisection_proto_v1_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RerunResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RerunResult) ProtoMessage() {}

func (x *RerunResult) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_bisection_proto_v1_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RerunResult.ProtoReflect.Descriptor instead.
func (*RerunResult) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_bisection_proto_v1_common_proto_rawDescGZIP(), []int{0}
}

func (x *RerunResult) GetRerunStatus() RerunStatus {
	if x != nil {
		return x.RerunStatus
	}
	return RerunStatus_RERUN_STATUS_UNSPECIFIED
}

func (x *RerunResult) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// SingleRerun contains information about a single rerun.
// The same bot may be reused for multiple rerun (to speed up compilation time).
type SingleRerun struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Timestamp for the created time of the rerun.
	StartTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// Timestamp for the last updated time of the rerun.
	LastUpdatedTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=last_updated_time,json=lastUpdatedTime,proto3" json:"last_updated_time,omitempty"`
	// Timestamp for the end time of the rerun.
	EndTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// Buildbucket ID of the rerun build.
	Bbid int64 `protobuf:"varint,4,opt,name=bbid,proto3" json:"bbid,omitempty"`
	// Task ID of the rerun.
	TaskId string `protobuf:"bytes,5,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// ID of the bot.
	BotId string `protobuf:"bytes,6,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	// Result of the rerun.
	RerunResult *RerunResult `protobuf:"bytes,7,opt,name=rerun_result,json=rerunResult,proto3" json:"rerun_result,omitempty"`
	// Gitiles commit to do the rerun with.
	Commit *proto.GitilesCommit `protobuf:"bytes,8,opt,name=commit,proto3" json:"commit,omitempty"`
	// Index of the commit to rerun within the blamelist, if this is an
	// nth-section rerun. We need to use a string instead of an int here because
	// 0 is a possible valid value but would get lost due to the "omitempty" flag
	// in the generated proto.
	Index string `protobuf:"bytes,9,opt,name=index,proto3" json:"index,omitempty"`
	// Type of rerun: either "Culprit Verification" or "NthSection".
	Type string `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *SingleRerun) Reset() {
	*x = SingleRerun{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_bisection_proto_v1_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleRerun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleRerun) ProtoMessage() {}

func (x *SingleRerun) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_bisection_proto_v1_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleRerun.ProtoReflect.Descriptor instead.
func (*SingleRerun) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_bisection_proto_v1_common_proto_rawDescGZIP(), []int{1}
}

func (x *SingleRerun) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *SingleRerun) GetLastUpdatedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdatedTime
	}
	return nil
}

func (x *SingleRerun) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *SingleRerun) GetBbid() int64 {
	if x != nil {
		return x.Bbid
	}
	return 0
}

func (x *SingleRerun) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *SingleRerun) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

func (x *SingleRerun) GetRerunResult() *RerunResult {
	if x != nil {
		return x.RerunResult
	}
	return nil
}

func (x *SingleRerun) GetCommit() *proto.GitilesCommit {
	if x != nil {
		return x.Commit
	}
	return nil
}

func (x *SingleRerun) GetIndex() string {
	if x != nil {
		return x.Index
	}
	return ""
}

func (x *SingleRerun) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type SuspectVerificationDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The status of the suspect verification.
	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// The verification rerun build for the suspect commit.
	SuspectRerun *SingleRerun `protobuf:"bytes,2,opt,name=suspect_rerun,json=suspectRerun,proto3" json:"suspect_rerun,omitempty"`
	// The verification rerun build for the parent commit of the suspect.
	ParentRerun *SingleRerun `protobuf:"bytes,3,opt,name=parent_rerun,json=parentRerun,proto3" json:"parent_rerun,omitempty"`
}

func (x *SuspectVerificationDetails) Reset() {
	*x = SuspectVerificationDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_bisection_proto_v1_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuspectVerificationDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuspectVerificationDetails) ProtoMessage() {}

func (x *SuspectVerificationDetails) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_bisection_proto_v1_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuspectVerificationDetails.ProtoReflect.Descriptor instead.
func (*SuspectVerificationDetails) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_bisection_proto_v1_common_proto_rawDescGZIP(), []int{2}
}

func (x *SuspectVerificationDetails) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SuspectVerificationDetails) GetSuspectRerun() *SingleRerun {
	if x != nil {
		return x.SuspectRerun
	}
	return nil
}

func (x *SuspectVerificationDetails) GetParentRerun() *SingleRerun {
	if x != nil {
		return x.ParentRerun
	}
	return nil
}

var File_go_chromium_org_luci_bisection_proto_v1_common_proto protoreflect.FileDescriptor

var file_go_chromium_org_luci_bisection_proto_v1_common_proto_rawDesc = []byte{
	0x0a, 0x34, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x62, 0x69, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x62, 0x69, 0x73,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x33, 0x67, 0x6f, 0x2e, 0x63,
	0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69,
	0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x75, 0x0a, 0x0b, 0x52, 0x65, 0x72, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x41,
	0x0a, 0x0c, 0x72, 0x65, 0x72, 0x75, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x62, 0x69, 0x73, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x72, 0x75, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x0b, 0x72, 0x65, 0x72, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xaf, 0x03, 0x0a, 0x0b, 0x53, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x52, 0x65, 0x72, 0x75, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x46, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x62, 0x62, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x62, 0x62, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x15, 0x0a,
	0x06, 0x62, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62,
	0x6f, 0x74, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x0c, 0x72, 0x65, 0x72, 0x75, 0x6e, 0x5f, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6c, 0x75, 0x63,
	0x69, 0x2e, 0x62, 0x69, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x72, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0b, 0x72, 0x65, 0x72, 0x75,
	0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x35, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x69, 0x74, 0x69, 0x6c, 0x65, 0x73,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xbc, 0x01, 0x0a, 0x1a, 0x53, 0x75, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x43, 0x0a, 0x0d, 0x73, 0x75, 0x73, 0x70, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x72, 0x75, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x62, 0x69,
	0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x52, 0x65, 0x72, 0x75, 0x6e, 0x52, 0x0c, 0x73, 0x75, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x72, 0x75, 0x6e, 0x12, 0x41, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72,
	0x65, 0x72, 0x75, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6c, 0x75, 0x63,
	0x69, 0x2e, 0x62, 0x69, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x72, 0x75, 0x6e, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x72, 0x75, 0x6e, 0x2a, 0x81, 0x01, 0x0a, 0x0e, 0x41, 0x6e, 0x61, 0x6c,
	0x79, 0x73, 0x69, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x1b, 0x41, 0x4e,
	0x41, 0x4c, 0x59, 0x53, 0x49, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x43,
	0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e,
	0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x03,
	0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x4f, 0x54, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x04, 0x12, 0x09,
	0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x55, 0x53,
	0x50, 0x45, 0x43, 0x54, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x06, 0x2a, 0xb5, 0x01, 0x0a, 0x0b,
	0x52, 0x65, 0x72, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x18, 0x52,
	0x45, 0x52, 0x55, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x52, 0x45, 0x52,
	0x55, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f,
	0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x45, 0x52, 0x55, 0x4e,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x45, 0x44, 0x10, 0x02,
	0x12, 0x17, 0x0a, 0x13, 0x52, 0x45, 0x52, 0x55, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x45, 0x52,
	0x55, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x46, 0x52, 0x41, 0x5f,
	0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x45, 0x52, 0x55,
	0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x45,
	0x44, 0x10, 0x05, 0x42, 0x35, 0x5a, 0x33, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69,
	0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x62, 0x69, 0x73, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x3b, 0x62,
	0x69, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_go_chromium_org_luci_bisection_proto_v1_common_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_bisection_proto_v1_common_proto_rawDescData = file_go_chromium_org_luci_bisection_proto_v1_common_proto_rawDesc
)

func file_go_chromium_org_luci_bisection_proto_v1_common_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_bisection_proto_v1_common_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_bisection_proto_v1_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_go_chromium_org_luci_bisection_proto_v1_common_proto_rawDescData)
	})
	return file_go_chromium_org_luci_bisection_proto_v1_common_proto_rawDescData
}

var file_go_chromium_org_luci_bisection_proto_v1_common_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_go_chromium_org_luci_bisection_proto_v1_common_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_go_chromium_org_luci_bisection_proto_v1_common_proto_goTypes = []interface{}{
	(AnalysisStatus)(0),                // 0: luci.bisection.v1.AnalysisStatus
	(RerunStatus)(0),                   // 1: luci.bisection.v1.RerunStatus
	(*RerunResult)(nil),                // 2: luci.bisection.v1.RerunResult
	(*SingleRerun)(nil),                // 3: luci.bisection.v1.SingleRerun
	(*SuspectVerificationDetails)(nil), // 4: luci.bisection.v1.SuspectVerificationDetails
	(*timestamppb.Timestamp)(nil),      // 5: google.protobuf.Timestamp
	(*proto.GitilesCommit)(nil),        // 6: buildbucket.v2.GitilesCommit
}
var file_go_chromium_org_luci_bisection_proto_v1_common_proto_depIdxs = []int32{
	1, // 0: luci.bisection.v1.RerunResult.rerun_status:type_name -> luci.bisection.v1.RerunStatus
	5, // 1: luci.bisection.v1.SingleRerun.start_time:type_name -> google.protobuf.Timestamp
	5, // 2: luci.bisection.v1.SingleRerun.last_updated_time:type_name -> google.protobuf.Timestamp
	5, // 3: luci.bisection.v1.SingleRerun.end_time:type_name -> google.protobuf.Timestamp
	2, // 4: luci.bisection.v1.SingleRerun.rerun_result:type_name -> luci.bisection.v1.RerunResult
	6, // 5: luci.bisection.v1.SingleRerun.commit:type_name -> buildbucket.v2.GitilesCommit
	3, // 6: luci.bisection.v1.SuspectVerificationDetails.suspect_rerun:type_name -> luci.bisection.v1.SingleRerun
	3, // 7: luci.bisection.v1.SuspectVerificationDetails.parent_rerun:type_name -> luci.bisection.v1.SingleRerun
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_bisection_proto_v1_common_proto_init() }
func file_go_chromium_org_luci_bisection_proto_v1_common_proto_init() {
	if File_go_chromium_org_luci_bisection_proto_v1_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_go_chromium_org_luci_bisection_proto_v1_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RerunResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_bisection_proto_v1_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleRerun); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_bisection_proto_v1_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuspectVerificationDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_go_chromium_org_luci_bisection_proto_v1_common_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_chromium_org_luci_bisection_proto_v1_common_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_bisection_proto_v1_common_proto_depIdxs,
		EnumInfos:         file_go_chromium_org_luci_bisection_proto_v1_common_proto_enumTypes,
		MessageInfos:      file_go_chromium_org_luci_bisection_proto_v1_common_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_bisection_proto_v1_common_proto = out.File
	file_go_chromium_org_luci_bisection_proto_v1_common_proto_rawDesc = nil
	file_go_chromium_org_luci_bisection_proto_v1_common_proto_goTypes = nil
	file_go_chromium_org_luci_bisection_proto_v1_common_proto_depIdxs = nil
}
