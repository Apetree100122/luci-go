// Copyright 2022 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.12
// source: lucicfgfmtrc.proto

package buildifier

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LucicfgFmtConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rules []*LucicfgFmtConfig_Rules `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
}

func (x *LucicfgFmtConfig) Reset() {
	*x = LucicfgFmtConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lucicfgfmtrc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LucicfgFmtConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LucicfgFmtConfig) ProtoMessage() {}

func (x *LucicfgFmtConfig) ProtoReflect() protoreflect.Message {
	mi := &file_lucicfgfmtrc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LucicfgFmtConfig.ProtoReflect.Descriptor instead.
func (*LucicfgFmtConfig) Descriptor() ([]byte, []int) {
	return file_lucicfgfmtrc_proto_rawDescGZIP(), []int{0}
}

func (x *LucicfgFmtConfig) GetRules() []*LucicfgFmtConfig_Rules {
	if x != nil {
		return x.Rules
	}
	return nil
}

// Rules will contain paths that are associated with
// a specific ordering rule
type LucicfgFmtConfig_Rules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Forward-slash delimited path prefixes for which this Rules message applies.
	//
	// When loading this config, lucicfg will organize all Rules by path. Rules with
	// duplicate path values are not permitted (i.e. you cannot have two Rules with
	// a path of "something", nor can you have the path "something" duplicated within
	// a single Rules entry).
	//
	// When processing files, lucicfg will calculate the file's path as relative to
	// this .lucicfgfmtrc file, and will select a single Rules set based on the longest
	// matching path prefix. For example, if there are two Rules sets, one formatting
	// "a" and another formatting "a/folder", then for the file "a/folder/file.star",
	// only the second Rules set would apply.
	//
	// If NO Rules set matches the file path, then only default formatting will
	// occur (i.e. lucicfg will only apply formatting which is not controlled by
	// this Rules message. In particular, this means that formatting will not
	// attempt to reorder function call arguments in any way).
	Path []string `protobuf:"bytes,1,rep,name=path,proto3" json:"path,omitempty"`
	// FunctionArgsSort allows you to reorder the arguments at function call sites,
	// based on the name of the arguments.
	//
	// If this is set, then all functions will be sorted first by the order of its
	// `arg` field, and then alphanumerically. This implies that setting this message
	// without setting any `arg` values will sort all function call sites
	// alphabetically.
	//
	// If this message is completely omitted, no call site function argument reordering
	// will occur.
	//
	// The sorting only applies to kwarg-style arguments in files we want to format.
	FunctionArgsSort *LucicfgFmtConfig_Rules_FunctionArgsSort `protobuf:"bytes,2,opt,name=function_args_sort,json=functionArgsSort,proto3" json:"function_args_sort,omitempty"`
}

func (x *LucicfgFmtConfig_Rules) Reset() {
	*x = LucicfgFmtConfig_Rules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lucicfgfmtrc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LucicfgFmtConfig_Rules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LucicfgFmtConfig_Rules) ProtoMessage() {}

func (x *LucicfgFmtConfig_Rules) ProtoReflect() protoreflect.Message {
	mi := &file_lucicfgfmtrc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LucicfgFmtConfig_Rules.ProtoReflect.Descriptor instead.
func (*LucicfgFmtConfig_Rules) Descriptor() ([]byte, []int) {
	return file_lucicfgfmtrc_proto_rawDescGZIP(), []int{0, 0}
}

func (x *LucicfgFmtConfig_Rules) GetPath() []string {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *LucicfgFmtConfig_Rules) GetFunctionArgsSort() *LucicfgFmtConfig_Rules_FunctionArgsSort {
	if x != nil {
		return x.FunctionArgsSort
	}
	return nil
}

type LucicfgFmtConfig_Rules_FunctionArgsSort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Argument names in the order they should appear in calls.
	//
	// The ordering of an argument can be specific to a function by
	// specifying the argument name as <function-name>.<arg-name>, where
	// <function-name> is the name used at the callsite. The name the
	// function is defined with is not considered. This means that loading a
	// function with an alias will change which entries apply to calls to the
	// function. When the ordering for an argument is determined, if
	// <function-name>.<arg-name> is present, it will use the relative
	// ordering of that entry to determine the order of the argument in the
	// call. If <function-name>.<arg-name> is not present and <arg-name> is
	// present, it will use the relative ordering of that entry to determine
	// the order of the argument in the call. If neither
	// <function-name>.<arg-name> nor <arg-name> are present, then the
	// argument will appear in lexicographic order after any arguments that
	// are specified in the list.
	Arg []string `protobuf:"bytes,1,rep,name=arg,proto3" json:"arg,omitempty"`
}

func (x *LucicfgFmtConfig_Rules_FunctionArgsSort) Reset() {
	*x = LucicfgFmtConfig_Rules_FunctionArgsSort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lucicfgfmtrc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LucicfgFmtConfig_Rules_FunctionArgsSort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LucicfgFmtConfig_Rules_FunctionArgsSort) ProtoMessage() {}

func (x *LucicfgFmtConfig_Rules_FunctionArgsSort) ProtoReflect() protoreflect.Message {
	mi := &file_lucicfgfmtrc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LucicfgFmtConfig_Rules_FunctionArgsSort.ProtoReflect.Descriptor instead.
func (*LucicfgFmtConfig_Rules_FunctionArgsSort) Descriptor() ([]byte, []int) {
	return file_lucicfgfmtrc_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *LucicfgFmtConfig_Rules_FunctionArgsSort) GetArg() []string {
	if x != nil {
		return x.Arg
	}
	return nil
}

var File_lucicfgfmtrc_proto protoreflect.FileDescriptor

var file_lucicfgfmtrc_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6c, 0x75, 0x63, 0x69, 0x63, 0x66, 0x67, 0x66, 0x6d, 0x74, 0x72, 0x63, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x6c, 0x75, 0x63, 0x69, 0x63, 0x66, 0x67, 0x66, 0x6d, 0x74,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xff, 0x01, 0x0a, 0x10, 0x4c, 0x75, 0x63, 0x69, 0x63,
	0x66, 0x67, 0x46, 0x6d, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3e, 0x0a, 0x05, 0x72,
	0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6c, 0x75, 0x63,
	0x69, 0x63, 0x66, 0x67, 0x66, 0x6d, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4c, 0x75,
	0x63, 0x69, 0x63, 0x66, 0x67, 0x46, 0x6d, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52,
	0x75, 0x6c, 0x65, 0x73, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x1a, 0xaa, 0x01, 0x0a, 0x05,
	0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x67, 0x0a, 0x12, 0x66, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x63, 0x66, 0x67, 0x66,
	0x6d, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4c, 0x75, 0x63, 0x69, 0x63, 0x66, 0x67,
	0x46, 0x6d, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x2e,
	0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x67, 0x73, 0x53, 0x6f, 0x72, 0x74,
	0x52, 0x10, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x67, 0x73, 0x53, 0x6f,
	0x72, 0x74, 0x1a, 0x24, 0x0a, 0x10, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x72,
	0x67, 0x73, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x72, 0x67, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x03, 0x61, 0x72, 0x67, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x6f, 0x2e, 0x63,
	0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69,
	0x2f, 0x6c, 0x75, 0x63, 0x69, 0x63, 0x66, 0x67, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lucicfgfmtrc_proto_rawDescOnce sync.Once
	file_lucicfgfmtrc_proto_rawDescData = file_lucicfgfmtrc_proto_rawDesc
)

func file_lucicfgfmtrc_proto_rawDescGZIP() []byte {
	file_lucicfgfmtrc_proto_rawDescOnce.Do(func() {
		file_lucicfgfmtrc_proto_rawDescData = protoimpl.X.CompressGZIP(file_lucicfgfmtrc_proto_rawDescData)
	})
	return file_lucicfgfmtrc_proto_rawDescData
}

var file_lucicfgfmtrc_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_lucicfgfmtrc_proto_goTypes = []interface{}{
	(*LucicfgFmtConfig)(nil),                        // 0: lucicfgfmtconfig.LucicfgFmtConfig
	(*LucicfgFmtConfig_Rules)(nil),                  // 1: lucicfgfmtconfig.LucicfgFmtConfig.Rules
	(*LucicfgFmtConfig_Rules_FunctionArgsSort)(nil), // 2: lucicfgfmtconfig.LucicfgFmtConfig.Rules.FunctionArgsSort
}
var file_lucicfgfmtrc_proto_depIdxs = []int32{
	1, // 0: lucicfgfmtconfig.LucicfgFmtConfig.rules:type_name -> lucicfgfmtconfig.LucicfgFmtConfig.Rules
	2, // 1: lucicfgfmtconfig.LucicfgFmtConfig.Rules.function_args_sort:type_name -> lucicfgfmtconfig.LucicfgFmtConfig.Rules.FunctionArgsSort
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_lucicfgfmtrc_proto_init() }
func file_lucicfgfmtrc_proto_init() {
	if File_lucicfgfmtrc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_lucicfgfmtrc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LucicfgFmtConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lucicfgfmtrc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LucicfgFmtConfig_Rules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lucicfgfmtrc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LucicfgFmtConfig_Rules_FunctionArgsSort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lucicfgfmtrc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_lucicfgfmtrc_proto_goTypes,
		DependencyIndexes: file_lucicfgfmtrc_proto_depIdxs,
		MessageInfos:      file_lucicfgfmtrc_proto_msgTypes,
	}.Build()
	File_lucicfgfmtrc_proto = out.File
	file_lucicfgfmtrc_proto_rawDesc = nil
	file_lucicfgfmtrc_proto_goTypes = nil
	file_lucicfgfmtrc_proto_depIdxs = nil
}
