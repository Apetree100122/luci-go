// Code generated by protoc-gen-go. DO NOT EDIT.
// source: go.chromium.org/luci/lucicfg/external/crostesting/proto/config/target_test_requirements_config.proto

package config

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// A CrOS test suite.
type TestSuite struct {
	// The name of a CrOS test suite.
	TestSuiteName        string   `protobuf:"bytes,1,opt,name=test_suite_name,json=testSuiteName,proto3" json:"test_suite_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestSuite) Reset()         { *m = TestSuite{} }
func (m *TestSuite) String() string { return proto.CompactTextString(m) }
func (*TestSuite) ProtoMessage()    {}
func (*TestSuite) Descriptor() ([]byte, []int) {
	return fileDescriptor_efae681839d29e51, []int{0}
}

func (m *TestSuite) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestSuite.Unmarshal(m, b)
}
func (m *TestSuite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestSuite.Marshal(b, m, deterministic)
}
func (m *TestSuite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestSuite.Merge(m, src)
}
func (m *TestSuite) XXX_Size() int {
	return xxx_messageInfo_TestSuite.Size(m)
}
func (m *TestSuite) XXX_DiscardUnknown() {
	xxx_messageInfo_TestSuite.DiscardUnknown(m)
}

var xxx_messageInfo_TestSuite proto.InternalMessageInfo

func (m *TestSuite) GetTestSuiteName() string {
	if m != nil {
		return m.TestSuiteName
	}
	return ""
}

// Specifies a CrOS build, either by reference design or by a specific build
// target.
type BuildCriteria struct {
	// Types that are valid to be assigned to TargetType:
	//	*BuildCriteria_ReferenceDesign
	//	*BuildCriteria_BuildTarget
	TargetType           isBuildCriteria_TargetType `protobuf_oneof:"target_type"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *BuildCriteria) Reset()         { *m = BuildCriteria{} }
func (m *BuildCriteria) String() string { return proto.CompactTextString(m) }
func (*BuildCriteria) ProtoMessage()    {}
func (*BuildCriteria) Descriptor() ([]byte, []int) {
	return fileDescriptor_efae681839d29e51, []int{1}
}

func (m *BuildCriteria) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildCriteria.Unmarshal(m, b)
}
func (m *BuildCriteria) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildCriteria.Marshal(b, m, deterministic)
}
func (m *BuildCriteria) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildCriteria.Merge(m, src)
}
func (m *BuildCriteria) XXX_Size() int {
	return xxx_messageInfo_BuildCriteria.Size(m)
}
func (m *BuildCriteria) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildCriteria.DiscardUnknown(m)
}

var xxx_messageInfo_BuildCriteria proto.InternalMessageInfo

type isBuildCriteria_TargetType interface {
	isBuildCriteria_TargetType()
}

type BuildCriteria_ReferenceDesign struct {
	ReferenceDesign string `protobuf:"bytes,1,opt,name=reference_design,json=referenceDesign,proto3,oneof"`
}

type BuildCriteria_BuildTarget struct {
	BuildTarget string `protobuf:"bytes,2,opt,name=build_target,json=buildTarget,proto3,oneof"`
}

func (*BuildCriteria_ReferenceDesign) isBuildCriteria_TargetType() {}

func (*BuildCriteria_BuildTarget) isBuildCriteria_TargetType() {}

func (m *BuildCriteria) GetTargetType() isBuildCriteria_TargetType {
	if m != nil {
		return m.TargetType
	}
	return nil
}

func (m *BuildCriteria) GetReferenceDesign() string {
	if x, ok := m.GetTargetType().(*BuildCriteria_ReferenceDesign); ok {
		return x.ReferenceDesign
	}
	return ""
}

func (m *BuildCriteria) GetBuildTarget() string {
	if x, ok := m.GetTargetType().(*BuildCriteria_BuildTarget); ok {
		return x.BuildTarget
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*BuildCriteria) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*BuildCriteria_ReferenceDesign)(nil),
		(*BuildCriteria_BuildTarget)(nil),
	}
}

// Details which testing is needed for a single CrOS build target.
type PerTargetTestRequirements struct {
	// Specifies the builds to which these testing requirements should be applied.
	BuildCriteria *BuildCriteria `protobuf:"bytes,1,opt,name=build_criteria,json=buildCriteria,proto3" json:"build_criteria,omitempty"`
	// Test suites to run for builds matching the build criteria.
	TestSuite            []*TestSuite `protobuf:"bytes,2,rep,name=test_suite,json=testSuite,proto3" json:"test_suite,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PerTargetTestRequirements) Reset()         { *m = PerTargetTestRequirements{} }
func (m *PerTargetTestRequirements) String() string { return proto.CompactTextString(m) }
func (*PerTargetTestRequirements) ProtoMessage()    {}
func (*PerTargetTestRequirements) Descriptor() ([]byte, []int) {
	return fileDescriptor_efae681839d29e51, []int{2}
}

func (m *PerTargetTestRequirements) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PerTargetTestRequirements.Unmarshal(m, b)
}
func (m *PerTargetTestRequirements) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PerTargetTestRequirements.Marshal(b, m, deterministic)
}
func (m *PerTargetTestRequirements) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PerTargetTestRequirements.Merge(m, src)
}
func (m *PerTargetTestRequirements) XXX_Size() int {
	return xxx_messageInfo_PerTargetTestRequirements.Size(m)
}
func (m *PerTargetTestRequirements) XXX_DiscardUnknown() {
	xxx_messageInfo_PerTargetTestRequirements.DiscardUnknown(m)
}

var xxx_messageInfo_PerTargetTestRequirements proto.InternalMessageInfo

func (m *PerTargetTestRequirements) GetBuildCriteria() *BuildCriteria {
	if m != nil {
		return m.BuildCriteria
	}
	return nil
}

func (m *PerTargetTestRequirements) GetTestSuite() []*TestSuite {
	if m != nil {
		return m.TestSuite
	}
	return nil
}

// A listing of all testing that should be done for all CrOS builds.
type TargetTestRequirementsCfg struct {
	// The testing that should be performed for a single CrOS build target or
	// reference design.
	PerTargetTestRequirements []*PerTargetTestRequirements `protobuf:"bytes,1,rep,name=per_target_test_requirements,json=perTargetTestRequirements,proto3" json:"per_target_test_requirements,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                     `json:"-"`
	XXX_unrecognized          []byte                       `json:"-"`
	XXX_sizecache             int32                        `json:"-"`
}

func (m *TargetTestRequirementsCfg) Reset()         { *m = TargetTestRequirementsCfg{} }
func (m *TargetTestRequirementsCfg) String() string { return proto.CompactTextString(m) }
func (*TargetTestRequirementsCfg) ProtoMessage()    {}
func (*TargetTestRequirementsCfg) Descriptor() ([]byte, []int) {
	return fileDescriptor_efae681839d29e51, []int{3}
}

func (m *TargetTestRequirementsCfg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TargetTestRequirementsCfg.Unmarshal(m, b)
}
func (m *TargetTestRequirementsCfg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TargetTestRequirementsCfg.Marshal(b, m, deterministic)
}
func (m *TargetTestRequirementsCfg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TargetTestRequirementsCfg.Merge(m, src)
}
func (m *TargetTestRequirementsCfg) XXX_Size() int {
	return xxx_messageInfo_TargetTestRequirementsCfg.Size(m)
}
func (m *TargetTestRequirementsCfg) XXX_DiscardUnknown() {
	xxx_messageInfo_TargetTestRequirementsCfg.DiscardUnknown(m)
}

var xxx_messageInfo_TargetTestRequirementsCfg proto.InternalMessageInfo

func (m *TargetTestRequirementsCfg) GetPerTargetTestRequirements() []*PerTargetTestRequirements {
	if m != nil {
		return m.PerTargetTestRequirements
	}
	return nil
}

func init() {
	proto.RegisterType((*TestSuite)(nil), "crostesting.TestSuite")
	proto.RegisterType((*BuildCriteria)(nil), "crostesting.BuildCriteria")
	proto.RegisterType((*PerTargetTestRequirements)(nil), "crostesting.PerTargetTestRequirements")
	proto.RegisterType((*TargetTestRequirementsCfg)(nil), "crostesting.TargetTestRequirementsCfg")
}

func init() {
	proto.RegisterFile("go.chromium.org/luci/lucicfg/external/crostesting/proto/config/target_test_requirements_config.proto", fileDescriptor_efae681839d29e51)
}

var fileDescriptor_efae681839d29e51 = []byte{
	// 328 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0x4d, 0x85, 0x62, 0x27, 0xc6, 0x4a, 0x0e, 0x92, 0x8a, 0x87, 0x12, 0xa1, 0x14, 0x84,
	0x04, 0x5a, 0x7c, 0x00, 0x5b, 0x0f, 0x9e, 0x44, 0x62, 0x4f, 0x5e, 0x96, 0x74, 0x3b, 0x59, 0x17,
	0x9a, 0xdd, 0x38, 0xd9, 0x80, 0xde, 0x7d, 0x05, 0xdf, 0x57, 0xb2, 0x69, 0x6b, 0x03, 0xe6, 0x12,
	0xc8, 0xfc, 0xf3, 0xef, 0xfc, 0xdf, 0x0c, 0x6c, 0x84, 0x8e, 0xf8, 0x3b, 0xe9, 0x5c, 0x56, 0x79,
	0xa4, 0x49, 0xc4, 0xdb, 0x8a, 0x4b, 0xfb, 0xe1, 0x99, 0x88, 0xf1, 0xd3, 0x20, 0xa9, 0x74, 0x1b,
	0x73, 0xd2, 0xa5, 0xc1, 0xd2, 0x48, 0x25, 0xe2, 0x82, 0xb4, 0xd1, 0x31, 0xd7, 0x2a, 0x93, 0x22,
	0x36, 0x29, 0x09, 0x34, 0xac, 0xd6, 0x18, 0xe1, 0x47, 0x25, 0x09, 0x73, 0x54, 0xa6, 0x64, 0x8d,
	0x1e, 0xd9, 0x66, 0xdf, 0x3d, 0xf2, 0x87, 0x73, 0x18, 0xac, 0xb0, 0x34, 0xaf, 0x95, 0x34, 0xe8,
	0x4f, 0x60, 0x68, 0xbd, 0x65, 0xfd, 0xc7, 0x54, 0x9a, 0x63, 0xe0, 0x8c, 0x9d, 0xe9, 0x20, 0xf1,
	0xcc, 0xbe, 0xe7, 0x39, 0xcd, 0x31, 0x2c, 0xc0, 0x5b, 0x54, 0x72, 0xbb, 0x59, 0x92, 0x34, 0x48,
	0x32, 0xf5, 0xef, 0xe0, 0x92, 0x30, 0x43, 0x42, 0xc5, 0x91, 0x6d, 0xb0, 0x94, 0x42, 0x35, 0xce,
	0xa7, 0x93, 0x64, 0x78, 0x50, 0x1e, 0xad, 0xe0, 0xdf, 0xc2, 0xf9, 0xba, 0x76, 0xb3, 0x26, 0x6e,
	0xd0, 0xdb, 0x35, 0xba, 0xb6, 0xba, 0xb2, 0xc5, 0x85, 0x07, 0xee, 0x9e, 0xe6, 0xab, 0xc0, 0xf0,
	0xc7, 0x81, 0xd1, 0x0b, 0x52, 0x23, 0xd6, 0x81, 0x93, 0x23, 0x3c, 0xff, 0x01, 0x2e, 0x9a, 0x17,
	0xf9, 0x2e, 0x90, 0x1d, 0xee, 0xce, 0xae, 0xa3, 0x23, 0xd4, 0xa8, 0x15, 0x39, 0xf1, 0xd6, 0x2d,
	0x82, 0x7b, 0x80, 0x3f, 0xf4, 0xa0, 0x37, 0x3e, 0x9d, 0xba, 0xb3, 0xab, 0x96, 0xfd, 0xb0, 0xa6,
	0x64, 0x70, 0xd8, 0x46, 0xf8, 0xed, 0xc0, 0xe8, 0xff, 0x50, 0xcb, 0x4c, 0xf8, 0x02, 0x6e, 0x0a,
	0x24, 0xd6, 0x75, 0x96, 0xc0, 0xb1, 0x63, 0x26, 0xad, 0x31, 0x9d, 0x94, 0xc9, 0xa8, 0xe8, 0x92,
	0x16, 0x67, 0x6f, 0xfd, 0xe6, 0xc4, 0xeb, 0xbe, 0xbd, 0xf1, 0xfc, 0x37, 0x00, 0x00, 0xff, 0xff,
	0x07, 0x38, 0xff, 0x6b, 0x4b, 0x02, 0x00, 0x00,
}
