// Code generated by protoc-gen-go. DO NOT EDIT.
// source: go.chromium.org/luci/milo/api/config/settings.proto

package config

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Settings represents the format for the global (service) config for Milo.
type Settings struct {
	Buildbot    *Settings_Buildbot    `protobuf:"bytes,1,opt,name=buildbot,proto3" json:"buildbot,omitempty"`
	Buildbucket *Settings_Buildbucket `protobuf:"bytes,2,opt,name=buildbucket,proto3" json:"buildbucket,omitempty"`
	Swarming    *Settings_Swarming    `protobuf:"bytes,3,opt,name=swarming,proto3" json:"swarming,omitempty"`
	// source_acls instructs Milo to provide Git/Gerrit data
	// (e.g., blamelist) to some of its users on entire subdomains or individual
	// repositories (Gerrit "projects").
	//
	// Multiple records are allowed, but each host and project must appear only in
	// one record.
	SourceAcls           []*Settings_SourceAcls `protobuf:"bytes,4,rep,name=source_acls,json=sourceAcls,proto3" json:"source_acls,omitempty"`
	ResultDB             *Settings_ResultDB     `protobuf:"bytes,5,opt,name=resultDB,proto3" json:"resultDB,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Settings) Reset()         { *m = Settings{} }
func (m *Settings) String() string { return proto.CompactTextString(m) }
func (*Settings) ProtoMessage()    {}
func (*Settings) Descriptor() ([]byte, []int) {
	return fileDescriptor_98dd5cb9562385c0, []int{0}
}

func (m *Settings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Settings.Unmarshal(m, b)
}
func (m *Settings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Settings.Marshal(b, m, deterministic)
}
func (m *Settings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Settings.Merge(m, src)
}
func (m *Settings) XXX_Size() int {
	return xxx_messageInfo_Settings.Size(m)
}
func (m *Settings) XXX_DiscardUnknown() {
	xxx_messageInfo_Settings.DiscardUnknown(m)
}

var xxx_messageInfo_Settings proto.InternalMessageInfo

func (m *Settings) GetBuildbot() *Settings_Buildbot {
	if m != nil {
		return m.Buildbot
	}
	return nil
}

func (m *Settings) GetBuildbucket() *Settings_Buildbucket {
	if m != nil {
		return m.Buildbucket
	}
	return nil
}

func (m *Settings) GetSwarming() *Settings_Swarming {
	if m != nil {
		return m.Swarming
	}
	return nil
}

func (m *Settings) GetSourceAcls() []*Settings_SourceAcls {
	if m != nil {
		return m.SourceAcls
	}
	return nil
}

func (m *Settings) GetResultDB() *Settings_ResultDB {
	if m != nil {
		return m.ResultDB
	}
	return nil
}

type Settings_Buildbot struct {
	// internal_reader is the infra-auth group that is allowed to read internal
	// buildbot data.
	InternalReader string `protobuf:"bytes,1,opt,name=internal_reader,json=internalReader,proto3" json:"internal_reader,omitempty"`
	// public_subscription is the name of the pubsub topic where public builds come in
	// from
	PublicSubscription string `protobuf:"bytes,2,opt,name=public_subscription,json=publicSubscription,proto3" json:"public_subscription,omitempty"`
	// internal_subscription is the name of the pubsub topic where internal builds
	// come in from
	InternalSubscription string   `protobuf:"bytes,3,opt,name=internal_subscription,json=internalSubscription,proto3" json:"internal_subscription,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Settings_Buildbot) Reset()         { *m = Settings_Buildbot{} }
func (m *Settings_Buildbot) String() string { return proto.CompactTextString(m) }
func (*Settings_Buildbot) ProtoMessage()    {}
func (*Settings_Buildbot) Descriptor() ([]byte, []int) {
	return fileDescriptor_98dd5cb9562385c0, []int{0, 0}
}

func (m *Settings_Buildbot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Settings_Buildbot.Unmarshal(m, b)
}
func (m *Settings_Buildbot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Settings_Buildbot.Marshal(b, m, deterministic)
}
func (m *Settings_Buildbot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Settings_Buildbot.Merge(m, src)
}
func (m *Settings_Buildbot) XXX_Size() int {
	return xxx_messageInfo_Settings_Buildbot.Size(m)
}
func (m *Settings_Buildbot) XXX_DiscardUnknown() {
	xxx_messageInfo_Settings_Buildbot.DiscardUnknown(m)
}

var xxx_messageInfo_Settings_Buildbot proto.InternalMessageInfo

func (m *Settings_Buildbot) GetInternalReader() string {
	if m != nil {
		return m.InternalReader
	}
	return ""
}

func (m *Settings_Buildbot) GetPublicSubscription() string {
	if m != nil {
		return m.PublicSubscription
	}
	return ""
}

func (m *Settings_Buildbot) GetInternalSubscription() string {
	if m != nil {
		return m.InternalSubscription
	}
	return ""
}

type Settings_Buildbucket struct {
	// name is the user friendly name of the Buildbucket instance we're pointing to.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// host is the hostname of the buildbucket instance we're pointing to (sans scheme).
	Host string `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	// project is the name of the Google Cloud project that the pubsub topic
	// belongs to.
	Project              string   `protobuf:"bytes,3,opt,name=project,proto3" json:"project,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Settings_Buildbucket) Reset()         { *m = Settings_Buildbucket{} }
func (m *Settings_Buildbucket) String() string { return proto.CompactTextString(m) }
func (*Settings_Buildbucket) ProtoMessage()    {}
func (*Settings_Buildbucket) Descriptor() ([]byte, []int) {
	return fileDescriptor_98dd5cb9562385c0, []int{0, 1}
}

func (m *Settings_Buildbucket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Settings_Buildbucket.Unmarshal(m, b)
}
func (m *Settings_Buildbucket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Settings_Buildbucket.Marshal(b, m, deterministic)
}
func (m *Settings_Buildbucket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Settings_Buildbucket.Merge(m, src)
}
func (m *Settings_Buildbucket) XXX_Size() int {
	return xxx_messageInfo_Settings_Buildbucket.Size(m)
}
func (m *Settings_Buildbucket) XXX_DiscardUnknown() {
	xxx_messageInfo_Settings_Buildbucket.DiscardUnknown(m)
}

var xxx_messageInfo_Settings_Buildbucket proto.InternalMessageInfo

func (m *Settings_Buildbucket) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Settings_Buildbucket) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Settings_Buildbucket) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

type Settings_Swarming struct {
	// default_host is the hostname of the swarming host Milo defaults to, if
	// none is specified.  Default host is implicitly an allowed host.
	DefaultHost string `protobuf:"bytes,1,opt,name=default_host,json=defaultHost,proto3" json:"default_host,omitempty"`
	// allowed_hosts is a whitelist of hostnames of swarming instances
	// that Milo is allowed to talk to.  This is specified here for security
	// reasons, because Milo will hand out its oauth2 token to a swarming host.
	AllowedHosts         []string `protobuf:"bytes,2,rep,name=allowed_hosts,json=allowedHosts,proto3" json:"allowed_hosts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Settings_Swarming) Reset()         { *m = Settings_Swarming{} }
func (m *Settings_Swarming) String() string { return proto.CompactTextString(m) }
func (*Settings_Swarming) ProtoMessage()    {}
func (*Settings_Swarming) Descriptor() ([]byte, []int) {
	return fileDescriptor_98dd5cb9562385c0, []int{0, 2}
}

func (m *Settings_Swarming) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Settings_Swarming.Unmarshal(m, b)
}
func (m *Settings_Swarming) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Settings_Swarming.Marshal(b, m, deterministic)
}
func (m *Settings_Swarming) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Settings_Swarming.Merge(m, src)
}
func (m *Settings_Swarming) XXX_Size() int {
	return xxx_messageInfo_Settings_Swarming.Size(m)
}
func (m *Settings_Swarming) XXX_DiscardUnknown() {
	xxx_messageInfo_Settings_Swarming.DiscardUnknown(m)
}

var xxx_messageInfo_Settings_Swarming proto.InternalMessageInfo

func (m *Settings_Swarming) GetDefaultHost() string {
	if m != nil {
		return m.DefaultHost
	}
	return ""
}

func (m *Settings_Swarming) GetAllowedHosts() []string {
	if m != nil {
		return m.AllowedHosts
	}
	return nil
}

// SourceAcls grants read access on a set of Git/Gerrit hosts or projects.
type Settings_SourceAcls struct {
	// host grants read access on all project at this host.
	//
	// For more granularity, use the project field instead.
	//
	// For *.googlesource.com domains, host should not be a Gerrit host,
	// i.e.  it shouldn't be <subdomain>-review.googlesource.com.
	Hosts []string `protobuf:"bytes,1,rep,name=hosts,proto3" json:"hosts,omitempty"`
	// project is a URL to a Git repository.
	//
	// Read access is granted on both git data and Gerrit CLs of this project.
	//
	// For *.googlesource.com Git repositories:
	//   URL Path should not start with '/a/' (forced authentication).
	//   URL Path should not end with '.git' (redundant).
	Projects []string `protobuf:"bytes,2,rep,name=projects,proto3" json:"projects,omitempty"`
	// readers are allowed to read git/gerrit data from targets.
	//
	// Three types of identity strings are supported:
	//  * Emails.                   For example: "someuser@example.com"
	//  * Chrome-infra-auth Groups. For example: "group:committers"
	//  * Auth service identities.  For example: "kind:name"
	//
	// Required.
	Readers              []string `protobuf:"bytes,3,rep,name=readers,proto3" json:"readers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Settings_SourceAcls) Reset()         { *m = Settings_SourceAcls{} }
func (m *Settings_SourceAcls) String() string { return proto.CompactTextString(m) }
func (*Settings_SourceAcls) ProtoMessage()    {}
func (*Settings_SourceAcls) Descriptor() ([]byte, []int) {
	return fileDescriptor_98dd5cb9562385c0, []int{0, 3}
}

func (m *Settings_SourceAcls) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Settings_SourceAcls.Unmarshal(m, b)
}
func (m *Settings_SourceAcls) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Settings_SourceAcls.Marshal(b, m, deterministic)
}
func (m *Settings_SourceAcls) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Settings_SourceAcls.Merge(m, src)
}
func (m *Settings_SourceAcls) XXX_Size() int {
	return xxx_messageInfo_Settings_SourceAcls.Size(m)
}
func (m *Settings_SourceAcls) XXX_DiscardUnknown() {
	xxx_messageInfo_Settings_SourceAcls.DiscardUnknown(m)
}

var xxx_messageInfo_Settings_SourceAcls proto.InternalMessageInfo

func (m *Settings_SourceAcls) GetHosts() []string {
	if m != nil {
		return m.Hosts
	}
	return nil
}

func (m *Settings_SourceAcls) GetProjects() []string {
	if m != nil {
		return m.Projects
	}
	return nil
}

func (m *Settings_SourceAcls) GetReaders() []string {
	if m != nil {
		return m.Readers
	}
	return nil
}

type Settings_ResultDB struct {
	// host is the hostname of the ResultDB instance we're pointing to (sans scheme).
	Host                 string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Settings_ResultDB) Reset()         { *m = Settings_ResultDB{} }
func (m *Settings_ResultDB) String() string { return proto.CompactTextString(m) }
func (*Settings_ResultDB) ProtoMessage()    {}
func (*Settings_ResultDB) Descriptor() ([]byte, []int) {
	return fileDescriptor_98dd5cb9562385c0, []int{0, 4}
}

func (m *Settings_ResultDB) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Settings_ResultDB.Unmarshal(m, b)
}
func (m *Settings_ResultDB) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Settings_ResultDB.Marshal(b, m, deterministic)
}
func (m *Settings_ResultDB) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Settings_ResultDB.Merge(m, src)
}
func (m *Settings_ResultDB) XXX_Size() int {
	return xxx_messageInfo_Settings_ResultDB.Size(m)
}
func (m *Settings_ResultDB) XXX_DiscardUnknown() {
	xxx_messageInfo_Settings_ResultDB.DiscardUnknown(m)
}

var xxx_messageInfo_Settings_ResultDB proto.InternalMessageInfo

func (m *Settings_ResultDB) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func init() {
	proto.RegisterType((*Settings)(nil), "milo.Settings")
	proto.RegisterType((*Settings_Buildbot)(nil), "milo.Settings.Buildbot")
	proto.RegisterType((*Settings_Buildbucket)(nil), "milo.Settings.Buildbucket")
	proto.RegisterType((*Settings_Swarming)(nil), "milo.Settings.Swarming")
	proto.RegisterType((*Settings_SourceAcls)(nil), "milo.Settings.SourceAcls")
	proto.RegisterType((*Settings_ResultDB)(nil), "milo.Settings.ResultDB")
}

func init() {
	proto.RegisterFile("go.chromium.org/luci/milo/api/config/settings.proto", fileDescriptor_98dd5cb9562385c0)
}

var fileDescriptor_98dd5cb9562385c0 = []byte{
	// 424 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0xcf, 0x8e, 0xd3, 0x30,
	0x10, 0xc6, 0x95, 0x4d, 0xbb, 0xa4, 0x93, 0x05, 0x24, 0xb3, 0x08, 0x93, 0x03, 0x2a, 0x70, 0xa0,
	0xa7, 0x44, 0xda, 0xde, 0x10, 0x17, 0x2a, 0x0e, 0xdc, 0x90, 0xdc, 0x0b, 0xe2, 0x52, 0x39, 0xae,
	0x37, 0x6b, 0x70, 0xe2, 0xc8, 0x7f, 0xb4, 0xcf, 0xc2, 0xcb, 0xf1, 0x2c, 0xc8, 0x8e, 0x9d, 0x16,
	0xd4, 0xdb, 0xcc, 0x7c, 0xbf, 0xf9, 0xc6, 0x1e, 0x1b, 0xb6, 0x9d, 0xaa, 0xd9, 0x83, 0x56, 0xbd,
	0x70, 0x7d, 0xad, 0x74, 0xd7, 0x48, 0xc7, 0x44, 0xd3, 0x0b, 0xa9, 0x1a, 0x3a, 0x8a, 0x86, 0xa9,
	0xe1, 0x5e, 0x74, 0x8d, 0xe1, 0xd6, 0x8a, 0xa1, 0x33, 0xf5, 0xa8, 0x95, 0x55, 0x68, 0xe1, 0xf5,
	0x77, 0x7f, 0x96, 0x50, 0xec, 0xa3, 0x80, 0xb6, 0x50, 0xb4, 0x4e, 0xc8, 0x63, 0xab, 0x2c, 0xce,
	0xd6, 0xd9, 0xa6, 0xbc, 0x7b, 0x55, 0x7b, 0xaa, 0x4e, 0x44, 0xbd, 0x8b, 0x32, 0x99, 0x41, 0xf4,
	0x09, 0xca, 0x29, 0x76, 0xec, 0x17, 0xb7, 0xf8, 0x2a, 0xf4, 0x55, 0x17, 0xfb, 0x02, 0x41, 0xce,
	0x71, 0x3f, 0xd2, 0x3c, 0x52, 0xdd, 0x8b, 0xa1, 0xc3, 0xf9, 0xc5, 0x91, 0xfb, 0x28, 0x93, 0x19,
	0x44, 0x1f, 0xa1, 0x34, 0xca, 0x69, 0xc6, 0x0f, 0x94, 0x49, 0x83, 0x17, 0xeb, 0x7c, 0x53, 0xde,
	0xbd, 0xfe, 0xbf, 0x2f, 0x10, 0x9f, 0x99, 0x34, 0x04, 0xcc, 0x1c, 0xfb, 0x81, 0x9a, 0x1b, 0x27,
	0xed, 0x97, 0x1d, 0x5e, 0x5e, 0x1c, 0x48, 0xa2, 0x4c, 0x66, 0xb0, 0xfa, 0x9d, 0x41, 0x91, 0xae,
	0x8e, 0x3e, 0xc0, 0x73, 0x31, 0x58, 0xae, 0x07, 0x2a, 0x0f, 0x9a, 0xd3, 0x23, 0xd7, 0x61, 0x59,
	0x2b, 0xf2, 0x2c, 0x95, 0x49, 0xa8, 0xa2, 0x06, 0x5e, 0x8c, 0xae, 0x95, 0x82, 0x1d, 0x8c, 0x6b,
	0x0d, 0xd3, 0x62, 0xb4, 0x42, 0x0d, 0x61, 0x43, 0x2b, 0x82, 0x26, 0x69, 0x7f, 0xa6, 0xa0, 0x2d,
	0xbc, 0x9c, 0x9d, 0xff, 0x69, 0xc9, 0x43, 0xcb, 0x6d, 0x12, 0xcf, 0x9b, 0xaa, 0x6f, 0x50, 0x9e,
	0x6d, 0x17, 0x21, 0x58, 0x0c, 0xb4, 0xe7, 0xf1, 0x48, 0x21, 0xf6, 0xb5, 0x07, 0x65, 0x6c, 0x9c,
	0x1c, 0x62, 0x84, 0xe1, 0xc9, 0xa8, 0xd5, 0x4f, 0xce, 0x6c, 0x74, 0x4f, 0x69, 0x45, 0xa0, 0x48,
	0x3b, 0x47, 0x6f, 0xe1, 0xe6, 0xc8, 0xef, 0xa9, 0x93, 0xf6, 0x10, 0x1c, 0x26, 0xd7, 0x32, 0xd6,
	0xbe, 0x7a, 0xa3, 0xf7, 0xf0, 0x94, 0x4a, 0xa9, 0x1e, 0xf9, 0x31, 0x20, 0x06, 0x5f, 0xad, 0xf3,
	0xcd, 0x8a, 0xdc, 0xc4, 0xa2, 0x67, 0x4c, 0xf5, 0x1d, 0xe0, 0xf4, 0x1e, 0xe8, 0x16, 0x96, 0x13,
	0x9a, 0x05, 0x74, 0x4a, 0x50, 0x05, 0x45, 0x3c, 0x42, 0xf2, 0x98, 0x73, 0x7f, 0xda, 0x69, 0xd5,
	0x06, 0xe7, 0x41, 0x4a, 0x69, 0xf5, 0x06, 0x8a, 0xf4, 0x60, 0xf3, 0x3d, 0xb3, 0xd3, 0x3d, 0x77,
	0xc5, 0x8f, 0xeb, 0xe9, 0xff, 0xb7, 0xd7, 0xe1, 0xdf, 0x6f, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff,
	0x71, 0xa4, 0xbc, 0xb1, 0x2e, 0x03, 0x00, 0x00,
}
