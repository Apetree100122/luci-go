// Copyright 2018 The LUCI Authors. All rights reserved.
// Use of this source code is governed under the Apache License, Version 2.0
// that can be found in the LICENSE file.

syntax = "proto3";

package config;

// A description of a service account.
message ServiceAccount {
  // The email address of this service account.
  string email = 1;

  // The scopes available for this service account.
  repeated string scope = 2;
}

// A network access config type.
// GCE's default and only value is 1:1 NAT.
enum AccessConfigType {
  // 1:1 network address translation.
  ONE_TO_ONE_NAT = 0;
}

// A description of a network access config.
message AccessConfig {
  // The type of config this is.
  AccessConfigType type = 1;
}

// A description of a network interface.
message NetworkInterface {
  // The access configurations for this interface.
  // Required to enable external internet access.
  repeated AccessConfig access_config = 1;

  // The name of a network to use for this interface.
  // https://cloud.google.com/compute/docs/reference/rest/v1/networks/list.
  string network = 2;
}

// A description of a disk.
// https://cloud.google.com/compute/docs/reference/rest/v1/disks.
message Disk {
  // The name of an image to use to create this disk.
  // https://cloud.google.com/compute/docs/reference/rest/v1/images/list.
  string image = 1;

  // The size of this disk in GiB.
  int64 size = 2;

  // The name of a disk type to use for this disk.
  // https://cloud.google.com/compute/docs/reference/rest/v1/diskTypes/list.
  string type = 3;
}

// A description of instance metadata.
message Metadata {
  oneof metadata {
    // A string of the form "key:value" to use as one item of metadata.
    string from_text = 1;

    // A string of the form "key:filename".
    // The contents of the file are used as the value for one item of metadata.
    string from_file = 2;
  }
}

// A description of a VM.
// https://cloud.google.com/compute/docs/reference/rest/v1/instances.
message VM {
  // The disks to attach to this VM.
  repeated Disk disk = 1;

  // The name of a machine type to use for this VM.
  // https://cloud.google.com/compute/docs/reference/rest/v1/machineTypes/list.
  string machine_type = 2;

  // The metadata to attach to this VM.
  repeated Metadata metadata = 3;

  // The minimum CPU platform to use for this VM.
  // https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform.
  string min_cpu_platform = 4;

  // The network interfaces to configure for this VM.
  repeated NetworkInterface network_interface = 5;

  // The name of a GCP project to create this VM in.
  string project = 6;

  // The service accounts to make available to this VM.
  repeated ServiceAccount service_account = 7;

  // The name of a zone to create this VM in.
  // https://cloud.google.com/compute/docs/reference/rest/v1/zones/list.
  string zone = 8;
}

// A kind of VM.
message Kind {
  // The attributes of VMs of this kind.
  VM attributes = 1;

  // The name of this kind of VM.
  string name = 2;
}

// A kinds config.
message Kinds {
  // Available kinds of VMs.
  repeated Kind kind = 1;
}

// A length of time.
message TimePeriod {
  oneof time {
    // The length of time in <int><unit> form.
    // Valid units are "s", "m", "h", "d", and "mo", meaning
    // "seconds", "minutes", "hours", "days", "months" respectively.
    // A "day" is shorthand for 24 hours.
    // A "month" is shorthand for 30 days.
    string duration = 1;

    // The length of time in seconds.
    int64 seconds = 2;
  }
}

// A config for one type of VM.
message Config {
  // The amount of these VMs.
  int32 amount = 1;

  // The attributes of these VMs.
  // Attributes here override attributes in the kind.
  VM attributes = 2;

  // The name of a kind of VM.
  string kind = 3;

  // The lifetime of these VMs.
  // At the end of their lifetime, each VM is deleted and replaced.
  TimePeriod lifetime = 4;

  // The prefix to use when naming these VMs.
  string prefix = 6;

  // The hostname of the Swarming server these VMs should connect to.
  string swarming = 7;
}

// A config for several types of VMs.
message Configs {
  // The configs for different types of VMs.
  repeated Config vms = 1;
}
