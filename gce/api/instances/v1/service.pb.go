// Code generated by protoc-gen-go. DO NOT EDIT.
// source: go.chromium.org/luci/gce/api/instances/v1/service.proto

package instances

import prpc "go.chromium.org/luci/grpc/prpc"

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// A GCE instance configured to exist.
type Instance struct {
	// The ID of the VM this instance was created from.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The hostname of this instance.
	Hostname string `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	// The timestamp when this instance was created.
	Created *timestamp.Timestamp `protobuf:"bytes,3,opt,name=created,proto3" json:"created,omitempty"`
	// The lifetime of this instance.
	// At the end of its lifetime, the instance is deleted.
	Lifetime int64 `protobuf:"varint,4,opt,name=lifetime,proto3" json:"lifetime,omitempty"`
	// The hostname of the Swarming server this instance should connect to.
	Swarming string `protobuf:"bytes,5,opt,name=swarming,proto3" json:"swarming,omitempty"`
	// The timestamp when this instance connected to Swarming.
	Connected *timestamp.Timestamp `protobuf:"bytes,6,opt,name=connected,proto3" json:"connected,omitempty"`
	// The timeout of this instance.
	// If no Swarming bot has connected by the timeout, the instance is deleted.
	Timeout int64 `protobuf:"varint,7,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// Whether this instance is drained or not.
	// A drained instance will be safely deleted regardless of lifetime.
	Drained              bool     `protobuf:"varint,8,opt,name=drained,proto3" json:"drained,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Instance) Reset()         { *m = Instance{} }
func (m *Instance) String() string { return proto.CompactTextString(m) }
func (*Instance) ProtoMessage()    {}
func (*Instance) Descriptor() ([]byte, []int) {
	return fileDescriptor_85758a446589b372, []int{0}
}

func (m *Instance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Instance.Unmarshal(m, b)
}
func (m *Instance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Instance.Marshal(b, m, deterministic)
}
func (m *Instance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Instance.Merge(m, src)
}
func (m *Instance) XXX_Size() int {
	return xxx_messageInfo_Instance.Size(m)
}
func (m *Instance) XXX_DiscardUnknown() {
	xxx_messageInfo_Instance.DiscardUnknown(m)
}

var xxx_messageInfo_Instance proto.InternalMessageInfo

func (m *Instance) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Instance) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *Instance) GetCreated() *timestamp.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Instance) GetLifetime() int64 {
	if m != nil {
		return m.Lifetime
	}
	return 0
}

func (m *Instance) GetSwarming() string {
	if m != nil {
		return m.Swarming
	}
	return ""
}

func (m *Instance) GetConnected() *timestamp.Timestamp {
	if m != nil {
		return m.Connected
	}
	return nil
}

func (m *Instance) GetTimeout() int64 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *Instance) GetDrained() bool {
	if m != nil {
		return m.Drained
	}
	return false
}

// A request to delete an instance.
type DeleteRequest struct {
	// The ID of the instance to delete.
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_85758a446589b372, []int{1}
}

func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(m, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

func (m *DeleteRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// A request to get an existing instance.
type GetRequest struct {
	// The ID of the instance to get.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The hostname of the instance to get.
	Hostname             string   `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_85758a446589b372, []int{2}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetRequest) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

// A request to list existing instances.
type ListRequest struct {
	// The prefix to list instances for.
	Prefix string `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	// The value of next_page_token received in a ListResponse. Used to get the
	// next page of instances. If empty, gets the first page.
	PageToken            string   `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_85758a446589b372, []int{3}
}

func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (m *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(m, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

func (m *ListRequest) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

func (m *ListRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// A response to a request to list instances.
type ListResponse struct {
	// The prefix the instances are for.
	Prefix string `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	// The instances matching the prefix.
	Instances []*Instance `protobuf:"bytes,2,rep,name=instances,proto3" json:"instances,omitempty"`
	// The value to use as the page_token in a ListRequest to get the next page of
	// instances. If empty, there are no more instances.
	NextPageToken        string   `protobuf:"bytes,3,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListResponse) Reset()         { *m = ListResponse{} }
func (m *ListResponse) String() string { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()    {}
func (*ListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_85758a446589b372, []int{4}
}

func (m *ListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResponse.Unmarshal(m, b)
}
func (m *ListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResponse.Marshal(b, m, deterministic)
}
func (m *ListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResponse.Merge(m, src)
}
func (m *ListResponse) XXX_Size() int {
	return xxx_messageInfo_ListResponse.Size(m)
}
func (m *ListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListResponse proto.InternalMessageInfo

func (m *ListResponse) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

func (m *ListResponse) GetInstances() []*Instance {
	if m != nil {
		return m.Instances
	}
	return nil
}

func (m *ListResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func init() {
	proto.RegisterType((*Instance)(nil), "instances.Instance")
	proto.RegisterType((*DeleteRequest)(nil), "instances.DeleteRequest")
	proto.RegisterType((*GetRequest)(nil), "instances.GetRequest")
	proto.RegisterType((*ListRequest)(nil), "instances.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "instances.ListResponse")
}

func init() {
	proto.RegisterFile("go.chromium.org/luci/gce/api/instances/v1/service.proto", fileDescriptor_85758a446589b372)
}

var fileDescriptor_85758a446589b372 = []byte{
	// 441 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0xd1, 0x6e, 0x94, 0x40,
	0x14, 0x0d, 0x50, 0x77, 0x97, 0xbb, 0x56, 0x93, 0x31, 0xae, 0x13, 0x8c, 0x29, 0xe1, 0xc1, 0xf0,
	0x04, 0xd9, 0xd5, 0xa4, 0x8d, 0xcf, 0x35, 0x4d, 0x13, 0x1f, 0x0c, 0xe9, 0x7b, 0x43, 0xe1, 0x2e,
	0x9d, 0xb8, 0xcc, 0xe0, 0xcc, 0x50, 0xeb, 0xa3, 0xbf, 0xe0, 0xaf, 0xf8, 0x83, 0x66, 0x60, 0x07,
	0xb0, 0x75, 0xf5, 0xf1, 0x9c, 0x73, 0xef, 0x39, 0x97, 0xc3, 0xc0, 0x69, 0x25, 0x92, 0xe2, 0x56,
	0x8a, 0x9a, 0xb5, 0x75, 0x22, 0x64, 0x95, 0xee, 0xda, 0x82, 0xa5, 0x55, 0x81, 0x69, 0xde, 0xb0,
	0x94, 0x71, 0xa5, 0x73, 0x5e, 0xa0, 0x4a, 0xef, 0xd6, 0xa9, 0x42, 0x79, 0xc7, 0x0a, 0x4c, 0x1a,
	0x29, 0xb4, 0x20, 0xfe, 0xa0, 0x05, 0xaf, 0x2b, 0x21, 0xaa, 0x1d, 0xa6, 0x9d, 0x70, 0xd3, 0x6e,
	0x53, 0xac, 0x1b, 0xfd, 0xbd, 0x9f, 0x0b, 0x4e, 0x1e, 0x8a, 0x9a, 0xd5, 0xa8, 0x74, 0x5e, 0x37,
	0xfd, 0x40, 0xf4, 0xd3, 0x85, 0xc5, 0xe5, 0xde, 0x8b, 0x3c, 0x03, 0x97, 0x95, 0xd4, 0x09, 0x9d,
	0xd8, 0xcf, 0x5c, 0x56, 0x92, 0x00, 0x16, 0xb7, 0x42, 0x69, 0x9e, 0xd7, 0x48, 0xdd, 0x8e, 0x1d,
	0x30, 0x79, 0x0f, 0xf3, 0x42, 0x62, 0xae, 0xb1, 0xa4, 0x5e, 0xe8, 0xc4, 0xcb, 0x4d, 0x90, 0xf4,
	0x59, 0x89, 0xcd, 0x4a, 0xae, 0x6c, 0x56, 0x66, 0x47, 0x8d, 0xe3, 0x8e, 0x6d, 0xd1, 0x5c, 0x41,
	0x8f, 0x42, 0x27, 0xf6, 0xb2, 0x01, 0x1b, 0x4d, 0x7d, 0xcb, 0x65, 0xcd, 0x78, 0x45, 0x9f, 0xf4,
	0x69, 0x16, 0x93, 0x33, 0xf0, 0x0b, 0xc1, 0x39, 0x16, 0x26, 0x6f, 0xf6, 0xdf, 0xbc, 0x71, 0x98,
	0x50, 0x98, 0x1b, 0x77, 0xd1, 0x6a, 0x3a, 0xef, 0x02, 0x2d, 0x34, 0x4a, 0x29, 0x73, 0xc6, 0xb1,
	0xa4, 0x8b, 0xd0, 0x89, 0x17, 0x99, 0x85, 0xd1, 0x09, 0x1c, 0x9f, 0xe3, 0x0e, 0x35, 0x66, 0xf8,
	0xb5, 0x45, 0xa5, 0x1f, 0x16, 0x13, 0x9d, 0x01, 0x5c, 0xa0, 0x3e, 0xa0, 0xfe, 0xab, 0xb6, 0xe8,
	0x1c, 0x96, 0x9f, 0x98, 0x1a, 0x56, 0x57, 0x30, 0x6b, 0x24, 0x6e, 0xd9, 0xfd, 0x7e, 0x7d, 0x8f,
	0xc8, 0x1b, 0x80, 0x26, 0xaf, 0xf0, 0x5a, 0x8b, 0x2f, 0xc8, 0xf7, 0x26, 0xbe, 0x61, 0xae, 0x0c,
	0x11, 0xfd, 0x70, 0xe0, 0x69, 0x6f, 0xa3, 0x1a, 0xc1, 0x15, 0x1e, 0xf4, 0x59, 0xc3, 0xf8, 0x52,
	0xa8, 0x1b, 0x7a, 0xf1, 0x72, 0xf3, 0x22, 0x19, 0x98, 0xc4, 0xfe, 0xf9, 0x6c, 0x9c, 0x22, 0x6f,
	0xe1, 0x39, 0xc7, 0x7b, 0x7d, 0x3d, 0xc9, 0xf7, 0x3a, 0xcf, 0x63, 0x43, 0x7f, 0xb6, 0x37, 0x6c,
	0x7e, 0x39, 0xe0, 0x5f, 0x0e, 0x5b, 0x1f, 0x60, 0xd6, 0x57, 0x46, 0xe8, 0xc4, 0xff, 0x8f, 0x16,
	0x83, 0xd5, 0xa3, 0x3f, 0xf6, 0xd1, 0x3c, 0x55, 0xb2, 0x06, 0xef, 0x02, 0x35, 0x79, 0x39, 0x59,
	0x1c, 0xdb, 0x0d, 0xfe, 0x76, 0x2f, 0x39, 0x85, 0x23, 0xf3, 0xfd, 0x64, 0x35, 0x11, 0x27, 0xbd,
	0x06, 0xaf, 0x1e, 0xf1, 0x7d, 0x51, 0x37, 0xb3, 0x2e, 0xfb, 0xdd, 0xef, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xdb, 0x77, 0x31, 0xb4, 0x7a, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// InstancesClient is the client API for Instances service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InstancesClient interface {
	// Delete deletes an instance asynchronously.
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Get returns an existing instance.
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Instance, error)
	// List returns existing instances.
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
}
type instancesPRPCClient struct {
	client *prpc.Client
}

func NewInstancesPRPCClient(client *prpc.Client) InstancesClient {
	return &instancesPRPCClient{client}
}

func (c *instancesPRPCClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.client.Call(ctx, "instances.Instances", "Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *instancesPRPCClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Instance, error) {
	out := new(Instance)
	err := c.client.Call(ctx, "instances.Instances", "Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *instancesPRPCClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := c.client.Call(ctx, "instances.Instances", "List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type instancesClient struct {
	cc *grpc.ClientConn
}

func NewInstancesClient(cc *grpc.ClientConn) InstancesClient {
	return &instancesClient{cc}
}

func (c *instancesClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/instances.Instances/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *instancesClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Instance, error) {
	out := new(Instance)
	err := c.cc.Invoke(ctx, "/instances.Instances/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *instancesClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := c.cc.Invoke(ctx, "/instances.Instances/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InstancesServer is the server API for Instances service.
type InstancesServer interface {
	// Delete deletes an instance asynchronously.
	Delete(context.Context, *DeleteRequest) (*empty.Empty, error)
	// Get returns an existing instance.
	Get(context.Context, *GetRequest) (*Instance, error)
	// List returns existing instances.
	List(context.Context, *ListRequest) (*ListResponse, error)
}

func RegisterInstancesServer(s prpc.Registrar, srv InstancesServer) {
	s.RegisterService(&_Instances_serviceDesc, srv)
}

func _Instances_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InstancesServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/instances.Instances/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InstancesServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Instances_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InstancesServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/instances.Instances/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InstancesServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Instances_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InstancesServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/instances.Instances/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InstancesServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Instances_serviceDesc = grpc.ServiceDesc{
	ServiceName: "instances.Instances",
	HandlerType: (*InstancesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Delete",
			Handler:    _Instances_Delete_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Instances_Get_Handler,
		},
		{
			MethodName: "List",
			Handler:    _Instances_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "go.chromium.org/luci/gce/api/instances/v1/service.proto",
}
